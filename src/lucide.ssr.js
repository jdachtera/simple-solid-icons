import { ssrElement as _$ssrElement } from "solid-js/web";
import { mergeProps as _$mergeProps } from "solid-js/web";
import { ssr as _$ssr } from "solid-js/web";
var _tmpl$ = "<path d=\"M3.5 13h6\"></path>",
  _tmpl$2 = "<path d=\"m2 16 4.5-9 4.5 9\"></path>",
  _tmpl$3 = "<path d=\"M18 7v9\"></path>",
  _tmpl$4 = "<path d=\"m14 12 4 4 4-4\"></path>",
  _tmpl$5 = "<path d=\"M18 16V7\"></path>",
  _tmpl$6 = "<path d=\"m14 11 4-4 4 4\"></path>",
  _tmpl$7 = "<path d=\"M21 14h-5\"></path>",
  _tmpl$8 = "<path d=\"M16 16v-3.5a2.5 2.5 0 0 1 5 0V16\"></path>",
  _tmpl$9 = "<path d=\"M4.5 13h6\"></path>",
  _tmpl$0 = "<path d=\"m3 16 4.5-9 4.5 9\"></path>",
  _tmpl$1 = "<circle cx=\"16\" cy=\"4\" r=\"1\"></circle>",
  _tmpl$10 = "<path d=\"m18 19 1-7-6 1\"></path>",
  _tmpl$11 = "<path d=\"m5 8 3-3 5.5 3-2.36 3.5\"></path>",
  _tmpl$12 = "<path d=\"M4.24 14.5a5 5 0 0 0 6.88 6\"></path>",
  _tmpl$13 = "<path d=\"M13.76 17.5a5 5 0 0 0-6.88-6\"></path>",
  _tmpl$14 = "<path d=\"M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2\"></path>",
  _tmpl$15 = "<path d=\"M18 17.5a2.5 2.5 0 1 1-4 2.03V12\"></path>",
  _tmpl$16 = "<path d=\"M6 12H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\"></path>",
  _tmpl$17 = "<path d=\"M6 8h12\"></path>",
  _tmpl$18 = "<path d=\"M6.6 15.572A2 2 0 1 0 10 17v-5\"></path>",
  _tmpl$19 = "<path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path>",
  _tmpl$20 = "<path d=\"m12 15 5 6H7Z\"></path>",
  _tmpl$21 = "<circle cx=\"12\" cy=\"13\" r=\"8\"></circle>",
  _tmpl$22 = "<path d=\"M5 3 2 6\"></path>",
  _tmpl$23 = "<path d=\"m22 6-3-3\"></path>",
  _tmpl$24 = "<path d=\"M6.38 18.7 4 21\"></path>",
  _tmpl$25 = "<path d=\"M17.64 18.67 20 21\"></path>",
  _tmpl$26 = "<path d=\"m9 13 2 2 4-4\"></path>",
  _tmpl$27 = "<path d=\"M9 13h6\"></path>",
  _tmpl$28 = "<path d=\"M6.87 6.87a8 8 0 1 0 11.26 11.26\"></path>",
  _tmpl$29 = "<path d=\"M19.9 14.25a8 8 0 0 0-9.15-9.15\"></path>",
  _tmpl$30 = "<path d=\"M6.26 18.67 4 21\"></path>",
  _tmpl$31 = "<path d=\"m2 2 20 20\"></path>",
  _tmpl$32 = "<path d=\"M4 4 2 6\"></path>",
  _tmpl$33 = "<path d=\"M12 10v6\"></path>",
  _tmpl$34 = "<path d=\"M12 9v4l2 2\"></path>",
  _tmpl$35 = "<path d=\"M11 21c0-2.5 2-2.5 2-5\"></path>",
  _tmpl$36 = "<path d=\"M16 21c0-2.5 2-2.5 2-5\"></path>",
  _tmpl$37 = "<path d=\"m19 8-.8 3a1.25 1.25 0 0 1-1.2 1H7a1.25 1.25 0 0 1-1.2-1L5 8\"></path>",
  _tmpl$38 = "<path d=\"M21 3a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a1 1 0 0 1 1-1z\"></path>",
  _tmpl$39 = "<path d=\"M6 21c0-2.5 2-2.5 2-5\"></path>",
  _tmpl$40 = "<rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" ry=\"2\"></rect>",
  _tmpl$41 = "<polyline points=\"11 3 11 11 14 8 17 11 17 3\"></polyline>",
  _tmpl$42 = "<path d=\"M2 12h20\"></path>",
  _tmpl$43 = "<path d=\"M10 16v4a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-4\"></path>",
  _tmpl$44 = "<path d=\"M10 8V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4\"></path>",
  _tmpl$45 = "<path d=\"M20 16v1a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-1\"></path>",
  _tmpl$46 = "<path d=\"M14 8V7c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v1\"></path>",
  _tmpl$47 = "<path d=\"M12 2v20\"></path>",
  _tmpl$48 = "<path d=\"M8 10H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h4\"></path>",
  _tmpl$49 = "<path d=\"M16 10h4a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-4\"></path>",
  _tmpl$50 = "<path d=\"M8 20H7a2 2 0 0 1-2-2v-2c0-1.1.9-2 2-2h1\"></path>",
  _tmpl$51 = "<path d=\"M16 14h1a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-1\"></path>",
  _tmpl$52 = "<path d=\"M17 12H7\"></path>",
  _tmpl$53 = "<path d=\"M19 18H5\"></path>",
  _tmpl$54 = "<path d=\"M21 6H3\"></path>",
  _tmpl$55 = "<rect width=\"6\" height=\"16\" x=\"4\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$56 = "<rect width=\"6\" height=\"9\" x=\"14\" y=\"9\" rx=\"2\"></rect>",
  _tmpl$57 = "<path d=\"M22 22H2\"></path>",
  _tmpl$58 = "<rect width=\"16\" height=\"6\" x=\"2\" y=\"4\" rx=\"2\"></rect>",
  _tmpl$59 = "<rect width=\"9\" height=\"6\" x=\"9\" y=\"14\" rx=\"2\"></rect>",
  _tmpl$60 = "<path d=\"M22 22V2\"></path>",
  _tmpl$61 = "<rect width=\"6\" height=\"14\" x=\"4\" y=\"5\" rx=\"2\"></rect>",
  _tmpl$62 = "<rect width=\"6\" height=\"10\" x=\"14\" y=\"7\" rx=\"2\"></rect>",
  _tmpl$63 = "<path d=\"M17 22v-5\"></path>",
  _tmpl$64 = "<path d=\"M17 7V2\"></path>",
  _tmpl$65 = "<path d=\"M7 22v-3\"></path>",
  _tmpl$66 = "<path d=\"M7 5V2\"></path>",
  _tmpl$67 = "<path d=\"M10 2v20\"></path>",
  _tmpl$68 = "<path d=\"M20 2v20\"></path>",
  _tmpl$69 = "<path d=\"M4 2v20\"></path>",
  _tmpl$70 = "<path d=\"M14 2v20\"></path>",
  _tmpl$71 = "<rect width=\"6\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect>",
  _tmpl$72 = "<rect width=\"6\" height=\"10\" x=\"16\" y=\"7\" rx=\"2\"></rect>",
  _tmpl$73 = "<rect width=\"6\" height=\"10\" x=\"12\" y=\"7\" rx=\"2\"></rect>",
  _tmpl$74 = "<path d=\"M22 2v20\"></path>",
  _tmpl$75 = "<rect width=\"6\" height=\"14\" x=\"6\" y=\"5\" rx=\"2\"></rect>",
  _tmpl$76 = "<path d=\"M2 2v20\"></path>",
  _tmpl$77 = "<rect width=\"6\" height=\"10\" x=\"9\" y=\"7\" rx=\"2\"></rect>",
  _tmpl$78 = "<path d=\"M4 22V2\"></path>",
  _tmpl$79 = "<path d=\"M20 22V2\"></path>",
  _tmpl$80 = "<rect width=\"6\" height=\"14\" x=\"3\" y=\"5\" rx=\"2\"></rect>",
  _tmpl$81 = "<rect width=\"6\" height=\"10\" x=\"15\" y=\"7\" rx=\"2\"></rect>",
  _tmpl$82 = "<path d=\"M3 2v20\"></path>",
  _tmpl$83 = "<path d=\"M21 2v20\"></path>",
  _tmpl$84 = "<path d=\"M3 12h18\"></path>",
  _tmpl$85 = "<path d=\"M3 18h18\"></path>",
  _tmpl$86 = "<path d=\"M3 6h18\"></path>",
  _tmpl$87 = "<path d=\"M15 12H3\"></path>",
  _tmpl$88 = "<path d=\"M17 18H3\"></path>",
  _tmpl$89 = "<path d=\"M21 12H9\"></path>",
  _tmpl$90 = "<path d=\"M21 18H7\"></path>",
  _tmpl$91 = "<rect width=\"6\" height=\"16\" x=\"4\" y=\"6\" rx=\"2\"></rect>",
  _tmpl$92 = "<rect width=\"6\" height=\"9\" x=\"14\" y=\"6\" rx=\"2\"></rect>",
  _tmpl$93 = "<path d=\"M22 2H2\"></path>",
  _tmpl$94 = "<rect width=\"9\" height=\"6\" x=\"6\" y=\"14\" rx=\"2\"></rect>",
  _tmpl$95 = "<rect width=\"16\" height=\"6\" x=\"6\" y=\"4\" rx=\"2\"></rect>",
  _tmpl$96 = "<path d=\"M22 17h-3\"></path>",
  _tmpl$97 = "<path d=\"M22 7h-5\"></path>",
  _tmpl$98 = "<path d=\"M5 17H2\"></path>",
  _tmpl$99 = "<path d=\"M7 7H2\"></path>",
  _tmpl$100 = "<rect x=\"5\" y=\"14\" width=\"14\" height=\"6\" rx=\"2\"></rect>",
  _tmpl$101 = "<rect x=\"7\" y=\"4\" width=\"10\" height=\"6\" rx=\"2\"></rect>",
  _tmpl$102 = "<rect width=\"14\" height=\"6\" x=\"5\" y=\"14\" rx=\"2\"></rect>",
  _tmpl$103 = "<rect width=\"10\" height=\"6\" x=\"7\" y=\"4\" rx=\"2\"></rect>",
  _tmpl$104 = "<path d=\"M2 20h20\"></path>",
  _tmpl$105 = "<path d=\"M2 10h20\"></path>",
  _tmpl$106 = "<path d=\"M2 14h20\"></path>",
  _tmpl$107 = "<path d=\"M2 4h20\"></path>",
  _tmpl$108 = "<rect width=\"14\" height=\"6\" x=\"5\" y=\"16\" rx=\"2\"></rect>",
  _tmpl$109 = "<rect width=\"10\" height=\"6\" x=\"7\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$110 = "<rect width=\"14\" height=\"6\" x=\"5\" y=\"12\" rx=\"2\"></rect>",
  _tmpl$111 = "<path d=\"M2 22h20\"></path>",
  _tmpl$112 = "<rect width=\"10\" height=\"6\" x=\"7\" y=\"6\" rx=\"2\"></rect>",
  _tmpl$113 = "<path d=\"M2 2h20\"></path>",
  _tmpl$114 = "<rect width=\"10\" height=\"6\" x=\"7\" y=\"9\" rx=\"2\"></rect>",
  _tmpl$115 = "<path d=\"M22 20H2\"></path>",
  _tmpl$116 = "<path d=\"M22 4H2\"></path>",
  _tmpl$117 = "<rect width=\"14\" height=\"6\" x=\"5\" y=\"15\" rx=\"2\"></rect>",
  _tmpl$118 = "<rect width=\"10\" height=\"6\" x=\"7\" y=\"3\" rx=\"2\"></rect>",
  _tmpl$119 = "<path d=\"M2 21h20\"></path>",
  _tmpl$120 = "<path d=\"M2 3h20\"></path>",
  _tmpl$121 = "<path d=\"M10 10H6\"></path>",
  _tmpl$122 = "<path d=\"M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2\"></path>",
  _tmpl$123 = "<path d=\"M19 18h2a1 1 0 0 0 1-1v-3.28a1 1 0 0 0-.684-.948l-1.923-.641a1 1 0 0 1-.578-.502l-1.539-3.076A1 1 0 0 0 16.382 8H14\"></path>",
  _tmpl$124 = "<path d=\"M8 8v4\"></path>",
  _tmpl$125 = "<path d=\"M9 18h6\"></path>",
  _tmpl$126 = "<circle cx=\"17\" cy=\"18\" r=\"2\"></circle>",
  _tmpl$127 = "<circle cx=\"7\" cy=\"18\" r=\"2\"></circle>",
  _tmpl$128 = "<path d=\"M17.5 12c0 4.4-3.6 8-8 8A4.5 4.5 0 0 1 5 15.5c0-6 8-4 8-8.5a3 3 0 1 0-6 0c0 3 2.5 8.5 12 13\"></path>",
  _tmpl$129 = "<path d=\"M16 12h3\"></path>",
  _tmpl$130 = "<path d=\"M10 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5\"></path>",
  _tmpl$131 = "<path d=\"M22 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5\"></path>",
  _tmpl$132 = "<path d=\"M10 2v5.632c0 .424-.272.795-.653.982A6 6 0 0 0 6 14c.006 4 3 7 5 8\"></path>",
  _tmpl$133 = "<path d=\"M10 5H8a2 2 0 0 0 0 4h.68\"></path>",
  _tmpl$134 = "<path d=\"M14 2v5.632c0 .424.272.795.652.982A6 6 0 0 1 18 14c0 4-3 7-5 8\"></path>",
  _tmpl$135 = "<path d=\"M14 5h2a2 2 0 0 1 0 4h-.68\"></path>",
  _tmpl$136 = "<path d=\"M18 22H6\"></path>",
  _tmpl$137 = "<path d=\"M9 2h6\"></path>",
  _tmpl$138 = "<path d=\"M12 22V8\"></path>",
  _tmpl$139 = "<path d=\"M5 12H2a10 10 0 0 0 20 0h-3\"></path>",
  _tmpl$140 = "<circle cx=\"12\" cy=\"5\" r=\"3\"></circle>",
  _tmpl$141 = "<circle cx=\"12\" cy=\"12\" r=\"10\"></circle>",
  _tmpl$142 = "<path d=\"M16 16s-1.5-2-4-2-4 2-4 2\"></path>",
  _tmpl$143 = "<path d=\"M7.5 8 10 9\"></path>",
  _tmpl$144 = "<path d=\"m14 9 2.5-1\"></path>",
  _tmpl$145 = "<path d=\"M9 10h.01\"></path>",
  _tmpl$146 = "<path d=\"M15 10h.01\"></path>",
  _tmpl$147 = "<path d=\"M8 15h8\"></path>",
  _tmpl$148 = "<path d=\"M8 9h2\"></path>",
  _tmpl$149 = "<path d=\"M14 9h2\"></path>",
  _tmpl$150 = "<path d=\"M2 12 7 2\"></path>",
  _tmpl$151 = "<path d=\"m7 12 5-10\"></path>",
  _tmpl$152 = "<path d=\"m12 12 5-10\"></path>",
  _tmpl$153 = "<path d=\"m17 12 5-10\"></path>",
  _tmpl$154 = "<path d=\"M4.5 7h15\"></path>",
  _tmpl$155 = "<path d=\"M12 16v6\"></path>",
  _tmpl$156 = "<path d=\"M7 10H6a4 4 0 0 1-4-4 1 1 0 0 1 1-1h4\"></path>",
  _tmpl$157 = "<path d=\"M7 5a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1 7 7 0 0 1-7 7H8a1 1 0 0 1-1-1z\"></path>",
  _tmpl$158 = "<path d=\"M9 12v5\"></path>",
  _tmpl$159 = "<path d=\"M15 12v5\"></path>",
  _tmpl$160 = "<path d=\"M5 20a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3 1 1 0 0 1-1 1H6a1 1 0 0 1-1-1\"></path>",
  _tmpl$161 = "<path d=\"m14.31 8 5.74 9.94\"></path>",
  _tmpl$162 = "<path d=\"M9.69 8h11.48\"></path>",
  _tmpl$163 = "<path d=\"m7.38 12 5.74-9.94\"></path>",
  _tmpl$164 = "<path d=\"M9.69 16 3.95 6.06\"></path>",
  _tmpl$165 = "<path d=\"M14.31 16H2.83\"></path>",
  _tmpl$166 = "<path d=\"m16.62 12-5.74 9.94\"></path>",
  _tmpl$167 = "<rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\"></rect>",
  _tmpl$168 = "<path d=\"M6 8h.01\"></path>",
  _tmpl$169 = "<path d=\"M10 8h.01\"></path>",
  _tmpl$170 = "<path d=\"M14 8h.01\"></path>",
  _tmpl$171 = "<rect x=\"2\" y=\"4\" width=\"20\" height=\"16\" rx=\"2\"></rect>",
  _tmpl$172 = "<path d=\"M10 4v4\"></path>",
  _tmpl$173 = "<path d=\"M2 8h20\"></path>",
  _tmpl$174 = "<path d=\"M6 4v4\"></path>",
  _tmpl$175 = "<path d=\"M12 20.94c1.5 0 2.75 1.06 4 1.06 3 0 6-8 6-12.22A4.91 4.91 0 0 0 17 5c-2.22 0-4 1.44-5 2-1-.56-2.78-2-5-2a4.9 4.9 0 0 0-5 4.78C2 14 5 22 8 22c1.25 0 2.5-1.06 4-1.06Z\"></path>",
  _tmpl$176 = "<path d=\"M10 2c1 .5 2 2 2 5\"></path>",
  _tmpl$177 = "<rect width=\"20\" height=\"5\" x=\"2\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$178 = "<path d=\"M4 8v11a2 2 0 0 0 2 2h2\"></path>",
  _tmpl$179 = "<path d=\"M20 8v11a2 2 0 0 1-2 2h-2\"></path>",
  _tmpl$180 = "<path d=\"m9 15 3-3 3 3\"></path>",
  _tmpl$181 = "<path d=\"M12 12v9\"></path>",
  _tmpl$182 = "<path d=\"M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8\"></path>",
  _tmpl$183 = "<path d=\"m9.5 17 5-5\"></path>",
  _tmpl$184 = "<path d=\"m9.5 12 5 5\"></path>",
  _tmpl$185 = "<path d=\"M10 12h4\"></path>",
  _tmpl$186 = "<path d=\"M19 9V6a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v3\"></path>",
  _tmpl$187 = "<path d=\"M3 16a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v1.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V11a2 2 0 0 0-4 0z\"></path>",
  _tmpl$188 = "<path d=\"M5 18v2\"></path>",
  _tmpl$189 = "<path d=\"M19 18v2\"></path>",
  _tmpl$190 = "<path d=\"M15 5H9\"></path>",
  _tmpl$191 = "<path d=\"M15 9v3h4l-7 7-7-7h4V9z\"></path>",
  _tmpl$192 = "<path d=\"M15 6v6h4l-7 7-7-7h4V6h6z\"></path>",
  _tmpl$193 = "<path d=\"M19 15V9\"></path>",
  _tmpl$194 = "<path d=\"M15 15h-3v4l-7-7 7-7v4h3v6z\"></path>",
  _tmpl$195 = "<path d=\"M18 15h-6v4l-7-7 7-7v4h6v6z\"></path>",
  _tmpl$196 = "<path d=\"M5 9v6\"></path>",
  _tmpl$197 = "<path d=\"M9 9h3V5l7 7-7 7v-4H9V9z\"></path>",
  _tmpl$198 = "<path d=\"M6 9h6V5l7 7-7 7v-4H6V9z\"></path>",
  _tmpl$199 = "<path d=\"M9 19h6\"></path>",
  _tmpl$200 = "<path d=\"M9 15v-3H5l7-7 7 7h-4v3H9z\"></path>",
  _tmpl$201 = "<path d=\"M9 18v-6H5l7-7 7 7h-4v6H9z\"></path>",
  _tmpl$202 = "<path d=\"m3 16 4 4 4-4\"></path>",
  _tmpl$203 = "<path d=\"M7 20V4\"></path>",
  _tmpl$204 = "<rect x=\"15\" y=\"4\" width=\"4\" height=\"6\" ry=\"2\"></rect>",
  _tmpl$205 = "<path d=\"M17 20v-6h-2\"></path>",
  _tmpl$206 = "<path d=\"M15 20h4\"></path>",
  _tmpl$207 = "<path d=\"M17 10V4h-2\"></path>",
  _tmpl$208 = "<path d=\"M15 10h4\"></path>",
  _tmpl$209 = "<rect x=\"15\" y=\"14\" width=\"4\" height=\"6\" ry=\"2\"></rect>",
  _tmpl$210 = "<path d=\"M20 8h-5\"></path>",
  _tmpl$211 = "<path d=\"M15 10V6.5a2.5 2.5 0 0 1 5 0V10\"></path>",
  _tmpl$212 = "<path d=\"M15 14h5l-5 6h5\"></path>",
  _tmpl$213 = "<path d=\"M19 3H5\"></path>",
  _tmpl$214 = "<path d=\"M12 21V7\"></path>",
  _tmpl$215 = "<path d=\"m6 15 6 6 6-6\"></path>",
  _tmpl$216 = "<path d=\"M17 7 7 17\"></path>",
  _tmpl$217 = "<path d=\"M17 17H7V7\"></path>",
  _tmpl$218 = "<path d=\"M11 4h4\"></path>",
  _tmpl$219 = "<path d=\"M11 8h7\"></path>",
  _tmpl$220 = "<path d=\"M11 12h10\"></path>",
  _tmpl$221 = "<path d=\"m7 7 10 10\"></path>",
  _tmpl$222 = "<path d=\"M17 7v10H7\"></path>",
  _tmpl$223 = "<path d=\"M12 2v14\"></path>",
  _tmpl$224 = "<path d=\"m19 9-7 7-7-7\"></path>",
  _tmpl$225 = "<circle cx=\"12\" cy=\"21\" r=\"1\"></circle>",
  _tmpl$226 = "<path d=\"M12 17V3\"></path>",
  _tmpl$227 = "<path d=\"m6 11 6 6 6-6\"></path>",
  _tmpl$228 = "<path d=\"M19 21H5\"></path>",
  _tmpl$229 = "<path d=\"m21 8-4-4-4 4\"></path>",
  _tmpl$230 = "<path d=\"M17 4v16\"></path>",
  _tmpl$231 = "<path d=\"M11 4h10\"></path>",
  _tmpl$232 = "<path d=\"M11 12h4\"></path>",
  _tmpl$233 = "<path d=\"M7 4v16\"></path>",
  _tmpl$234 = "<path d=\"M15 4h5l-5 6h5\"></path>",
  _tmpl$235 = "<path d=\"M15 20v-3.5a2.5 2.5 0 0 1 5 0V20\"></path>",
  _tmpl$236 = "<path d=\"M20 18h-5\"></path>",
  _tmpl$237 = "<path d=\"M12 5v14\"></path>",
  _tmpl$238 = "<path d=\"m19 12-7 7-7-7\"></path>",
  _tmpl$239 = "<path d=\"m9 6-6 6 6 6\"></path>",
  _tmpl$240 = "<path d=\"M3 12h14\"></path>",
  _tmpl$241 = "<path d=\"M21 19V5\"></path>",
  _tmpl$242 = "<path d=\"M8 3 4 7l4 4\"></path>",
  _tmpl$243 = "<path d=\"M4 7h16\"></path>",
  _tmpl$244 = "<path d=\"m16 21 4-4-4-4\"></path>",
  _tmpl$245 = "<path d=\"M20 17H4\"></path>",
  _tmpl$246 = "<path d=\"M3 19V5\"></path>",
  _tmpl$247 = "<path d=\"m13 6-6 6 6 6\"></path>",
  _tmpl$248 = "<path d=\"M7 12h14\"></path>",
  _tmpl$249 = "<path d=\"m12 19-7-7 7-7\"></path>",
  _tmpl$250 = "<path d=\"M19 12H5\"></path>",
  _tmpl$251 = "<path d=\"M3 5v14\"></path>",
  _tmpl$252 = "<path d=\"M21 12H7\"></path>",
  _tmpl$253 = "<path d=\"m15 18 6-6-6-6\"></path>",
  _tmpl$254 = "<path d=\"m16 3 4 4-4 4\"></path>",
  _tmpl$255 = "<path d=\"M20 7H4\"></path>",
  _tmpl$256 = "<path d=\"m8 21-4-4 4-4\"></path>",
  _tmpl$257 = "<path d=\"M4 17h16\"></path>",
  _tmpl$258 = "<path d=\"M17 12H3\"></path>",
  _tmpl$259 = "<path d=\"m11 18 6-6-6-6\"></path>",
  _tmpl$260 = "<path d=\"M21 5v14\"></path>",
  _tmpl$261 = "<path d=\"M5 12h14\"></path>",
  _tmpl$262 = "<path d=\"m12 5 7 7-7 7\"></path>",
  _tmpl$263 = "<path d=\"m3 8 4-4 4 4\"></path>",
  _tmpl$264 = "<path d=\"m21 16-4 4-4-4\"></path>",
  _tmpl$265 = "<path d=\"M17 20V4\"></path>",
  _tmpl$266 = "<path d=\"m5 9 7-7 7 7\"></path>",
  _tmpl$267 = "<path d=\"M12 16V2\"></path>",
  _tmpl$268 = "<path d=\"m18 9-6-6-6 6\"></path>",
  _tmpl$269 = "<path d=\"M12 3v14\"></path>",
  _tmpl$270 = "<path d=\"M5 21h14\"></path>",
  _tmpl$271 = "<path d=\"M7 17V7h10\"></path>",
  _tmpl$272 = "<path d=\"M17 17 7 7\"></path>",
  _tmpl$273 = "<path d=\"M11 16h7\"></path>",
  _tmpl$274 = "<path d=\"M11 20h10\"></path>",
  _tmpl$275 = "<path d=\"M7 7h10v10\"></path>",
  _tmpl$276 = "<path d=\"M7 17 17 7\"></path>",
  _tmpl$277 = "<path d=\"M5 3h14\"></path>",
  _tmpl$278 = "<path d=\"m18 13-6-6-6 6\"></path>",
  _tmpl$279 = "<path d=\"M12 7v14\"></path>",
  _tmpl$280 = "<path d=\"M11 20h4\"></path>",
  _tmpl$281 = "<path d=\"m5 12 7-7 7 7\"></path>",
  _tmpl$282 = "<path d=\"M12 19V5\"></path>",
  _tmpl$283 = "<path d=\"m4 6 3-3 3 3\"></path>",
  _tmpl$284 = "<path d=\"M7 17V3\"></path>",
  _tmpl$285 = "<path d=\"m14 6 3-3 3 3\"></path>",
  _tmpl$286 = "<path d=\"M17 17V3\"></path>",
  _tmpl$287 = "<path d=\"M4 21h16\"></path>",
  _tmpl$288 = "<path d=\"M12 6v12\"></path>",
  _tmpl$289 = "<path d=\"M17.196 9 6.804 15\"></path>",
  _tmpl$290 = "<path d=\"m6.804 9 10.392 6\"></path>",
  _tmpl$291 = "<circle cx=\"12\" cy=\"12\" r=\"4\"></circle>",
  _tmpl$292 = "<path d=\"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-4 8\"></path>",
  _tmpl$293 = "<circle cx=\"12\" cy=\"12\" r=\"1\"></circle>",
  _tmpl$294 = "<path d=\"M20.2 20.2c2.04-2.03.02-7.36-4.5-11.9-4.54-4.52-9.87-6.54-11.9-4.5-2.04 2.03-.02 7.36 4.5 11.9 4.54 4.52 9.87 6.54 11.9 4.5Z\"></path>",
  _tmpl$295 = "<path d=\"M15.7 15.7c4.52-4.54 6.54-9.87 4.5-11.9-2.03-2.04-7.36-.02-11.9 4.5-4.52 4.54-6.54 9.87-4.5 11.9 2.03 2.04 7.36.02 11.9-4.5Z\"></path>",
  _tmpl$296 = "<path d=\"M2 10v3\"></path>",
  _tmpl$297 = "<path d=\"M6 6v11\"></path>",
  _tmpl$298 = "<path d=\"M10 3v18\"></path>",
  _tmpl$299 = "<path d=\"M14 8v7\"></path>",
  _tmpl$300 = "<path d=\"M18 5v13\"></path>",
  _tmpl$301 = "<path d=\"M22 10v3\"></path>",
  _tmpl$302 = "<path d=\"M2 13a2 2 0 0 0 2-2V7a2 2 0 0 1 4 0v13a2 2 0 0 0 4 0V4a2 2 0 0 1 4 0v13a2 2 0 0 0 4 0v-4a2 2 0 0 1 2-2\"></path>",
  _tmpl$303 = "<path d=\"m15.477 12.89 1.515 8.526a.5.5 0 0 1-.81.47l-3.58-2.687a1 1 0 0 0-1.197 0l-3.586 2.686a.5.5 0 0 1-.81-.469l1.514-8.526\"></path>",
  _tmpl$304 = "<circle cx=\"12\" cy=\"8\" r=\"6\"></circle>",
  _tmpl$305 = "<path d=\"m14 12-8.381 8.38a1 1 0 0 1-3.001-3L11 9\"></path>",
  _tmpl$306 = "<path d=\"M15 15.5a.5.5 0 0 0 .5.5A6.5 6.5 0 0 0 22 9.5a.5.5 0 0 0-.5-.5h-1.672a2 2 0 0 1-1.414-.586l-5.062-5.062a1.205 1.205 0 0 0-1.704 0L9.352 5.648a1.205 1.205 0 0 0 0 1.704l5.062 5.062A2 2 0 0 1 15 13.828z\"></path>",
  _tmpl$307 = "<path d=\"M13.5 10.5 15 9\"></path>",
  _tmpl$308 = "<path d=\"M4 4v15a1 1 0 0 0 1 1h15\"></path>",
  _tmpl$309 = "<path d=\"M4.293 19.707 6 18\"></path>",
  _tmpl$310 = "<path d=\"m9 15 1.5-1.5\"></path>",
  _tmpl$311 = "<path d=\"M10 16c.5.3 1.2.5 2 .5s1.5-.2 2-.5\"></path>",
  _tmpl$312 = "<path d=\"M15 12h.01\"></path>",
  _tmpl$313 = "<path d=\"M19.38 6.813A9 9 0 0 1 20.8 10.2a2 2 0 0 1 0 3.6 9 9 0 0 1-17.6 0 2 2 0 0 1 0-3.6A9 9 0 0 1 12 3c2 0 3.5 1.1 3.5 2.5s-.9 2.5-2 2.5c-.8 0-1.5-.4-1.5-1\"></path>",
  _tmpl$314 = "<path d=\"M9 12h.01\"></path>",
  _tmpl$315 = "<path d=\"M4 10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z\"></path>",
  _tmpl$316 = "<path d=\"M8 10h8\"></path>",
  _tmpl$317 = "<path d=\"M8 18h8\"></path>",
  _tmpl$318 = "<path d=\"M8 22v-6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v6\"></path>",
  _tmpl$319 = "<path d=\"M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2\"></path>",
  _tmpl$320 = "<path d=\"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\"></path>",
  _tmpl$321 = "<line x1=\"12\" x2=\"12\" y1=\"8\" y2=\"12\"></line>",
  _tmpl$322 = "<line x1=\"12\" x2=\"12.01\" y1=\"16\" y2=\"16\"></line>",
  _tmpl$323 = "<path d=\"M12 7v10\"></path>",
  _tmpl$324 = "<path d=\"M15.4 10a4 4 0 1 0 0 4\"></path>",
  _tmpl$325 = "<path d=\"m9 12 2 2 4-4\"></path>",
  _tmpl$326 = "<path d=\"M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8\"></path>",
  _tmpl$327 = "<path d=\"M12 18V6\"></path>",
  _tmpl$328 = "<path d=\"M7 12h5\"></path>",
  _tmpl$329 = "<path d=\"M15 9.4a4 4 0 1 0 0 5.2\"></path>",
  _tmpl$330 = "<path d=\"M8 8h8\"></path>",
  _tmpl$331 = "<path d=\"M8 12h8\"></path>",
  _tmpl$332 = "<path d=\"m13 17-5-1h1a4 4 0 0 0 0-8\"></path>",
  _tmpl$333 = "<line x1=\"12\" x2=\"12\" y1=\"16\" y2=\"12\"></line>",
  _tmpl$334 = "<line x1=\"12\" x2=\"12.01\" y1=\"8\" y2=\"8\"></line>",
  _tmpl$335 = "<path d=\"m9 8 3 3v7\"></path>",
  _tmpl$336 = "<path d=\"m12 11 3-3\"></path>",
  _tmpl$337 = "<path d=\"M9 12h6\"></path>",
  _tmpl$338 = "<path d=\"M9 16h6\"></path>",
  _tmpl$339 = "<line x1=\"8\" x2=\"16\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$340 = "<path d=\"m15 9-6 6\"></path>",
  _tmpl$341 = "<path d=\"M9 9h.01\"></path>",
  _tmpl$342 = "<path d=\"M15 15h.01\"></path>",
  _tmpl$343 = "<line x1=\"12\" x2=\"12\" y1=\"8\" y2=\"16\"></line>",
  _tmpl$344 = "<path d=\"M8 12h4\"></path>",
  _tmpl$345 = "<path d=\"M10 16V9.5a2.5 2.5 0 0 1 5 0\"></path>",
  _tmpl$346 = "<path d=\"M8 16h7\"></path>",
  _tmpl$347 = "<path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path>",
  _tmpl$348 = "<line x1=\"12\" x2=\"12.01\" y1=\"17\" y2=\"17\"></line>",
  _tmpl$349 = "<path d=\"M9 16h5\"></path>",
  _tmpl$350 = "<path d=\"M9 12h5a2 2 0 1 0 0-4h-3v9\"></path>",
  _tmpl$351 = "<path d=\"M11 17V8h4\"></path>",
  _tmpl$352 = "<path d=\"M11 12h3\"></path>",
  _tmpl$353 = "<path d=\"M9 16h4\"></path>",
  _tmpl$354 = "<line x1=\"15\" x2=\"9\" y1=\"9\" y2=\"15\"></line>",
  _tmpl$355 = "<line x1=\"9\" x2=\"15\" y1=\"9\" y2=\"15\"></line>",
  _tmpl$356 = "<path d=\"M22 18H6a2 2 0 0 1-2-2V7a2 2 0 0 0-2-2\"></path>",
  _tmpl$357 = "<path d=\"M17 14V4a2 2 0 0 0-2-2h-1a2 2 0 0 0-2 2v10\"></path>",
  _tmpl$358 = "<rect width=\"13\" height=\"8\" x=\"8\" y=\"6\" rx=\"1\"></rect>",
  _tmpl$359 = "<circle cx=\"18\" cy=\"20\" r=\"2\"></circle>",
  _tmpl$360 = "<circle cx=\"9\" cy=\"20\" r=\"2\"></circle>",
  _tmpl$361 = "<path d=\"m4.9 4.9 14.2 14.2\"></path>",
  _tmpl$362 = "<path d=\"M4 13c3.5-2 8-2 10 2a5.5 5.5 0 0 1 8 5\"></path>",
  _tmpl$363 = "<path d=\"M5.15 17.89c5.52-1.52 8.65-6.89 7-12C11.55 4 11.5 2 13 2c3.22 0 5 5.5 5 8 0 6.5-4.2 12-10.49 12C5.11 22 2 22 2 20c0-1.5 1.14-1.55 3.15-2.11Z\"></path>",
  _tmpl$364 = "<path d=\"M10 10.01h.01\"></path>",
  _tmpl$365 = "<path d=\"M10 14.01h.01\"></path>",
  _tmpl$366 = "<path d=\"M14 10.01h.01\"></path>",
  _tmpl$367 = "<path d=\"M14 14.01h.01\"></path>",
  _tmpl$368 = "<path d=\"M18 6v11.5\"></path>",
  _tmpl$369 = "<path d=\"M6 6v12\"></path>",
  _tmpl$370 = "<rect x=\"2\" y=\"6\" width=\"20\" height=\"12\" rx=\"2\"></rect>",
  _tmpl$371 = "<path d=\"M12 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5\"></path>",
  _tmpl$372 = "<path d=\"m16 19 3 3 3-3\"></path>",
  _tmpl$373 = "<path d=\"M18 12h.01\"></path>",
  _tmpl$374 = "<path d=\"M19 16v6\"></path>",
  _tmpl$375 = "<path d=\"M6 12h.01\"></path>",
  _tmpl$376 = "<circle cx=\"12\" cy=\"12\" r=\"2\"></circle>",
  _tmpl$377 = "<path d=\"M19 22v-6\"></path>",
  _tmpl$378 = "<path d=\"m22 19-3-3-3 3\"></path>",
  _tmpl$379 = "<path d=\"M13 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5\"></path>",
  _tmpl$380 = "<path d=\"m17 17 5 5\"></path>",
  _tmpl$381 = "<path d=\"m22 17-5 5\"></path>",
  _tmpl$382 = "<rect width=\"20\" height=\"12\" x=\"2\" y=\"6\" rx=\"2\"></rect>",
  _tmpl$383 = "<path d=\"M6 12h.01M18 12h.01\"></path>",
  _tmpl$384 = "<path d=\"M8 5v14\"></path>",
  _tmpl$385 = "<path d=\"M17 5v14\"></path>",
  _tmpl$386 = "<path d=\"M10 3a41 41 0 0 0 0 18\"></path>",
  _tmpl$387 = "<path d=\"M14 3a41 41 0 0 1 0 18\"></path>",
  _tmpl$388 = "<path d=\"M17 3a2 2 0 0 1 1.68.92 15.25 15.25 0 0 1 0 16.16A2 2 0 0 1 17 21H7a2 2 0 0 1-1.68-.92 15.25 15.25 0 0 1 0-16.16A2 2 0 0 1 7 3z\"></path>",
  _tmpl$389 = "<path d=\"M3.84 17h16.32\"></path>",
  _tmpl$390 = "<path d=\"M3.84 7h16.32\"></path>",
  _tmpl$391 = "<path d=\"M4 20h16\"></path>",
  _tmpl$392 = "<path d=\"m6 16 6-12 6 12\"></path>",
  _tmpl$393 = "<path d=\"M10 4 8 6\"></path>",
  _tmpl$394 = "<path d=\"M17 19v2\"></path>",
  _tmpl$395 = "<path d=\"M7 19v2\"></path>",
  _tmpl$396 = "<path d=\"M9 5 7.621 3.621A2.121 2.121 0 0 0 4 5v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5\"></path>",
  _tmpl$397 = "<path d=\"m11 7-3 5h4l-3 5\"></path>",
  _tmpl$398 = "<path d=\"M14.856 6H16a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.935\"></path>",
  _tmpl$399 = "<path d=\"M22 14v-4\"></path>",
  _tmpl$400 = "<path d=\"M5.14 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2.936\"></path>",
  _tmpl$401 = "<path d=\"M10 10v4\"></path>",
  _tmpl$402 = "<path d=\"M14 10v4\"></path>",
  _tmpl$403 = "<path d=\"M6 10v4\"></path>",
  _tmpl$404 = "<rect x=\"2\" y=\"6\" width=\"16\" height=\"12\" rx=\"2\"></rect>",
  _tmpl$405 = "<path d=\"M6 14v-4\"></path>",
  _tmpl$406 = "<path d=\"M10 14v-4\"></path>",
  _tmpl$407 = "<path d=\"M10 9v6\"></path>",
  _tmpl$408 = "<path d=\"M12.543 6H16a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.605\"></path>",
  _tmpl$409 = "<path d=\"M7 12h6\"></path>",
  _tmpl$410 = "<path d=\"M7.606 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.606\"></path>",
  _tmpl$411 = "<path d=\"M10 17h.01\"></path>",
  _tmpl$412 = "<path d=\"M10 7v6\"></path>",
  _tmpl$413 = "<path d=\"M14 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2\"></path>",
  _tmpl$414 = "<path d=\"M6 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2\"></path>",
  _tmpl$415 = "<path d=\"M 22 14 L 22 10\"></path>",
  _tmpl$416 = "<path d=\"M4.5 3h15\"></path>",
  _tmpl$417 = "<path d=\"M6 3v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V3\"></path>",
  _tmpl$418 = "<path d=\"M6 14h12\"></path>",
  _tmpl$419 = "<path d=\"M9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22a13.96 13.96 0 0 0 9.9-4.1\"></path>",
  _tmpl$420 = "<path d=\"M10.75 5.093A6 6 0 0 1 22 8c0 2.411-.61 4.68-1.683 6.66\"></path>",
  _tmpl$421 = "<path d=\"M5.341 10.62a4 4 0 0 0 6.487 1.208M10.62 5.341a4.015 4.015 0 0 1 2.039 2.04\"></path>",
  _tmpl$422 = "<line x1=\"2\" x2=\"22\" y1=\"2\" y2=\"22\"></line>",
  _tmpl$423 = "<path d=\"M10.165 6.598C9.954 7.478 9.64 8.36 9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22c7.732 0 14-6.268 14-14a6 6 0 0 0-11.835-1.402Z\"></path>",
  _tmpl$424 = "<path d=\"M5.341 10.62a4 4 0 1 0 5.279-5.28\"></path>",
  _tmpl$425 = "<path d=\"M2 20v-8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v8\"></path>",
  _tmpl$426 = "<path d=\"M4 10V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4\"></path>",
  _tmpl$427 = "<path d=\"M12 4v6\"></path>",
  _tmpl$428 = "<path d=\"M2 18h20\"></path>",
  _tmpl$429 = "<path d=\"M3 20v-8a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8\"></path>",
  _tmpl$430 = "<path d=\"M5 10V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v4\"></path>",
  _tmpl$431 = "<path d=\"M2 4v16\"></path>",
  _tmpl$432 = "<path d=\"M2 8h18a2 2 0 0 1 2 2v10\"></path>",
  _tmpl$433 = "<path d=\"M2 17h20\"></path>",
  _tmpl$434 = "<path d=\"M6 8v9\"></path>",
  _tmpl$435 = "<path d=\"M16.4 13.7A6.5 6.5 0 1 0 6.28 6.6c-1.1 3.13-.78 3.9-3.18 6.08A3 3 0 0 0 5 18c4 0 8.4-1.8 11.4-4.3\"></path>",
  _tmpl$436 = "<path d=\"m18.5 6 2.19 4.5a6.48 6.48 0 0 1-2.29 7.2C15.4 20.2 11 22 7 22a3 3 0 0 1-2.68-1.66L2.4 16.5\"></path>",
  _tmpl$437 = "<circle cx=\"12.5\" cy=\"8.5\" r=\"2.5\"></circle>",
  _tmpl$438 = "<path d=\"M13 13v5\"></path>",
  _tmpl$439 = "<path d=\"M17 11.47V8\"></path>",
  _tmpl$440 = "<path d=\"M17 11h1a3 3 0 0 1 2.745 4.211\"></path>",
  _tmpl$441 = "<path d=\"M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-3\"></path>",
  _tmpl$442 = "<path d=\"M7.536 7.535C6.766 7.649 6.154 8 5.5 8a2.5 2.5 0 0 1-1.768-4.268\"></path>",
  _tmpl$443 = "<path d=\"M8.727 3.204C9.306 2.767 9.885 2 11 2c1.56 0 2 1.5 3 1.5s1.72-.5 2.5-.5a1 1 0 1 1 0 5c-.78 0-1.5-.5-2.5-.5a3.149 3.149 0 0 0-.842.12\"></path>",
  _tmpl$444 = "<path d=\"M9 14.6V18\"></path>",
  _tmpl$445 = "<path d=\"M17 11h1a3 3 0 0 1 0 6h-1\"></path>",
  _tmpl$446 = "<path d=\"M9 12v6\"></path>",
  _tmpl$447 = "<path d=\"M13 12v6\"></path>",
  _tmpl$448 = "<path d=\"M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5S9.44 2 11 2s2 1.5 3 1.5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z\"></path>",
  _tmpl$449 = "<path d=\"M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8\"></path>",
  _tmpl$450 = "<path d=\"M10.268 21a2 2 0 0 0 3.464 0\"></path>",
  _tmpl$451 = "<path d=\"M13.916 2.314A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.74 7.327A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673 9 9 0 0 1-.585-.665\"></path>",
  _tmpl$452 = "<circle cx=\"18\" cy=\"8\" r=\"3\"></circle>",
  _tmpl$453 = "<path d=\"M18.518 17.347A7 7 0 0 1 14 19\"></path>",
  _tmpl$454 = "<path d=\"M18.8 4A11 11 0 0 1 20 9\"></path>",
  _tmpl$455 = "<circle cx=\"20\" cy=\"16\" r=\"2\"></circle>",
  _tmpl$456 = "<circle cx=\"9\" cy=\"9\" r=\"7\"></circle>",
  _tmpl$457 = "<rect x=\"4\" y=\"16\" width=\"10\" height=\"6\" rx=\"2\"></rect>",
  _tmpl$458 = "<path d=\"M15 8h6\"></path>",
  _tmpl$459 = "<path d=\"M16.243 3.757A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673A9.4 9.4 0 0 1 18.667 12\"></path>",
  _tmpl$460 = "<path d=\"M17 17H4a1 1 0 0 1-.74-1.673C4.59 13.956 6 12.499 6 8a6 6 0 0 1 .258-1.742\"></path>",
  _tmpl$461 = "<path d=\"M8.668 3.01A6 6 0 0 1 18 8c0 2.687.77 4.653 1.707 6.05\"></path>",
  _tmpl$462 = "<path d=\"M18 5v6\"></path>",
  _tmpl$463 = "<path d=\"M20.002 14.464a9 9 0 0 0 .738.863A1 1 0 0 1 20 17H4a1 1 0 0 1-.74-1.673C4.59 13.956 6 12.499 6 8a6 6 0 0 1 8.75-5.332\"></path>",
  _tmpl$464 = "<path d=\"M22 8c0-2.3-.8-4.3-2-6\"></path>",
  _tmpl$465 = "<path d=\"M3.262 15.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326\"></path>",
  _tmpl$466 = "<path d=\"M4 2C2.8 3.7 2 5.7 2 8\"></path>",
  _tmpl$467 = "<rect width=\"13\" height=\"7\" x=\"3\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$468 = "<path d=\"m22 15-3-3 3-3\"></path>",
  _tmpl$469 = "<rect width=\"13\" height=\"7\" x=\"3\" y=\"14\" rx=\"1\"></rect>",
  _tmpl$470 = "<rect width=\"13\" height=\"7\" x=\"8\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$471 = "<path d=\"m2 9 3 3-3 3\"></path>",
  _tmpl$472 = "<rect width=\"13\" height=\"7\" x=\"8\" y=\"14\" rx=\"1\"></rect>",
  _tmpl$473 = "<rect width=\"7\" height=\"13\" x=\"3\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$474 = "<path d=\"m9 22 3-3 3 3\"></path>",
  _tmpl$475 = "<rect width=\"7\" height=\"13\" x=\"14\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$476 = "<rect width=\"7\" height=\"13\" x=\"3\" y=\"8\" rx=\"1\"></rect>",
  _tmpl$477 = "<path d=\"m15 2-3 3-3-3\"></path>",
  _tmpl$478 = "<rect width=\"7\" height=\"13\" x=\"14\" y=\"8\" rx=\"1\"></rect>",
  _tmpl$479 = "<path d=\"M12.409 13.017A5 5 0 0 1 22 15c0 3.866-4 7-9 7-4.077 0-8.153-.82-10.371-2.462-.426-.316-.631-.832-.62-1.362C2.118 12.723 2.627 2 10 2a3 3 0 0 1 3 3 2 2 0 0 1-2 2c-1.105 0-1.64-.444-2-1\"></path>",
  _tmpl$480 = "<path d=\"M15 14a5 5 0 0 0-7.584 2\"></path>",
  _tmpl$481 = "<path d=\"M9.964 6.825C8.019 7.977 9.5 13 8 15\"></path>",
  _tmpl$482 = "<circle cx=\"18.5\" cy=\"17.5\" r=\"3.5\"></circle>",
  _tmpl$483 = "<circle cx=\"5.5\" cy=\"17.5\" r=\"3.5\"></circle>",
  _tmpl$484 = "<circle cx=\"15\" cy=\"5\" r=\"1\"></circle>",
  _tmpl$485 = "<path d=\"M12 17.5V14l-3-3 4-3 2 3h2\"></path>",
  _tmpl$486 = "<rect x=\"14\" y=\"14\" width=\"4\" height=\"6\" rx=\"2\"></rect>",
  _tmpl$487 = "<rect x=\"6\" y=\"4\" width=\"4\" height=\"6\" rx=\"2\"></rect>",
  _tmpl$488 = "<path d=\"M6 20h4\"></path>",
  _tmpl$489 = "<path d=\"M14 10h4\"></path>",
  _tmpl$490 = "<path d=\"M6 14h2v6\"></path>",
  _tmpl$491 = "<path d=\"M14 4h2v6\"></path>",
  _tmpl$492 = "<path d=\"M10 10h4\"></path>",
  _tmpl$493 = "<path d=\"M19 7V4a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3\"></path>",
  _tmpl$494 = "<path d=\"M20 21a2 2 0 0 0 2-2v-3.851c0-1.39-2-2.962-2-4.829V8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v11a2 2 0 0 0 2 2z\"></path>",
  _tmpl$495 = "<path d=\"M 22 16 L 2 16\"></path>",
  _tmpl$496 = "<path d=\"M4 21a2 2 0 0 1-2-2v-3.851c0-1.39 2-2.962 2-4.829V8a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v11a2 2 0 0 1-2 2z\"></path>",
  _tmpl$497 = "<path d=\"M9 7V4a1 1 0 0 0-1-1H6a1 1 0 0 0-1 1v3\"></path>",
  _tmpl$498 = "<circle cx=\"12\" cy=\"11.9\" r=\"2\"></circle>",
  _tmpl$499 = "<path d=\"M6.7 3.4c-.9 2.5 0 5.2 2.2 6.7C6.5 9 3.7 9.6 2 11.6\"></path>",
  _tmpl$500 = "<path d=\"m8.9 10.1 1.4.8\"></path>",
  _tmpl$501 = "<path d=\"M17.3 3.4c.9 2.5 0 5.2-2.2 6.7 2.4-1.2 5.2-.6 6.9 1.5\"></path>",
  _tmpl$502 = "<path d=\"m15.1 10.1-1.4.8\"></path>",
  _tmpl$503 = "<path d=\"M16.7 20.8c-2.6-.4-4.6-2.6-4.7-5.3-.2 2.6-2.1 4.8-4.7 5.2\"></path>",
  _tmpl$504 = "<path d=\"M12 13.9v1.6\"></path>",
  _tmpl$505 = "<path d=\"M13.5 5.4c-1-.2-2-.2-3 0\"></path>",
  _tmpl$506 = "<path d=\"M17 16.4c.7-.7 1.2-1.6 1.5-2.5\"></path>",
  _tmpl$507 = "<path d=\"M5.5 13.9c.3.9.8 1.8 1.5 2.5\"></path>",
  _tmpl$508 = "<path d=\"M16 7h.01\"></path>",
  _tmpl$509 = "<path d=\"M3.4 18H12a8 8 0 0 0 8-8V7a4 4 0 0 0-7.28-2.3L2 20\"></path>",
  _tmpl$510 = "<path d=\"m20 7 2 .5-2 .5\"></path>",
  _tmpl$511 = "<path d=\"M10 18v3\"></path>",
  _tmpl$512 = "<path d=\"M14 17.75V21\"></path>",
  _tmpl$513 = "<path d=\"M7 18a6 6 0 0 0 3.84-10.61\"></path>",
  _tmpl$514 = "<path d=\"M11.767 19.089c4.924.868 6.14-6.025 1.216-6.894m-1.216 6.894L5.86 18.047m5.908 1.042-.347 1.97m1.563-8.864c4.924.869 6.14-6.025 1.215-6.893m-1.215 6.893-3.94-.694m5.155-6.2L8.29 4.26m5.908 1.042.348-1.97M7.48 20.364l3.126-17.727\"></path>",
  _tmpl$515 = "<circle cx=\"15\" cy=\"15\" r=\"7\"></circle>",
  _tmpl$516 = "<path d=\"M3 3h18\"></path>",
  _tmpl$517 = "<path d=\"M20 7H8\"></path>",
  _tmpl$518 = "<path d=\"M20 11H8\"></path>",
  _tmpl$519 = "<path d=\"M10 19h10\"></path>",
  _tmpl$520 = "<path d=\"M8 15h12\"></path>",
  _tmpl$521 = "<path d=\"M4 3v14\"></path>",
  _tmpl$522 = "<circle cx=\"4\" cy=\"19\" r=\"2\"></circle>",
  _tmpl$523 = "<path d=\"M10 22V7a1 1 0 0 0-1-1H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5a1 1 0 0 0-1-1H2\"></path>",
  _tmpl$524 = "<rect x=\"14\" y=\"2\" width=\"8\" height=\"8\" rx=\"1\"></rect>",
  _tmpl$525 = "<path d=\"m7 7 10 10-5 5V2l5 5L7 17\"></path>",
  _tmpl$526 = "<line x1=\"18\" x2=\"21\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$527 = "<line x1=\"3\" x2=\"6\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$528 = "<path d=\"m17 17-5 5V12l-5 5\"></path>",
  _tmpl$529 = "<path d=\"M14.5 9.5 17 7l-5-5v4.5\"></path>",
  _tmpl$530 = "<path d=\"M20.83 14.83a4 4 0 0 0 0-5.66\"></path>",
  _tmpl$531 = "<path d=\"M6 12h9a4 4 0 0 1 0 8H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h7a4 4 0 0 1 0 8\"></path>",
  _tmpl$532 = "<path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path>",
  _tmpl$533 = "<circle cx=\"11\" cy=\"13\" r=\"9\"></circle>",
  _tmpl$534 = "<path d=\"M14.35 4.65 16.3 2.7a2.41 2.41 0 0 1 3.4 0l1.6 1.6a2.4 2.4 0 0 1 0 3.4l-1.95 1.95\"></path>",
  _tmpl$535 = "<path d=\"m22 2-1.5 1.5\"></path>",
  _tmpl$536 = "<path d=\"M17 10c.7-.7 1.69 0 2.5 0a2.5 2.5 0 1 0 0-5 .5.5 0 0 1-.5-.5 2.5 2.5 0 1 0-5 0c0 .81.7 1.8 0 2.5l-7 7c-.7.7-1.69 0-2.5 0a2.5 2.5 0 0 0 0 5c.28 0 .5.22.5.5a2.5 2.5 0 1 0 5 0c0-.81-.7-1.8 0-2.5Z\"></path>",
  _tmpl$537 = "<path d=\"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20\"></path>",
  _tmpl$538 = "<path d=\"m8 13 4-7 4 7\"></path>",
  _tmpl$539 = "<path d=\"M9.1 11h5.7\"></path>",
  _tmpl$540 = "<path d=\"M12 13h.01\"></path>",
  _tmpl$541 = "<path d=\"M12 6v3\"></path>",
  _tmpl$542 = "<path d=\"M12 6v7\"></path>",
  _tmpl$543 = "<path d=\"M16 8v3\"></path>",
  _tmpl$544 = "<path d=\"M8 8v3\"></path>",
  _tmpl$545 = "<path d=\"m9 9.5 2 2 4-4\"></path>",
  _tmpl$546 = "<path d=\"M2 16V4a2 2 0 0 1 2-2h11\"></path>",
  _tmpl$547 = "<path d=\"M22 18H11a2 2 0 1 0 0 4h10.5a.5.5 0 0 0 .5-.5v-15a.5.5 0 0 0-.5-.5H11a2 2 0 0 0-2 2v12\"></path>",
  _tmpl$548 = "<path d=\"M5 14H4a2 2 0 1 0 0 4h1\"></path>",
  _tmpl$549 = "<path d=\"M12 17h1.5\"></path>",
  _tmpl$550 = "<path d=\"M12 22h1.5\"></path>",
  _tmpl$551 = "<path d=\"M12 2h1.5\"></path>",
  _tmpl$552 = "<path d=\"M17.5 22H19a1 1 0 0 0 1-1\"></path>",
  _tmpl$553 = "<path d=\"M17.5 2H19a1 1 0 0 1 1 1v1.5\"></path>",
  _tmpl$554 = "<path d=\"M20 14v3h-2.5\"></path>",
  _tmpl$555 = "<path d=\"M20 8.5V10\"></path>",
  _tmpl$556 = "<path d=\"M4 10V8.5\"></path>",
  _tmpl$557 = "<path d=\"M4 19.5V14\"></path>",
  _tmpl$558 = "<path d=\"M4 4.5A2.5 2.5 0 0 1 6.5 2H8\"></path>",
  _tmpl$559 = "<path d=\"M8 22H6.5a1 1 0 0 1 0-5H8\"></path>",
  _tmpl$560 = "<path d=\"M12 13V7\"></path>",
  _tmpl$561 = "<path d=\"m9 10 3 3 3-3\"></path>",
  _tmpl$562 = "<path d=\"M8 12v-2a4 4 0 0 1 8 0v2\"></path>",
  _tmpl$563 = "<circle cx=\"15\" cy=\"12\" r=\"1\"></circle>",
  _tmpl$564 = "<circle cx=\"9\" cy=\"12\" r=\"1\"></circle>",
  _tmpl$565 = "<path d=\"M16 8.2A2.22 2.22 0 0 0 13.8 6c-.8 0-1.4.3-1.8.9-.4-.6-1-.9-1.8-.9A2.22 2.22 0 0 0 8 8.2c0 .6.3 1.2.7 1.6A226.652 226.652 0 0 0 12 13a404 404 0 0 0 3.3-3.1 2.413 2.413 0 0 0 .7-1.7\"></path>",
  _tmpl$566 = "<path d=\"m20 13.7-2.1-2.1a2 2 0 0 0-2.8 0L9.7 17\"></path>",
  _tmpl$567 = "<circle cx=\"10\" cy=\"8\" r=\"2\"></circle>",
  _tmpl$568 = "<path d=\"m19 3 1 1\"></path>",
  _tmpl$569 = "<path d=\"m20 2-4.5 4.5\"></path>",
  _tmpl$570 = "<path d=\"M20 7.898V21a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20\"></path>",
  _tmpl$571 = "<path d=\"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2h7.844\"></path>",
  _tmpl$572 = "<circle cx=\"14\" cy=\"8\" r=\"2\"></circle>",
  _tmpl$573 = "<path d=\"M18 6V4a2 2 0 1 0-4 0v2\"></path>",
  _tmpl$574 = "<path d=\"M20 15v6a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20\"></path>",
  _tmpl$575 = "<path d=\"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H10\"></path>",
  _tmpl$576 = "<rect x=\"12\" y=\"6\" width=\"8\" height=\"5\" rx=\"1\"></rect>",
  _tmpl$577 = "<path d=\"M10 2v8l3-3 3 3V2\"></path>",
  _tmpl$578 = "<path d=\"M9 10h6\"></path>",
  _tmpl$579 = "<path d=\"m16 12 2 2 4-4\"></path>",
  _tmpl$580 = "<path d=\"M22 6V4a1 1 0 0 0-1-1h-5a4 4 0 0 0-4 4 4 4 0 0 0-4-4H3a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h6a3 3 0 0 1 3 3 3 3 0 0 1 3-3h6a1 1 0 0 0 1-1v-1.3\"></path>",
  _tmpl$581 = "<path d=\"M16 12h2\"></path>",
  _tmpl$582 = "<path d=\"M16 8h2\"></path>",
  _tmpl$583 = "<path d=\"M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z\"></path>",
  _tmpl$584 = "<path d=\"M6 12h2\"></path>",
  _tmpl$585 = "<path d=\"M6 8h2\"></path>",
  _tmpl$586 = "<path d=\"M12 7v6\"></path>",
  _tmpl$587 = "<path d=\"M8 11h8\"></path>",
  _tmpl$588 = "<path d=\"M8 7h6\"></path>",
  _tmpl$589 = "<path d=\"M10 13h4\"></path>",
  _tmpl$590 = "<path d=\"M16 8V6H8v2\"></path>",
  _tmpl$591 = "<path d=\"M18 2h1a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20\"></path>",
  _tmpl$592 = "<path d=\"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2\"></path>",
  _tmpl$593 = "<path d=\"m9 10 3-3 3 3\"></path>",
  _tmpl$594 = "<path d=\"m9 5 3-3 3 3\"></path>",
  _tmpl$595 = "<path d=\"M15 13a3 3 0 1 0-6 0\"></path>",
  _tmpl$596 = "<circle cx=\"12\" cy=\"8\" r=\"2\"></circle>",
  _tmpl$597 = "<path d=\"m14.5 7-5 5\"></path>",
  _tmpl$598 = "<path d=\"m9.5 7 5 5\"></path>",
  _tmpl$599 = "<path d=\"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z\"></path>",
  _tmpl$600 = "<path d=\"m9 10 2 2 4-4\"></path>",
  _tmpl$601 = "<path d=\"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z\"></path>",
  _tmpl$602 = "<line x1=\"15\" x2=\"9\" y1=\"10\" y2=\"10\"></line>",
  _tmpl$603 = "<line x1=\"12\" x2=\"12\" y1=\"7\" y2=\"13\"></line>",
  _tmpl$604 = "<path d=\"m14.5 7.5-5 5\"></path>",
  _tmpl$605 = "<path d=\"m9.5 7.5 5 5\"></path>",
  _tmpl$606 = "<path d=\"M4 9V5a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4\"></path>",
  _tmpl$607 = "<path d=\"M8 8v1\"></path>",
  _tmpl$608 = "<path d=\"M12 8v1\"></path>",
  _tmpl$609 = "<path d=\"M16 8v1\"></path>",
  _tmpl$610 = "<rect width=\"20\" height=\"12\" x=\"2\" y=\"9\" rx=\"2\"></rect>",
  _tmpl$611 = "<circle cx=\"8\" cy=\"15\" r=\"2\"></circle>",
  _tmpl$612 = "<circle cx=\"16\" cy=\"15\" r=\"2\"></circle>",
  _tmpl$613 = "<path d=\"M12 6V2H8\"></path>",
  _tmpl$614 = "<path d=\"m8 18-4 4V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2Z\"></path>",
  _tmpl$615 = "<path d=\"M2 12h2\"></path>",
  _tmpl$616 = "<path d=\"M9 11v2\"></path>",
  _tmpl$617 = "<path d=\"M15 11v2\"></path>",
  _tmpl$618 = "<path d=\"M20 12h2\"></path>",
  _tmpl$619 = "<path d=\"M13.67 8H18a2 2 0 0 1 2 2v4.33\"></path>",
  _tmpl$620 = "<path d=\"M2 14h2\"></path>",
  _tmpl$621 = "<path d=\"M20 14h2\"></path>",
  _tmpl$622 = "<path d=\"M22 22 2 2\"></path>",
  _tmpl$623 = "<path d=\"M8 8H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 1.414-.586\"></path>",
  _tmpl$624 = "<path d=\"M9 13v2\"></path>",
  _tmpl$625 = "<path d=\"M9.67 4H12v2.33\"></path>",
  _tmpl$626 = "<path d=\"M12 8V4H8\"></path>",
  _tmpl$627 = "<rect width=\"16\" height=\"12\" x=\"4\" y=\"8\" rx=\"2\"></rect>",
  _tmpl$628 = "<path d=\"M15 13v2\"></path>",
  _tmpl$629 = "<path d=\"M10 3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a6 6 0 0 0 1.2 3.6l.6.8A6 6 0 0 1 17 13v8a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1v-8a6 6 0 0 1 1.2-3.6l.6-.8A6 6 0 0 0 10 5z\"></path>",
  _tmpl$630 = "<path d=\"M17 13h-4a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h4\"></path>",
  _tmpl$631 = "<path d=\"M17 3h4v4\"></path>",
  _tmpl$632 = "<path d=\"M18.575 11.082a13 13 0 0 1 1.048 9.027 1.17 1.17 0 0 1-1.914.597L14 17\"></path>",
  _tmpl$633 = "<path d=\"M7 10 3.29 6.29a1.17 1.17 0 0 1 .6-1.91 13 13 0 0 1 9.03 1.05\"></path>",
  _tmpl$634 = "<path d=\"M7 14a1.7 1.7 0 0 0-1.207.5l-2.646 2.646A.5.5 0 0 0 3.5 18H5a1 1 0 0 1 1 1v1.5a.5.5 0 0 0 .854.354L9.5 18.207A1.7 1.7 0 0 0 10 17v-2a1 1 0 0 0-1-1z\"></path>",
  _tmpl$635 = "<path d=\"M9.707 14.293 21 3\"></path>",
  _tmpl$636 = "<path d=\"M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z\"></path>",
  _tmpl$637 = "<path d=\"m3.3 7 8.7 5 8.7-5\"></path>",
  _tmpl$638 = "<path d=\"M12 22V12\"></path>",
  _tmpl$639 = "<path d=\"M2.97 12.92A2 2 0 0 0 2 14.63v3.24a2 2 0 0 0 .97 1.71l3 1.8a2 2 0 0 0 2.06 0L12 19v-5.5l-5-3-4.03 2.42Z\"></path>",
  _tmpl$640 = "<path d=\"m7 16.5-4.74-2.85\"></path>",
  _tmpl$641 = "<path d=\"m7 16.5 5-3\"></path>",
  _tmpl$642 = "<path d=\"M7 16.5v5.17\"></path>",
  _tmpl$643 = "<path d=\"M12 13.5V19l3.97 2.38a2 2 0 0 0 2.06 0l3-1.8a2 2 0 0 0 .97-1.71v-3.24a2 2 0 0 0-.97-1.71L17 10.5l-5 3Z\"></path>",
  _tmpl$644 = "<path d=\"m17 16.5-5-3\"></path>",
  _tmpl$645 = "<path d=\"m17 16.5 4.74-2.85\"></path>",
  _tmpl$646 = "<path d=\"M17 16.5v5.17\"></path>",
  _tmpl$647 = "<path d=\"M7.97 4.42A2 2 0 0 0 7 6.13v4.37l5 3 5-3V6.13a2 2 0 0 0-.97-1.71l-3-1.8a2 2 0 0 0-2.06 0l-3 1.8Z\"></path>",
  _tmpl$648 = "<path d=\"M12 8 7.26 5.15\"></path>",
  _tmpl$649 = "<path d=\"m12 8 4.74-2.85\"></path>",
  _tmpl$650 = "<path d=\"M12 13.5V8\"></path>",
  _tmpl$651 = "<path d=\"M8 3H7a2 2 0 0 0-2 2v5a2 2 0 0 1-2 2 2 2 0 0 1 2 2v5c0 1.1.9 2 2 2h1\"></path>",
  _tmpl$652 = "<path d=\"M16 21h1a2 2 0 0 0 2-2v-5c0-1.1.9-2 2-2a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2h-1\"></path>",
  _tmpl$653 = "<path d=\"M16 3h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-3\"></path>",
  _tmpl$654 = "<path d=\"M8 21H5a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h3\"></path>",
  _tmpl$655 = "<path d=\"M12 5a3 3 0 1 0-5.997.125 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z\"></path>",
  _tmpl$656 = "<path d=\"M9 13a4.5 4.5 0 0 0 3-4\"></path>",
  _tmpl$657 = "<path d=\"M6.003 5.125A3 3 0 0 0 6.401 6.5\"></path>",
  _tmpl$658 = "<path d=\"M3.477 10.896a4 4 0 0 1 .585-.396\"></path>",
  _tmpl$659 = "<path d=\"M6 18a4 4 0 0 1-1.967-.516\"></path>",
  _tmpl$660 = "<path d=\"M12 13h4\"></path>",
  _tmpl$661 = "<path d=\"M12 18h6a2 2 0 0 1 2 2v1\"></path>",
  _tmpl$662 = "<path d=\"M12 8h8\"></path>",
  _tmpl$663 = "<path d=\"M16 8V5a2 2 0 0 1 2-2\"></path>",
  _tmpl$664 = "<circle cx=\"16\" cy=\"13\" r=\".5\"></circle>",
  _tmpl$665 = "<circle cx=\"18\" cy=\"3\" r=\".5\"></circle>",
  _tmpl$666 = "<circle cx=\"20\" cy=\"21\" r=\".5\"></circle>",
  _tmpl$667 = "<circle cx=\"20\" cy=\"8\" r=\".5\"></circle>",
  _tmpl$668 = "<path d=\"m10.852 14.772-.383.923\"></path>",
  _tmpl$669 = "<path d=\"m10.852 9.228-.383-.923\"></path>",
  _tmpl$670 = "<path d=\"m13.148 14.772.382.924\"></path>",
  _tmpl$671 = "<path d=\"m13.531 8.305-.383.923\"></path>",
  _tmpl$672 = "<path d=\"m14.772 10.852.923-.383\"></path>",
  _tmpl$673 = "<path d=\"m14.772 13.148.923.383\"></path>",
  _tmpl$674 = "<path d=\"M17.598 6.5A3 3 0 1 0 12 5a3 3 0 0 0-5.63-1.446 3 3 0 0 0-.368 1.571 4 4 0 0 0-2.525 5.771\"></path>",
  _tmpl$675 = "<path d=\"M17.998 5.125a4 4 0 0 1 2.525 5.771\"></path>",
  _tmpl$676 = "<path d=\"M19.505 10.294a4 4 0 0 1-1.5 7.706\"></path>",
  _tmpl$677 = "<path d=\"M4.032 17.483A4 4 0 0 0 11.464 20c.18-.311.892-.311 1.072 0a4 4 0 0 0 7.432-2.516\"></path>",
  _tmpl$678 = "<path d=\"M4.5 10.291A4 4 0 0 0 6 18\"></path>",
  _tmpl$679 = "<path d=\"M6.002 5.125a3 3 0 0 0 .4 1.375\"></path>",
  _tmpl$680 = "<path d=\"m9.228 10.852-.923-.383\"></path>",
  _tmpl$681 = "<path d=\"m9.228 13.148-.923.383\"></path>",
  _tmpl$682 = "<circle cx=\"12\" cy=\"12\" r=\"3\"></circle>",
  _tmpl$683 = "<path d=\"M12 5a3 3 0 1 1 5.997.125 4 4 0 0 1 2.526 5.77 4 4 0 0 1-.556 6.588A4 4 0 1 1 12 18Z\"></path>",
  _tmpl$684 = "<path d=\"M15 13a4.5 4.5 0 0 1-3-4 4.5 4.5 0 0 1-3 4\"></path>",
  _tmpl$685 = "<path d=\"M17.599 6.5a3 3 0 0 0 .399-1.375\"></path>",
  _tmpl$686 = "<path d=\"M19.938 10.5a4 4 0 0 1 .585.396\"></path>",
  _tmpl$687 = "<path d=\"M19.967 17.484A4 4 0 0 1 18 18\"></path>",
  _tmpl$688 = "<path d=\"M16 3v2.107\"></path>",
  _tmpl$689 = "<path d=\"M17 9c1 3 2.5 3.5 3.5 4.5A5 5 0 0 1 22 17a5 5 0 0 1-10 0c0-.3 0-.6.1-.9a2 2 0 1 0 3.3-2C13 11.5 16 9 17 9\"></path>",
  _tmpl$690 = "<path d=\"M21 8.274V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.938\"></path>",
  _tmpl$691 = "<path d=\"M3 15h5.253\"></path>",
  _tmpl$692 = "<path d=\"M3 9h8.228\"></path>",
  _tmpl$693 = "<path d=\"M8 15v6\"></path>",
  _tmpl$694 = "<path d=\"M8 3v6\"></path>",
  _tmpl$695 = "<rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\"></rect>",
  _tmpl$696 = "<path d=\"M12 9v6\"></path>",
  _tmpl$697 = "<path d=\"M16 15v6\"></path>",
  _tmpl$698 = "<path d=\"M16 3v6\"></path>",
  _tmpl$699 = "<path d=\"M3 15h18\"></path>",
  _tmpl$700 = "<path d=\"M3 9h18\"></path>",
  _tmpl$701 = "<path d=\"M12 12h.01\"></path>",
  _tmpl$702 = "<path d=\"M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2\"></path>",
  _tmpl$703 = "<path d=\"M22 13a18.15 18.15 0 0 1-20 0\"></path>",
  _tmpl$704 = "<rect width=\"20\" height=\"14\" x=\"2\" y=\"6\" rx=\"2\"></rect>",
  _tmpl$705 = "<path d=\"M10 20v2\"></path>",
  _tmpl$706 = "<path d=\"M14 20v2\"></path>",
  _tmpl$707 = "<path d=\"M18 20v2\"></path>",
  _tmpl$708 = "<path d=\"M21 20H3\"></path>",
  _tmpl$709 = "<path d=\"M6 20v2\"></path>",
  _tmpl$710 = "<path d=\"M8 16V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v12\"></path>",
  _tmpl$711 = "<rect x=\"4\" y=\"6\" width=\"16\" height=\"10\" rx=\"2\"></rect>",
  _tmpl$712 = "<path d=\"M12 11v4\"></path>",
  _tmpl$713 = "<path d=\"M14 13h-4\"></path>",
  _tmpl$714 = "<path d=\"M18 6v14\"></path>",
  _tmpl$715 = "<path d=\"M6 6v14\"></path>",
  _tmpl$716 = "<path d=\"M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"></path>",
  _tmpl$717 = "<rect x=\"8\" y=\"8\" width=\"8\" height=\"8\" rx=\"2\"></rect>",
  _tmpl$718 = "<path d=\"M4 10a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2\"></path>",
  _tmpl$719 = "<path d=\"M14 20a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2\"></path>",
  _tmpl$720 = "<path d=\"m16 22-1-4\"></path>",
  _tmpl$721 = "<path d=\"M19 13.99a1 1 0 0 0 1-1V12a2 2 0 0 0-2-2h-3a1 1 0 0 1-1-1V4a2 2 0 0 0-4 0v5a1 1 0 0 1-1 1H6a2 2 0 0 0-2 2v.99a1 1 0 0 0 1 1\"></path>",
  _tmpl$722 = "<path d=\"M5 14h14l1.973 6.767A1 1 0 0 1 20 22H4a1 1 0 0 1-.973-1.233z\"></path>",
  _tmpl$723 = "<path d=\"m8 22 1-4\"></path>",
  _tmpl$724 = "<path d=\"m11 10 3 3\"></path>",
  _tmpl$725 = "<path d=\"M6.5 21A3.5 3.5 0 1 0 3 17.5a2.62 2.62 0 0 1-.708 1.792A1 1 0 0 0 3 21z\"></path>",
  _tmpl$726 = "<path d=\"M9.969 17.031 21.378 5.624a1 1 0 0 0-3.002-3.002L6.967 14.031\"></path>",
  _tmpl$727 = "<path d=\"M7.2 14.8a2 2 0 0 1 2 2\"></path>",
  _tmpl$728 = "<circle cx=\"18.5\" cy=\"8.5\" r=\"3.5\"></circle>",
  _tmpl$729 = "<circle cx=\"7.5\" cy=\"16.5\" r=\"5.5\"></circle>",
  _tmpl$730 = "<circle cx=\"7.5\" cy=\"4.5\" r=\"2.5\"></circle>",
  _tmpl$731 = "<path d=\"M15 7.13V6a3 3 0 0 0-5.14-2.1L8 2\"></path>",
  _tmpl$732 = "<path d=\"M14.12 3.88 16 2\"></path>",
  _tmpl$733 = "<path d=\"M22 13h-4v-2a4 4 0 0 0-4-4h-1.3\"></path>",
  _tmpl$734 = "<path d=\"M20.97 5c0 2.1-1.6 3.8-3.5 4\"></path>",
  _tmpl$735 = "<path d=\"M7.7 7.7A4 4 0 0 0 6 11v3a6 6 0 0 0 11.13 3.13\"></path>",
  _tmpl$736 = "<path d=\"M12 20v-8\"></path>",
  _tmpl$737 = "<path d=\"M6 13H2\"></path>",
  _tmpl$738 = "<path d=\"M3 21c0-2.1 1.7-3.9 3.8-4\"></path>",
  _tmpl$739 = "<path d=\"M12.765 21.522a.5.5 0 0 1-.765-.424v-8.196a.5.5 0 0 1 .765-.424l5.878 3.674a1 1 0 0 1 0 1.696z\"></path>",
  _tmpl$740 = "<path d=\"M18 11a4 4 0 0 0-4-4h-4a4 4 0 0 0-4 4v3a6.1 6.1 0 0 0 2 4.5\"></path>",
  _tmpl$741 = "<path d=\"M6.53 9C4.6 8.8 3 7.1 3 5\"></path>",
  _tmpl$742 = "<path d=\"m8 2 1.88 1.88\"></path>",
  _tmpl$743 = "<path d=\"M9 7.13v-1a3.003 3.003 0 1 1 6 0v1\"></path>",
  _tmpl$744 = "<path d=\"M12 20c-3.3 0-6-2.7-6-6v-3a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v3c0 3.3-2.7 6-6 6\"></path>",
  _tmpl$745 = "<path d=\"M12 20v-9\"></path>",
  _tmpl$746 = "<path d=\"M22 13h-4\"></path>",
  _tmpl$747 = "<path d=\"M17.2 17c2.1.1 3.8 1.9 3.8 4\"></path>",
  _tmpl$748 = "<path d=\"M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z\"></path>",
  _tmpl$749 = "<path d=\"M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2\"></path>",
  _tmpl$750 = "<path d=\"M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2\"></path>",
  _tmpl$751 = "<path d=\"M10 6h4\"></path>",
  _tmpl$752 = "<path d=\"M10 14h4\"></path>",
  _tmpl$753 = "<path d=\"M10 18h4\"></path>",
  _tmpl$754 = "<rect width=\"16\" height=\"20\" x=\"4\" y=\"2\" rx=\"2\" ry=\"2\"></rect>",
  _tmpl$755 = "<path d=\"M9 22v-4h6v4\"></path>",
  _tmpl$756 = "<path d=\"M8 6h.01\"></path>",
  _tmpl$757 = "<path d=\"M16 6h.01\"></path>",
  _tmpl$758 = "<path d=\"M12 6h.01\"></path>",
  _tmpl$759 = "<path d=\"M12 10h.01\"></path>",
  _tmpl$760 = "<path d=\"M12 14h.01\"></path>",
  _tmpl$761 = "<path d=\"M16 10h.01\"></path>",
  _tmpl$762 = "<path d=\"M16 14h.01\"></path>",
  _tmpl$763 = "<path d=\"M8 10h.01\"></path>",
  _tmpl$764 = "<path d=\"M8 14h.01\"></path>",
  _tmpl$765 = "<path d=\"M4 6 2 7\"></path>",
  _tmpl$766 = "<path d=\"m22 7-2-1\"></path>",
  _tmpl$767 = "<rect width=\"16\" height=\"16\" x=\"4\" y=\"3\" rx=\"2\"></rect>",
  _tmpl$768 = "<path d=\"M4 11h16\"></path>",
  _tmpl$769 = "<path d=\"M8 15h.01\"></path>",
  _tmpl$770 = "<path d=\"M16 15h.01\"></path>",
  _tmpl$771 = "<path d=\"M6 19v2\"></path>",
  _tmpl$772 = "<path d=\"M18 21v-2\"></path>",
  _tmpl$773 = "<path d=\"M8 6v6\"></path>",
  _tmpl$774 = "<path d=\"M15 6v6\"></path>",
  _tmpl$775 = "<path d=\"M2 12h19.6\"></path>",
  _tmpl$776 = "<path d=\"M18 18h3s.5-1.7.8-2.8c.1-.4.2-.8.2-1.2 0-.4-.1-.8-.2-1.2l-1.4-5C20.1 6.8 19.1 6 18 6H4a2 2 0 0 0-2 2v10h3\"></path>",
  _tmpl$777 = "<path d=\"M9 18h5\"></path>",
  _tmpl$778 = "<circle cx=\"16\" cy=\"18\" r=\"2\"></circle>",
  _tmpl$779 = "<path d=\"M10 3h.01\"></path>",
  _tmpl$780 = "<path d=\"M14 2h.01\"></path>",
  _tmpl$781 = "<path d=\"m2 9 20-5\"></path>",
  _tmpl$782 = "<path d=\"M12 12V6.5\"></path>",
  _tmpl$783 = "<rect width=\"16\" height=\"10\" x=\"4\" y=\"12\" rx=\"3\"></rect>",
  _tmpl$784 = "<path d=\"M17 21v-2a1 1 0 0 1-1-1v-1a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1\"></path>",
  _tmpl$785 = "<path d=\"M19 15V6.5a1 1 0 0 0-7 0v11a1 1 0 0 1-7 0V9\"></path>",
  _tmpl$786 = "<path d=\"M21 21v-2h-4\"></path>",
  _tmpl$787 = "<path d=\"M3 5h4V3\"></path>",
  _tmpl$788 = "<path d=\"M7 5a1 1 0 0 1 1 1v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a1 1 0 0 1 1-1V3\"></path>",
  _tmpl$789 = "<circle cx=\"9\" cy=\"7\" r=\"2\"></circle>",
  _tmpl$790 = "<path d=\"M7.2 7.9 3 11v9c0 .6.4 1 1 1h16c.6 0 1-.4 1-1v-9c0-2-3-6-7-8l-3.6 2.6\"></path>",
  _tmpl$791 = "<path d=\"M16 13H3\"></path>",
  _tmpl$792 = "<path d=\"M16 17H3\"></path>",
  _tmpl$793 = "<path d=\"M20 21v-8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8\"></path>",
  _tmpl$794 = "<path d=\"M4 16s.5-1 2-1 2.5 2 4 2 2.5-2 4-2 2.5 2 4 2 2-1 2-1\"></path>",
  _tmpl$795 = "<path d=\"M7 8v3\"></path>",
  _tmpl$796 = "<path d=\"M12 8v3\"></path>",
  _tmpl$797 = "<path d=\"M17 8v3\"></path>",
  _tmpl$798 = "<path d=\"M7 4h.01\"></path>",
  _tmpl$799 = "<path d=\"M12 4h.01\"></path>",
  _tmpl$800 = "<path d=\"M17 4h.01\"></path>",
  _tmpl$801 = "<rect width=\"16\" height=\"20\" x=\"4\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$802 = "<line x1=\"8\" x2=\"16\" y1=\"6\" y2=\"6\"></line>",
  _tmpl$803 = "<line x1=\"16\" x2=\"16\" y1=\"14\" y2=\"18\"></line>",
  _tmpl$804 = "<path d=\"M12 18h.01\"></path>",
  _tmpl$805 = "<path d=\"M8 18h.01\"></path>",
  _tmpl$806 = "<path d=\"M11 14h1v4\"></path>",
  _tmpl$807 = "<path d=\"M16 2v4\"></path>",
  _tmpl$808 = "<path d=\"M3 10h18\"></path>",
  _tmpl$809 = "<path d=\"M8 2v4\"></path>",
  _tmpl$810 = "<rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\"></rect>",
  _tmpl$811 = "<path d=\"m14 18 4 4 4-4\"></path>",
  _tmpl$812 = "<path d=\"M18 14v8\"></path>",
  _tmpl$813 = "<path d=\"M21 11.354V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.343\"></path>",
  _tmpl$814 = "<path d=\"m14 18 4-4 4 4\"></path>",
  _tmpl$815 = "<path d=\"M18 22v-8\"></path>",
  _tmpl$816 = "<path d=\"M21 11.343V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h9\"></path>",
  _tmpl$817 = "<path d=\"M21 14V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8\"></path>",
  _tmpl$818 = "<path d=\"m16 20 2 2 4-4\"></path>",
  _tmpl$819 = "<rect width=\"18\" height=\"18\" x=\"3\" y=\"4\" rx=\"2\"></rect>",
  _tmpl$820 = "<path d=\"m9 16 2 2 4-4\"></path>",
  _tmpl$821 = "<path d=\"M16 14v2.2l1.6 1\"></path>",
  _tmpl$822 = "<path d=\"M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5\"></path>",
  _tmpl$823 = "<path d=\"M3 10h5\"></path>",
  _tmpl$824 = "<circle cx=\"16\" cy=\"16\" r=\"6\"></circle>",
  _tmpl$825 = "<path d=\"m15.228 16.852-.923-.383\"></path>",
  _tmpl$826 = "<path d=\"m15.228 19.148-.923.383\"></path>",
  _tmpl$827 = "<path d=\"m16.47 14.305.382.923\"></path>",
  _tmpl$828 = "<path d=\"m16.852 20.772-.383.924\"></path>",
  _tmpl$829 = "<path d=\"m19.148 15.228.383-.923\"></path>",
  _tmpl$830 = "<path d=\"m19.53 21.696-.382-.924\"></path>",
  _tmpl$831 = "<path d=\"m20.772 16.852.924-.383\"></path>",
  _tmpl$832 = "<path d=\"m20.772 19.148.924.383\"></path>",
  _tmpl$833 = "<path d=\"M21 11V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6\"></path>",
  _tmpl$834 = "<circle cx=\"18\" cy=\"18\" r=\"3\"></circle>",
  _tmpl$835 = "<path d=\"M16 18h.01\"></path>",
  _tmpl$836 = "<path d=\"M21 17V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11Z\"></path>",
  _tmpl$837 = "<path d=\"M15 22v-4a2 2 0 0 1 2-2h4\"></path>",
  _tmpl$838 = "<path d=\"M3 10h18V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7\"></path>",
  _tmpl$839 = "<path d=\"M21.29 14.7a2.43 2.43 0 0 0-2.65-.52c-.3.12-.57.3-.8.53l-.34.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L17.5 22l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z\"></path>",
  _tmpl$840 = "<path d=\"M10 16h4\"></path>",
  _tmpl$841 = "<path d=\"M16 19h6\"></path>",
  _tmpl$842 = "<path d=\"M21 15V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8.5\"></path>",
  _tmpl$843 = "<path d=\"M4.2 4.2A2 2 0 0 0 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 1.82-1.18\"></path>",
  _tmpl$844 = "<path d=\"M21 15.5V6a2 2 0 0 0-2-2H9.5\"></path>",
  _tmpl$845 = "<path d=\"M3 10h7\"></path>",
  _tmpl$846 = "<path d=\"M21 10h-5.5\"></path>",
  _tmpl$847 = "<path d=\"M12 14v4\"></path>",
  _tmpl$848 = "<path d=\"M21 12.598V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8.5\"></path>",
  _tmpl$849 = "<path d=\"M17 14h-6\"></path>",
  _tmpl$850 = "<path d=\"M13 18H7\"></path>",
  _tmpl$851 = "<path d=\"M7 14h.01\"></path>",
  _tmpl$852 = "<path d=\"M17 18h.01\"></path>",
  _tmpl$853 = "<path d=\"M21 11.75V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.25\"></path>",
  _tmpl$854 = "<path d=\"m22 22-1.875-1.875\"></path>",
  _tmpl$855 = "<path d=\"M11 10v4h4\"></path>",
  _tmpl$856 = "<path d=\"m11 14 1.535-1.605a5 5 0 0 1 8 1.5\"></path>",
  _tmpl$857 = "<path d=\"m21 18-1.535 1.605a5 5 0 0 1-8-1.5\"></path>",
  _tmpl$858 = "<path d=\"M21 22v-4h-4\"></path>",
  _tmpl$859 = "<path d=\"M21 8.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h4.3\"></path>",
  _tmpl$860 = "<path d=\"M3 10h4\"></path>",
  _tmpl$861 = "<path d=\"M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8\"></path>",
  _tmpl$862 = "<path d=\"m17 22 5-5\"></path>",
  _tmpl$863 = "<path d=\"m14 14-4 4\"></path>",
  _tmpl$864 = "<path d=\"m10 14 4 4\"></path>",
  _tmpl$865 = "<path d=\"M7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16\"></path>",
  _tmpl$866 = "<path d=\"M9.5 4h5L17 7h3a2 2 0 0 1 2 2v7.5\"></path>",
  _tmpl$867 = "<path d=\"M14.121 15.121A3 3 0 1 1 9.88 10.88\"></path>",
  _tmpl$868 = "<path d=\"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z\"></path>",
  _tmpl$869 = "<circle cx=\"12\" cy=\"13\" r=\"3\"></circle>",
  _tmpl$870 = "<path d=\"M5.7 21a2 2 0 0 1-3.5-2l8.6-14a6 6 0 0 1 10.4 6 2 2 0 1 1-3.464-2 2 2 0 1 0-3.464-2Z\"></path>",
  _tmpl$871 = "<path d=\"M17.75 7 15 2.1\"></path>",
  _tmpl$872 = "<path d=\"M10.9 4.8 13 9\"></path>",
  _tmpl$873 = "<path d=\"m7.9 9.7 2 4.4\"></path>",
  _tmpl$874 = "<path d=\"M4.9 14.7 7 18.9\"></path>",
  _tmpl$875 = "<path d=\"M10 10v7.9\"></path>",
  _tmpl$876 = "<path d=\"M11.802 6.145a5 5 0 0 1 6.053 6.053\"></path>",
  _tmpl$877 = "<path d=\"M14 6.1v2.243\"></path>",
  _tmpl$878 = "<path d=\"m15.5 15.571-.964.964a5 5 0 0 1-7.071 0 5 5 0 0 1 0-7.07l.964-.965\"></path>",
  _tmpl$879 = "<path d=\"M16 7V3a1 1 0 0 1 1.707-.707 2.5 2.5 0 0 0 2.152.717 1 1 0 0 1 1.131 1.131 2.5 2.5 0 0 0 .717 2.152A1 1 0 0 1 21 8h-4\"></path>",
  _tmpl$880 = "<path d=\"M8 17v4a1 1 0 0 1-1.707.707 2.5 2.5 0 0 0-2.152-.717 1 1 0 0 1-1.131-1.131 2.5 2.5 0 0 0-.717-2.152A1 1 0 0 1 3 16h4\"></path>",
  _tmpl$881 = "<path d=\"M10 7v10.9\"></path>",
  _tmpl$882 = "<path d=\"M14 6.1V17\"></path>",
  _tmpl$883 = "<path d=\"M16.536 7.465a5 5 0 0 0-7.072 0l-2 2a5 5 0 0 0 0 7.07 5 5 0 0 0 7.072 0l2-2a5 5 0 0 0 0-7.07\"></path>",
  _tmpl$884 = "<path d=\"M12 22v-4\"></path>",
  _tmpl$885 = "<path d=\"M7 12c-1.5 0-4.5 1.5-5 3 3.5 1.5 6 1 6 1-1.5 1.5-2 3.5-2 5 2.5 0 4.5-1.5 6-3 1.5 1.5 3.5 3 6 3 0-1.5-.5-3.5-2-5 0 0 2.5.5 6-1-.5-1.5-3.5-3-5-3 1.5-1 4-4 4-6-2.5 0-5.5 1.5-7 3 0-2.5-.5-5-2-7-1.5 2-2 4.5-2 7-1.5-1.5-4.5-3-7-3 0 2 2.5 5 4 6\"></path>",
  _tmpl$886 = "<path d=\"M10.5 5H19a2 2 0 0 1 2 2v8.5\"></path>",
  _tmpl$887 = "<path d=\"M17 11h-.5\"></path>",
  _tmpl$888 = "<path d=\"M19 19H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2\"></path>",
  _tmpl$889 = "<path d=\"M7 11h4\"></path>",
  _tmpl$890 = "<path d=\"M7 15h2.5\"></path>",
  _tmpl$891 = "<rect width=\"18\" height=\"14\" x=\"3\" y=\"5\" rx=\"2\" ry=\"2\"></rect>",
  _tmpl$892 = "<path d=\"M7 15h4M15 15h2M7 11h2M13 11h4\"></path>",
  _tmpl$893 = "<path d=\"m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8\"></path>",
  _tmpl$894 = "<path d=\"M17 14h.01\"></path>",
  _tmpl$895 = "<rect width=\"18\" height=\"8\" x=\"3\" y=\"10\" rx=\"2\"></rect>",
  _tmpl$896 = "<path d=\"M10 2h4\"></path>",
  _tmpl$897 = "<path d=\"M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.4 2.9A3.7 3.7 0 0 0 2 12v4c0 .6.4 1 1 1h2\"></path>",
  _tmpl$898 = "<circle cx=\"7\" cy=\"17\" r=\"2\"></circle>",
  _tmpl$899 = "<path d=\"M9 17h6\"></path>",
  _tmpl$900 = "<circle cx=\"17\" cy=\"17\" r=\"2\"></circle>",
  _tmpl$901 = "<path d=\"M18 19V9a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v8a2 2 0 0 0 2 2h2\"></path>",
  _tmpl$902 = "<path d=\"M2 9h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2\"></path>",
  _tmpl$903 = "<path d=\"M22 17v1a1 1 0 0 1-1 1H10v-9a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v9\"></path>",
  _tmpl$904 = "<circle cx=\"8\" cy=\"19\" r=\"2\"></circle>",
  _tmpl$905 = "<path d=\"M14.172 2a2 2 0 0 1 1.414.586l3.828 3.828A2 2 0 0 1 20 7.828V20a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2z\"></path>",
  _tmpl$906 = "<path d=\"M8 14h8\"></path>",
  _tmpl$907 = "<rect x=\"8\" y=\"10\" width=\"8\" height=\"8\" rx=\"1\"></rect>",
  _tmpl$908 = "<path d=\"M2.27 21.7s9.87-3.5 12.73-6.36a4.5 4.5 0 0 0-6.36-6.37C5.77 11.84 2.27 21.7 2.27 21.7zM8.64 14l-2.05-2.04M15.34 15l-2.46-2.46\"></path>",
  _tmpl$909 = "<path d=\"M22 9s-1.33-2-3.5-2C16.86 7 15 9 15 9s1.33 2 3.5 2S22 9 22 9z\"></path>",
  _tmpl$910 = "<path d=\"M15 2s-2 1.33-2 3.5S15 9 15 9s2-1.84 2-3.5C17 3.33 15 2 15 2z\"></path>",
  _tmpl$911 = "<circle cx=\"7\" cy=\"12\" r=\"3\"></circle>",
  _tmpl$912 = "<circle cx=\"17\" cy=\"12\" r=\"3\"></circle>",
  _tmpl$913 = "<path d=\"M14 7v8\"></path>",
  _tmpl$914 = "<path d=\"m3 15 4-8 4 8\"></path>",
  _tmpl$915 = "<path d=\"M4 13h6\"></path>",
  _tmpl$916 = "<circle cx=\"18\" cy=\"12\" r=\"3\"></circle>",
  _tmpl$917 = "<path d=\"M21 9v6\"></path>",
  _tmpl$918 = "<path d=\"M15 11h4.5a2 2 0 0 1 0 4H15V7h4a2 2 0 0 1 0 4\"></path>",
  _tmpl$919 = "<circle cx=\"8\" cy=\"10\" r=\"2\"></circle>",
  _tmpl$920 = "<circle cx=\"16\" cy=\"10\" r=\"2\"></circle>",
  _tmpl$921 = "<path d=\"m6 20 .7-2.9A1.4 1.4 0 0 1 8.1 16h7.8a1.4 1.4 0 0 1 1.4 1l.7 3\"></path>",
  _tmpl$922 = "<path d=\"M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6\"></path>",
  _tmpl$923 = "<path d=\"M2 12a9 9 0 0 1 8 8\"></path>",
  _tmpl$924 = "<path d=\"M2 16a5 5 0 0 1 4 4\"></path>",
  _tmpl$925 = "<line x1=\"2\" x2=\"2.01\" y1=\"20\" y2=\"20\"></line>",
  _tmpl$926 = "<path d=\"M22 20v-9H2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2Z\"></path>",
  _tmpl$927 = "<path d=\"M18 11V4H6v7\"></path>",
  _tmpl$928 = "<path d=\"M15 22v-4a3 3 0 0 0-3-3a3 3 0 0 0-3 3v4\"></path>",
  _tmpl$929 = "<path d=\"M22 11V9\"></path>",
  _tmpl$930 = "<path d=\"M2 11V9\"></path>",
  _tmpl$931 = "<path d=\"M6 4V2\"></path>",
  _tmpl$932 = "<path d=\"M18 4V2\"></path>",
  _tmpl$933 = "<path d=\"M10 4V2\"></path>",
  _tmpl$934 = "<path d=\"M14 4V2\"></path>",
  _tmpl$935 = "<path d=\"M12 5c.67 0 1.35.09 2 .26 1.78-2 5.03-2.84 6.42-2.26 1.4.58-.42 7-.42 7 .57 1.07 1 2.24 1 3.44C21 17.9 16.97 21 12 21s-9-3-9-7.56c0-1.25.5-2.4 1-3.44 0 0-1.89-6.42-.5-7 1.39-.58 4.72.23 6.5 2.23A9.04 9.04 0 0 1 12 5Z\"></path>",
  _tmpl$936 = "<path d=\"M8 14v.5\"></path>",
  _tmpl$937 = "<path d=\"M16 14v.5\"></path>",
  _tmpl$938 = "<path d=\"M11.25 16.25h1.5L12 17l-.75-.75Z\"></path>",
  _tmpl$939 = "<path d=\"M16.75 12h3.632a1 1 0 0 1 .894 1.447l-2.034 4.069a1 1 0 0 1-1.708.134l-2.124-2.97\"></path>",
  _tmpl$940 = "<path d=\"M17.106 9.053a1 1 0 0 1 .447 1.341l-3.106 6.211a1 1 0 0 1-1.342.447L3.61 12.3a2.92 2.92 0 0 1-1.3-3.91L3.69 5.6a2.92 2.92 0 0 1 3.92-1.3z\"></path>",
  _tmpl$941 = "<path d=\"M2 19h3.76a2 2 0 0 0 1.8-1.1L9 15\"></path>",
  _tmpl$942 = "<path d=\"M2 21v-4\"></path>",
  _tmpl$943 = "<path d=\"M7 9h.01\"></path>",
  _tmpl$944 = "<path d=\"M3 3v16a2 2 0 0 0 2 2h16\"></path>",
  _tmpl$945 = "<path d=\"M7 11.207a.5.5 0 0 1 .146-.353l2-2a.5.5 0 0 1 .708 0l3.292 3.292a.5.5 0 0 0 .708 0l4.292-4.292a.5.5 0 0 1 .854.353V16a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1z\"></path>",
  _tmpl$946 = "<rect x=\"7\" y=\"13\" width=\"9\" height=\"4\" rx=\"1\"></rect>",
  _tmpl$947 = "<rect x=\"7\" y=\"5\" width=\"12\" height=\"4\" rx=\"1\"></rect>",
  _tmpl$948 = "<path d=\"M7 11h8\"></path>",
  _tmpl$949 = "<path d=\"M7 16h3\"></path>",
  _tmpl$950 = "<path d=\"M7 6h12\"></path>",
  _tmpl$951 = "<path d=\"M7 16h12\"></path>",
  _tmpl$952 = "<path d=\"M7 6h3\"></path>",
  _tmpl$953 = "<path d=\"M11 13v4\"></path>",
  _tmpl$954 = "<path d=\"M15 5v4\"></path>",
  _tmpl$955 = "<path d=\"M7 16h8\"></path>",
  _tmpl$956 = "<path d=\"M7 11h12\"></path>",
  _tmpl$957 = "<path d=\"M9 5v4\"></path>",
  _tmpl$958 = "<rect width=\"4\" height=\"6\" x=\"7\" y=\"9\" rx=\"1\"></rect>",
  _tmpl$959 = "<path d=\"M9 15v2\"></path>",
  _tmpl$960 = "<path d=\"M17 3v2\"></path>",
  _tmpl$961 = "<rect width=\"4\" height=\"8\" x=\"15\" y=\"5\" rx=\"1\"></rect>",
  _tmpl$962 = "<path d=\"M17 13v3\"></path>",
  _tmpl$963 = "<rect x=\"15\" y=\"5\" width=\"4\" height=\"12\" rx=\"1\"></rect>",
  _tmpl$964 = "<rect x=\"7\" y=\"8\" width=\"4\" height=\"9\" rx=\"1\"></rect>",
  _tmpl$965 = "<path d=\"M13 17V9\"></path>",
  _tmpl$966 = "<path d=\"M18 17v-3\"></path>",
  _tmpl$967 = "<path d=\"M8 17V5\"></path>",
  _tmpl$968 = "<path d=\"M18 17V5\"></path>",
  _tmpl$969 = "<path d=\"M8 17v-3\"></path>",
  _tmpl$970 = "<path d=\"M11 13H7\"></path>",
  _tmpl$971 = "<path d=\"M19 9h-4\"></path>",
  _tmpl$972 = "<path d=\"M18 17V9\"></path>",
  _tmpl$973 = "<path d=\"M13 17V5\"></path>",
  _tmpl$974 = "<path d=\"M10 6h8\"></path>",
  _tmpl$975 = "<path d=\"M12 16h6\"></path>",
  _tmpl$976 = "<path d=\"M8 11h7\"></path>",
  _tmpl$977 = "<path d=\"m19 9-5 5-4-4-3 3\"></path>",
  _tmpl$978 = "<path d=\"m13.11 7.664 1.78 2.672\"></path>",
  _tmpl$979 = "<path d=\"m14.162 12.788-3.324 1.424\"></path>",
  _tmpl$980 = "<path d=\"m20 4-6.06 1.515\"></path>",
  _tmpl$981 = "<circle cx=\"12\" cy=\"6\" r=\"2\"></circle>",
  _tmpl$982 = "<circle cx=\"16\" cy=\"12\" r=\"2\"></circle>",
  _tmpl$983 = "<circle cx=\"9\" cy=\"15\" r=\"2\"></circle>",
  _tmpl$984 = "<path d=\"M12 20V10\"></path>",
  _tmpl$985 = "<path d=\"M18 20v-4\"></path>",
  _tmpl$986 = "<path d=\"M6 20V4\"></path>",
  _tmpl$987 = "<line x1=\"12\" x2=\"12\" y1=\"20\" y2=\"10\"></line>",
  _tmpl$988 = "<line x1=\"18\" x2=\"18\" y1=\"20\" y2=\"4\"></line>",
  _tmpl$989 = "<line x1=\"6\" x2=\"6\" y1=\"20\" y2=\"16\"></line>",
  _tmpl$990 = "<line x1=\"18\" x2=\"18\" y1=\"20\" y2=\"10\"></line>",
  _tmpl$991 = "<line x1=\"12\" x2=\"12\" y1=\"20\" y2=\"4\"></line>",
  _tmpl$992 = "<line x1=\"6\" x2=\"6\" y1=\"20\" y2=\"14\"></line>",
  _tmpl$993 = "<path d=\"M12 16v5\"></path>",
  _tmpl$994 = "<path d=\"M16 14v7\"></path>",
  _tmpl$995 = "<path d=\"M20 10v11\"></path>",
  _tmpl$996 = "<path d=\"m22 3-8.646 8.646a.5.5 0 0 1-.708 0L9.354 8.354a.5.5 0 0 0-.707 0L2 15\"></path>",
  _tmpl$997 = "<path d=\"M4 18v3\"></path>",
  _tmpl$998 = "<path d=\"M8 14v7\"></path>",
  _tmpl$999 = "<path d=\"M8 6h10\"></path>",
  _tmpl$1000 = "<path d=\"M6 12h9\"></path>",
  _tmpl$1001 = "<path d=\"M11 18h7\"></path>",
  _tmpl$1002 = "<path d=\"M21 12c.552 0 1.005-.449.95-.998a10 10 0 0 0-8.953-8.951c-.55-.055-.998.398-.998.95v8a1 1 0 0 0 1 1z\"></path>",
  _tmpl$1003 = "<path d=\"M21.21 15.89A10 10 0 1 1 8 2.83\"></path>",
  _tmpl$1004 = "<circle cx=\"7.5\" cy=\"7.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$1005 = "<circle cx=\"18.5\" cy=\"5.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$1006 = "<circle cx=\"11.5\" cy=\"11.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$1007 = "<circle cx=\"7.5\" cy=\"16.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$1008 = "<circle cx=\"17.5\" cy=\"14.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$1009 = "<path d=\"M7 16c.5-2 1.5-7 4-7 2 0 2 3 4 3 2.5 0 4.5-5 5-7\"></path>",
  _tmpl$1010 = "<path d=\"M18 6 7 17l-5-5\"></path>",
  _tmpl$1011 = "<path d=\"m22 10-7.5 7.5L13 16\"></path>",
  _tmpl$1012 = "<path d=\"M20 4L9 15\"></path>",
  _tmpl$1013 = "<path d=\"M21 19L3 19\"></path>",
  _tmpl$1014 = "<path d=\"M9 15L4 10\"></path>",
  _tmpl$1015 = "<path d=\"M20 6 9 17l-5-5\"></path>",
  _tmpl$1016 = "<path d=\"M17 21a1 1 0 0 0 1-1v-5.35c0-.457.316-.844.727-1.041a4 4 0 0 0-2.134-7.589 5 5 0 0 0-9.186 0 4 4 0 0 0-2.134 7.588c.411.198.727.585.727 1.041V20a1 1 0 0 0 1 1Z\"></path>",
  _tmpl$1017 = "<path d=\"M6 17h12\"></path>",
  _tmpl$1018 = "<path d=\"M2 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z\"></path>",
  _tmpl$1019 = "<path d=\"M12 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z\"></path>",
  _tmpl$1020 = "<path d=\"M7 14c3.22-2.91 4.29-8.75 5-12 1.66 2.38 4.94 9 5 12\"></path>",
  _tmpl$1021 = "<path d=\"M22 9c-4.29 0-7.14-2.33-10-7 5.71 0 10 4.67 10 7Z\"></path>",
  _tmpl$1022 = "<path d=\"m6 9 6 6 6-6\"></path>",
  _tmpl$1023 = "<path d=\"m17 18-6-6 6-6\"></path>",
  _tmpl$1024 = "<path d=\"M7 6v12\"></path>",
  _tmpl$1025 = "<path d=\"m7 18 6-6-6-6\"></path>",
  _tmpl$1026 = "<path d=\"M17 6v12\"></path>",
  _tmpl$1027 = "<path d=\"m15 18-6-6 6-6\"></path>",
  _tmpl$1028 = "<path d=\"m9 18 6-6-6-6\"></path>",
  _tmpl$1029 = "<path d=\"m18 15-6-6-6 6\"></path>",
  _tmpl$1030 = "<path d=\"m7 20 5-5 5 5\"></path>",
  _tmpl$1031 = "<path d=\"m7 4 5 5 5-5\"></path>",
  _tmpl$1032 = "<path d=\"m7 6 5 5 5-5\"></path>",
  _tmpl$1033 = "<path d=\"m7 13 5 5 5-5\"></path>",
  _tmpl$1034 = "<path d=\"M16 12h.01\"></path>",
  _tmpl$1035 = "<path d=\"m17 7 5 5-5 5\"></path>",
  _tmpl$1036 = "<path d=\"m7 7-5 5 5 5\"></path>",
  _tmpl$1037 = "<path d=\"M8 12h.01\"></path>",
  _tmpl$1038 = "<path d=\"m9 7-5 5 5 5\"></path>",
  _tmpl$1039 = "<path d=\"m15 7 5 5-5 5\"></path>",
  _tmpl$1040 = "<path d=\"m11 17-5-5 5-5\"></path>",
  _tmpl$1041 = "<path d=\"m18 17-5-5 5-5\"></path>",
  _tmpl$1042 = "<path d=\"m20 17-5-5 5-5\"></path>",
  _tmpl$1043 = "<path d=\"m4 17 5-5-5-5\"></path>",
  _tmpl$1044 = "<path d=\"m6 17 5-5-5-5\"></path>",
  _tmpl$1045 = "<path d=\"m13 17 5-5-5-5\"></path>",
  _tmpl$1046 = "<path d=\"m7 15 5 5 5-5\"></path>",
  _tmpl$1047 = "<path d=\"m7 9 5-5 5 5\"></path>",
  _tmpl$1048 = "<path d=\"m17 11-5-5-5 5\"></path>",
  _tmpl$1049 = "<path d=\"m17 18-5-5-5 5\"></path>",
  _tmpl$1050 = "<line x1=\"21.17\" x2=\"12\" y1=\"8\" y2=\"8\"></line>",
  _tmpl$1051 = "<line x1=\"3.95\" x2=\"8.54\" y1=\"6.06\" y2=\"14\"></line>",
  _tmpl$1052 = "<line x1=\"10.88\" x2=\"15.46\" y1=\"21.94\" y2=\"14\"></line>",
  _tmpl$1053 = "<path d=\"M10 9h4\"></path>",
  _tmpl$1054 = "<path d=\"M12 7v5\"></path>",
  _tmpl$1055 = "<path d=\"M14 22v-4a2 2 0 0 0-4 0v4\"></path>",
  _tmpl$1056 = "<path d=\"M18 22V5.618a1 1 0 0 0-.553-.894l-4.553-2.277a2 2 0 0 0-1.788 0L6.553 4.724A1 1 0 0 0 6 5.618V22\"></path>",
  _tmpl$1057 = "<path d=\"m18 7 3.447 1.724a1 1 0 0 1 .553.894V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.618a1 1 0 0 1 .553-.894L6 7\"></path>",
  _tmpl$1058 = "<path d=\"M12 12H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h13\"></path>",
  _tmpl$1059 = "<path d=\"M18 8c0-2.5-2-2.5-2-5\"></path>",
  _tmpl$1060 = "<path d=\"M21 12a1 1 0 0 1 1 1v2a1 1 0 0 1-.5.866\"></path>",
  _tmpl$1061 = "<path d=\"M22 8c0-2.5-2-2.5-2-5\"></path>",
  _tmpl$1062 = "<path d=\"M7 12v4\"></path>",
  _tmpl$1063 = "<path d=\"M17 12H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h14\"></path>",
  _tmpl$1064 = "<path d=\"M21 16a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1\"></path>",
  _tmpl$1065 = "<path d=\"M12 8v8\"></path>",
  _tmpl$1066 = "<path d=\"m8 12 4 4 4-4\"></path>",
  _tmpl$1067 = "<path d=\"m12 8-4 4 4 4\"></path>",
  _tmpl$1068 = "<path d=\"M16 12H8\"></path>",
  _tmpl$1069 = "<path d=\"M2 12a10 10 0 1 1 10 10\"></path>",
  _tmpl$1070 = "<path d=\"m2 22 10-10\"></path>",
  _tmpl$1071 = "<path d=\"M8 22H2v-6\"></path>",
  _tmpl$1072 = "<path d=\"M12 22a10 10 0 1 1 10-10\"></path>",
  _tmpl$1073 = "<path d=\"M22 22 12 12\"></path>",
  _tmpl$1074 = "<path d=\"M22 16v6h-6\"></path>",
  _tmpl$1075 = "<path d=\"M2 8V2h6\"></path>",
  _tmpl$1076 = "<path d=\"m2 2 10 10\"></path>",
  _tmpl$1077 = "<path d=\"M12 2A10 10 0 1 1 2 12\"></path>",
  _tmpl$1078 = "<path d=\"M22 12A10 10 0 1 1 12 2\"></path>",
  _tmpl$1079 = "<path d=\"M22 2 12 12\"></path>",
  _tmpl$1080 = "<path d=\"M16 2h6v6\"></path>",
  _tmpl$1081 = "<path d=\"m12 16 4-4-4-4\"></path>",
  _tmpl$1082 = "<path d=\"m16 12-4-4-4 4\"></path>",
  _tmpl$1083 = "<path d=\"M12 16V8\"></path>",
  _tmpl$1084 = "<path d=\"M21.801 10A10 10 0 1 1 17 3.335\"></path>",
  _tmpl$1085 = "<path d=\"m9 11 3 3L22 4\"></path>",
  _tmpl$1086 = "<path d=\"m16 10-4 4-4-4\"></path>",
  _tmpl$1087 = "<path d=\"m14 16-4-4 4-4\"></path>",
  _tmpl$1088 = "<path d=\"m10 8 4 4-4 4\"></path>",
  _tmpl$1089 = "<path d=\"m8 14 4-4 4 4\"></path>",
  _tmpl$1090 = "<path d=\"M10.1 2.182a10 10 0 0 1 3.8 0\"></path>",
  _tmpl$1091 = "<path d=\"M13.9 21.818a10 10 0 0 1-3.8 0\"></path>",
  _tmpl$1092 = "<path d=\"M17.609 3.721a10 10 0 0 1 2.69 2.7\"></path>",
  _tmpl$1093 = "<path d=\"M2.182 13.9a10 10 0 0 1 0-3.8\"></path>",
  _tmpl$1094 = "<path d=\"M20.279 17.609a10 10 0 0 1-2.7 2.69\"></path>",
  _tmpl$1095 = "<path d=\"M21.818 10.1a10 10 0 0 1 0 3.8\"></path>",
  _tmpl$1096 = "<path d=\"M3.721 6.391a10 10 0 0 1 2.7-2.69\"></path>",
  _tmpl$1097 = "<path d=\"M6.391 20.279a10 10 0 0 1-2.69-2.7\"></path>",
  _tmpl$1098 = "<line x1=\"12\" x2=\"12\" y1=\"16\" y2=\"16\"></line>",
  _tmpl$1099 = "<line x1=\"12\" x2=\"12\" y1=\"8\" y2=\"8\"></line>",
  _tmpl$1100 = "<path d=\"M10.1 2.18a9.93 9.93 0 0 1 3.8 0\"></path>",
  _tmpl$1101 = "<path d=\"M17.6 3.71a9.95 9.95 0 0 1 2.69 2.7\"></path>",
  _tmpl$1102 = "<path d=\"M21.82 10.1a9.93 9.93 0 0 1 0 3.8\"></path>",
  _tmpl$1103 = "<path d=\"M20.29 17.6a9.95 9.95 0 0 1-2.7 2.69\"></path>",
  _tmpl$1104 = "<path d=\"M13.9 21.82a9.94 9.94 0 0 1-3.8 0\"></path>",
  _tmpl$1105 = "<path d=\"M6.4 20.29a9.95 9.95 0 0 1-2.69-2.7\"></path>",
  _tmpl$1106 = "<path d=\"M2.18 13.9a9.93 9.93 0 0 1 0-3.8\"></path>",
  _tmpl$1107 = "<path d=\"M3.71 6.4a9.95 9.95 0 0 1 2.7-2.69\"></path>",
  _tmpl$1108 = "<path d=\"M17 12h.01\"></path>",
  _tmpl$1109 = "<path d=\"M7 12h.01\"></path>",
  _tmpl$1110 = "<path d=\"M7 10h10\"></path>",
  _tmpl$1111 = "<path d=\"M7 14h10\"></path>",
  _tmpl$1112 = "<path d=\"M12 2a10 10 0 0 1 7.38 16.75\"></path>",
  _tmpl$1113 = "<path d=\"M2.5 8.875a10 10 0 0 0-.5 3\"></path>",
  _tmpl$1114 = "<path d=\"M2.83 16a10 10 0 0 0 2.43 3.4\"></path>",
  _tmpl$1115 = "<path d=\"M4.636 5.235a10 10 0 0 1 .891-.857\"></path>",
  _tmpl$1116 = "<path d=\"M8.644 21.42a10 10 0 0 0 7.631-.38\"></path>",
  _tmpl$1117 = "<path d=\"M15.6 2.7a10 10 0 1 0 5.7 5.7\"></path>",
  _tmpl$1118 = "<path d=\"M13.4 10.6 19 5\"></path>",
  _tmpl$1119 = "<path d=\"M8.35 2.69A10 10 0 0 1 21.3 15.65\"></path>",
  _tmpl$1120 = "<path d=\"M19.08 19.08A10 10 0 1 1 4.92 4.92\"></path>",
  _tmpl$1121 = "<path d=\"m5 5 14 14\"></path>",
  _tmpl$1122 = "<path d=\"M13 13a3 3 0 1 0 0-6H9v2\"></path>",
  _tmpl$1123 = "<path d=\"M9 17v-2.34\"></path>",
  _tmpl$1124 = "<path d=\"M9 17V7h4a3 3 0 0 1 0 6H9\"></path>",
  _tmpl$1125 = "<line x1=\"10\" x2=\"10\" y1=\"15\" y2=\"9\"></line>",
  _tmpl$1126 = "<line x1=\"14\" x2=\"14\" y1=\"15\" y2=\"9\"></line>",
  _tmpl$1127 = "<polygon points=\"10 8 16 12 10 16 10 8\"></polygon>",
  _tmpl$1128 = "<path d=\"M10 16V9.5a1 1 0 0 1 5 0\"></path>",
  _tmpl$1129 = "<path d=\"M12 7v4\"></path>",
  _tmpl$1130 = "<path d=\"M7.998 9.003a5 5 0 1 0 8-.005\"></path>",
  _tmpl$1131 = "<path d=\"M12 17h.01\"></path>",
  _tmpl$1132 = "<path d=\"M22 2 2 22\"></path>",
  _tmpl$1133 = "<line x1=\"9\" x2=\"15\" y1=\"15\" y2=\"9\"></line>",
  _tmpl$1134 = "<circle cx=\"12\" cy=\"12\" r=\"6\"></circle>",
  _tmpl$1135 = "<rect x=\"9\" y=\"9\" width=\"6\" height=\"6\" rx=\"1\"></rect>",
  _tmpl$1136 = "<path d=\"M18 20a6 6 0 0 0-12 0\"></path>",
  _tmpl$1137 = "<circle cx=\"12\" cy=\"10\" r=\"4\"></circle>",
  _tmpl$1138 = "<circle cx=\"12\" cy=\"10\" r=\"3\"></circle>",
  _tmpl$1139 = "<path d=\"M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662\"></path>",
  _tmpl$1140 = "<path d=\"m9 9 6 6\"></path>",
  _tmpl$1141 = "<path d=\"M11 9h4a2 2 0 0 0 2-2V3\"></path>",
  _tmpl$1142 = "<circle cx=\"9\" cy=\"9\" r=\"2\"></circle>",
  _tmpl$1143 = "<path d=\"M7 21v-4a2 2 0 0 1 2-2h4\"></path>",
  _tmpl$1144 = "<circle cx=\"15\" cy=\"15\" r=\"2\"></circle>",
  _tmpl$1145 = "<path d=\"M21.66 17.67a1.08 1.08 0 0 1-.04 1.6A12 12 0 0 1 4.73 2.38a1.1 1.1 0 0 1 1.61-.04z\"></path>",
  _tmpl$1146 = "<path d=\"M19.65 15.66A8 8 0 0 1 8.35 4.34\"></path>",
  _tmpl$1147 = "<path d=\"m14 10-5.5 5.5\"></path>",
  _tmpl$1148 = "<path d=\"M14 17.85V10H6.15\"></path>",
  _tmpl$1149 = "<path d=\"M20.2 6 3 11l-.9-2.4c-.3-1.1.3-2.2 1.3-2.5l13.5-4c1.1-.3 2.2.3 2.5 1.3Z\"></path>",
  _tmpl$1150 = "<path d=\"m6.2 5.3 3.1 3.9\"></path>",
  _tmpl$1151 = "<path d=\"m12.4 3.4 3.1 4\"></path>",
  _tmpl$1152 = "<path d=\"M3 11h18v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2Z\"></path>",
  _tmpl$1153 = "<rect width=\"8\" height=\"4\" x=\"8\" y=\"2\" rx=\"1\" ry=\"1\"></rect>",
  _tmpl$1154 = "<path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path>",
  _tmpl$1155 = "<path d=\"m9 14 2 2 4-4\"></path>",
  _tmpl$1156 = "<path d=\"M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2\"></path>",
  _tmpl$1157 = "<path d=\"M16 4h2a2 2 0 0 1 2 2v4\"></path>",
  _tmpl$1158 = "<path d=\"M21 14H11\"></path>",
  _tmpl$1159 = "<path d=\"m15 10-4 4 4 4\"></path>",
  _tmpl$1160 = "<path d=\"M12 11h4\"></path>",
  _tmpl$1161 = "<path d=\"M12 16h4\"></path>",
  _tmpl$1162 = "<path d=\"M8 11h.01\"></path>",
  _tmpl$1163 = "<path d=\"M8 16h.01\"></path>",
  _tmpl$1164 = "<path d=\"M9 14h6\"></path>",
  _tmpl$1165 = "<path d=\"M11 14h10\"></path>",
  _tmpl$1166 = "<path d=\"M16 4h2a2 2 0 0 1 2 2v1.344\"></path>",
  _tmpl$1167 = "<path d=\"m17 18 4-4-4-4\"></path>",
  _tmpl$1168 = "<path d=\"M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 1.793-1.113\"></path>",
  _tmpl$1169 = "<rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\"></rect>",
  _tmpl$1170 = "<rect width=\"8\" height=\"4\" x=\"8\" y=\"2\" rx=\"1\"></rect>",
  _tmpl$1171 = "<path d=\"M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-.5\"></path>",
  _tmpl$1172 = "<path d=\"M16 4h2a2 2 0 0 1 1.73 1\"></path>",
  _tmpl$1173 = "<path d=\"M8 18h1\"></path>",
  _tmpl$1174 = "<path d=\"M21.378 12.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z\"></path>",
  _tmpl$1175 = "<path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-5.5\"></path>",
  _tmpl$1176 = "<path d=\"M4 13.5V6a2 2 0 0 1 2-2h2\"></path>",
  _tmpl$1177 = "<path d=\"M13.378 15.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z\"></path>",
  _tmpl$1178 = "<path d=\"M12 17v-6\"></path>",
  _tmpl$1179 = "<path d=\"M9 12v-1h6v1\"></path>",
  _tmpl$1180 = "<path d=\"M11 17h2\"></path>",
  _tmpl$1181 = "<path d=\"M12 11v6\"></path>",
  _tmpl$1182 = "<path d=\"m15 11-6 6\"></path>",
  _tmpl$1183 = "<path d=\"m9 11 6 6\"></path>",
  _tmpl$1184 = "<path d=\"M12 6v6l2-4\"></path>",
  _tmpl$1185 = "<path d=\"M12 6v6l-4-2\"></path>",
  _tmpl$1186 = "<path d=\"M12 6v6l-2-4\"></path>",
  _tmpl$1187 = "<path d=\"M12 6v6\"></path>",
  _tmpl$1188 = "<path d=\"M12 6v6l4-2\"></path>",
  _tmpl$1189 = "<path d=\"M12 6v6h4\"></path>",
  _tmpl$1190 = "<path d=\"M12 6v6l4 2\"></path>",
  _tmpl$1191 = "<path d=\"M12 6v6l2 4\"></path>",
  _tmpl$1192 = "<path d=\"M12 6v10\"></path>",
  _tmpl$1193 = "<path d=\"M12 6v6l-2 4\"></path>",
  _tmpl$1194 = "<path d=\"M12 6v6l-4 2\"></path>",
  _tmpl$1195 = "<path d=\"M12 6v6H8\"></path>",
  _tmpl$1196 = "<path d=\"M20 12v5\"></path>",
  _tmpl$1197 = "<path d=\"M20 21h.01\"></path>",
  _tmpl$1198 = "<path d=\"M21.25 8.2A10 10 0 1 0 16 21.16\"></path>",
  _tmpl$1199 = "<path d=\"M12 6v6l2 1\"></path>",
  _tmpl$1200 = "<path d=\"M12.337 21.994a10 10 0 1 1 9.588-8.767\"></path>",
  _tmpl$1201 = "<path d=\"M12 6v6l1.56.78\"></path>",
  _tmpl$1202 = "<path d=\"M13.227 21.925a10 10 0 1 1 8.767-9.588\"></path>",
  _tmpl$1203 = "<path d=\"M12 6v6l3.644 1.822\"></path>",
  _tmpl$1204 = "<path d=\"M21.92 13.267a10 10 0 1 0-8.653 8.653\"></path>",
  _tmpl$1205 = "<path d=\"M12 12v4\"></path>",
  _tmpl$1206 = "<path d=\"M12 20h.01\"></path>",
  _tmpl$1207 = "<path d=\"M17 18h.5a1 1 0 0 0 0-9h-1.79A7 7 0 1 0 7 17.708\"></path>",
  _tmpl$1208 = "<path d=\"m17 15-5.5 5.5L9 18\"></path>",
  _tmpl$1209 = "<path d=\"M5 17.743A7 7 0 1 1 15.71 10h1.79a4.5 4.5 0 0 1 1.5 8.742\"></path>",
  _tmpl$1210 = "<path d=\"m10.852 19.772-.383.924\"></path>",
  _tmpl$1211 = "<path d=\"m13.148 14.228.383-.923\"></path>",
  _tmpl$1212 = "<path d=\"M13.148 19.772a3 3 0 1 0-2.296-5.544l-.383-.923\"></path>",
  _tmpl$1213 = "<path d=\"m13.53 20.696-.382-.924a3 3 0 1 1-2.296-5.544\"></path>",
  _tmpl$1214 = "<path d=\"m14.772 15.852.923-.383\"></path>",
  _tmpl$1215 = "<path d=\"m14.772 18.148.923.383\"></path>",
  _tmpl$1216 = "<path d=\"M4.2 15.1a7 7 0 1 1 9.93-9.858A7 7 0 0 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.2\"></path>",
  _tmpl$1217 = "<path d=\"m9.228 15.852-.923-.383\"></path>",
  _tmpl$1218 = "<path d=\"m9.228 18.148-.923.383\"></path>",
  _tmpl$1219 = "<path d=\"M12 13v8l-4-4\"></path>",
  _tmpl$1220 = "<path d=\"m12 21 4-4\"></path>",
  _tmpl$1221 = "<path d=\"M4.393 15.269A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.436 8.284\"></path>",
  _tmpl$1222 = "<path d=\"M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242\"></path>",
  _tmpl$1223 = "<path d=\"M8 19v1\"></path>",
  _tmpl$1224 = "<path d=\"M8 14v1\"></path>",
  _tmpl$1225 = "<path d=\"M16 19v1\"></path>",
  _tmpl$1226 = "<path d=\"M16 14v1\"></path>",
  _tmpl$1227 = "<path d=\"M12 21v1\"></path>",
  _tmpl$1228 = "<path d=\"M12 16v1\"></path>",
  _tmpl$1229 = "<path d=\"M16 17H7\"></path>",
  _tmpl$1230 = "<path d=\"M17 21H9\"></path>",
  _tmpl$1231 = "<path d=\"M16 14v2\"></path>",
  _tmpl$1232 = "<path d=\"M8 14v2\"></path>",
  _tmpl$1233 = "<path d=\"M16 20h.01\"></path>",
  _tmpl$1234 = "<path d=\"M8 20h.01\"></path>",
  _tmpl$1235 = "<path d=\"M12 16v2\"></path>",
  _tmpl$1236 = "<path d=\"M12 22h.01\"></path>",
  _tmpl$1237 = "<path d=\"M6 16.326A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 .5 8.973\"></path>",
  _tmpl$1238 = "<path d=\"m13 12-3 5h4l-3 5\"></path>",
  _tmpl$1239 = "<path d=\"M10.188 8.5A6 6 0 0 1 16 4a1 1 0 0 0 6 6 6 6 0 0 1-3 5.197\"></path>",
  _tmpl$1240 = "<path d=\"M11 20v2\"></path>",
  _tmpl$1241 = "<path d=\"M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24\"></path>",
  _tmpl$1242 = "<path d=\"M13 16a3 3 0 1 1 0 6H7a5 5 0 1 1 4.9-6Z\"></path>",
  _tmpl$1243 = "<path d=\"M5.782 5.782A7 7 0 0 0 9 19h8.5a4.5 4.5 0 0 0 1.307-.193\"></path>",
  _tmpl$1244 = "<path d=\"M21.532 16.5A4.5 4.5 0 0 0 17.5 10h-1.79A7.008 7.008 0 0 0 10 5.07\"></path>",
  _tmpl$1245 = "<path d=\"m9.2 22 3-7\"></path>",
  _tmpl$1246 = "<path d=\"m9 13-3 7\"></path>",
  _tmpl$1247 = "<path d=\"m17 13-3 7\"></path>",
  _tmpl$1248 = "<path d=\"M16 14v6\"></path>",
  _tmpl$1249 = "<path d=\"M8 14v6\"></path>",
  _tmpl$1250 = "<path d=\"M8 19h.01\"></path>",
  _tmpl$1251 = "<path d=\"M12 21h.01\"></path>",
  _tmpl$1252 = "<path d=\"M16 19h.01\"></path>",
  _tmpl$1253 = "<path d=\"M12 2v2\"></path>",
  _tmpl$1254 = "<path d=\"m4.93 4.93 1.41 1.41\"></path>",
  _tmpl$1255 = "<path d=\"m19.07 4.93-1.41 1.41\"></path>",
  _tmpl$1256 = "<path d=\"M15.947 12.65a4 4 0 0 0-5.925-4.128\"></path>",
  _tmpl$1257 = "<path d=\"M13 22H7a5 5 0 1 1 4.9-6H13a3 3 0 0 1 0 6Z\"></path>",
  _tmpl$1258 = "<path d=\"M12 13v8\"></path>",
  _tmpl$1259 = "<path d=\"m8 17 4-4 4 4\"></path>",
  _tmpl$1260 = "<path d=\"M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z\"></path>",
  _tmpl$1261 = "<path d=\"M17.5 21H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z\"></path>",
  _tmpl$1262 = "<path d=\"M22 10a3 3 0 0 0-3-3h-2.207a5.502 5.502 0 0 0-10.702.5\"></path>",
  _tmpl$1263 = "<path d=\"M16.17 7.83 2 22\"></path>",
  _tmpl$1264 = "<path d=\"M4.02 12a2.827 2.827 0 1 1 3.81-4.17A2.827 2.827 0 1 1 12 4.02a2.827 2.827 0 1 1 4.17 3.81A2.827 2.827 0 1 1 19.98 12a2.827 2.827 0 1 1-3.81 4.17A2.827 2.827 0 1 1 12 19.98a2.827 2.827 0 1 1-4.17-3.81A1 1 0 1 1 4 12\"></path>",
  _tmpl$1265 = "<path d=\"m7.83 7.83 8.34 8.34\"></path>",
  _tmpl$1266 = "<path d=\"M17.28 9.05a5.5 5.5 0 1 0-10.56 0A5.5 5.5 0 1 0 12 17.66a5.5 5.5 0 1 0 5.28-8.6Z\"></path>",
  _tmpl$1267 = "<path d=\"M12 17.66L12 22\"></path>",
  _tmpl$1268 = "<path d=\"m18 16 4-4-4-4\"></path>",
  _tmpl$1269 = "<path d=\"m6 8-4 4 4 4\"></path>",
  _tmpl$1270 = "<path d=\"m14.5 4-5 16\"></path>",
  _tmpl$1271 = "<path d=\"m16 18 6-6-6-6\"></path>",
  _tmpl$1272 = "<path d=\"m8 6-6 6 6 6\"></path>",
  _tmpl$1273 = "<polygon points=\"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\"></polygon>",
  _tmpl$1274 = "<line x1=\"12\" x2=\"12\" y1=\"22\" y2=\"15.5\"></line>",
  _tmpl$1275 = "<polyline points=\"22 8.5 12 15.5 2 8.5\"></polyline>",
  _tmpl$1276 = "<polyline points=\"2 15.5 12 8.5 22 15.5\"></polyline>",
  _tmpl$1277 = "<line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"8.5\"></line>",
  _tmpl$1278 = "<polyline points=\"7.5 4.21 12 6.81 16.5 4.21\"></polyline>",
  _tmpl$1279 = "<polyline points=\"7.5 19.79 7.5 14.6 3 12\"></polyline>",
  _tmpl$1280 = "<polyline points=\"21 12 16.5 14.6 16.5 19.79\"></polyline>",
  _tmpl$1281 = "<polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline>",
  _tmpl$1282 = "<line x1=\"12\" x2=\"12\" y1=\"22.08\" y2=\"12\"></line>",
  _tmpl$1283 = "<path d=\"M10 2v2\"></path>",
  _tmpl$1284 = "<path d=\"M14 2v2\"></path>",
  _tmpl$1285 = "<path d=\"M16 8a1 1 0 0 1 1 1v8a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4V9a1 1 0 0 1 1-1h14a4 4 0 1 1 0 8h-1\"></path>",
  _tmpl$1286 = "<path d=\"M6 2v2\"></path>",
  _tmpl$1287 = "<path d=\"M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z\"></path>",
  _tmpl$1288 = "<path d=\"M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z\"></path>",
  _tmpl$1289 = "<path d=\"M12 22v-2\"></path>",
  _tmpl$1290 = "<path d=\"m17 20.66-1-1.73\"></path>",
  _tmpl$1291 = "<path d=\"M11 10.27 7 3.34\"></path>",
  _tmpl$1292 = "<path d=\"m20.66 17-1.73-1\"></path>",
  _tmpl$1293 = "<path d=\"m3.34 7 1.73 1\"></path>",
  _tmpl$1294 = "<path d=\"M14 12h8\"></path>",
  _tmpl$1295 = "<path d=\"m20.66 7-1.73 1\"></path>",
  _tmpl$1296 = "<path d=\"m3.34 17 1.73-1\"></path>",
  _tmpl$1297 = "<path d=\"m17 3.34-1 1.73\"></path>",
  _tmpl$1298 = "<path d=\"m11 13.73-4 6.93\"></path>",
  _tmpl$1299 = "<circle cx=\"8\" cy=\"8\" r=\"6\"></circle>",
  _tmpl$1300 = "<path d=\"M18.09 10.37A6 6 0 1 1 10.34 18\"></path>",
  _tmpl$1301 = "<path d=\"M7 6h1v4\"></path>",
  _tmpl$1302 = "<path d=\"m16.71 13.88.7.71-2.82 2.82\"></path>",
  _tmpl$1303 = "<path d=\"M12 3v18\"></path>",
  _tmpl$1304 = "<path d=\"M10.5 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v5.5\"></path>",
  _tmpl$1305 = "<path d=\"m14.3 19.6 1-.4\"></path>",
  _tmpl$1306 = "<path d=\"M15 3v7.5\"></path>",
  _tmpl$1307 = "<path d=\"m15.2 16.9-.9-.3\"></path>",
  _tmpl$1308 = "<path d=\"m16.6 21.7.3-.9\"></path>",
  _tmpl$1309 = "<path d=\"m16.8 15.3-.4-1\"></path>",
  _tmpl$1310 = "<path d=\"m19.1 15.2.3-.9\"></path>",
  _tmpl$1311 = "<path d=\"m19.6 21.7-.4-1\"></path>",
  _tmpl$1312 = "<path d=\"m20.7 16.8 1-.4\"></path>",
  _tmpl$1313 = "<path d=\"m21.7 19.4-.9-.3\"></path>",
  _tmpl$1314 = "<path d=\"M9 3v18\"></path>",
  _tmpl$1315 = "<path d=\"M15 3v18\"></path>",
  _tmpl$1316 = "<path d=\"M7.5 3v18\"></path>",
  _tmpl$1317 = "<path d=\"M16.5 3v18\"></path>",
  _tmpl$1318 = "<path d=\"M10 18H5a3 3 0 0 1-3-3v-1\"></path>",
  _tmpl$1319 = "<path d=\"M14 2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2\"></path>",
  _tmpl$1320 = "<path d=\"M20 2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2\"></path>",
  _tmpl$1321 = "<path d=\"m7 21 3-3-3-3\"></path>",
  _tmpl$1322 = "<rect x=\"14\" y=\"14\" width=\"8\" height=\"8\" rx=\"2\"></rect>",
  _tmpl$1323 = "<rect x=\"2\" y=\"2\" width=\"8\" height=\"8\" rx=\"2\"></rect>",
  _tmpl$1324 = "<path d=\"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3\"></path>",
  _tmpl$1325 = "<path d=\"m16.24 7.76-1.804 5.411a2 2 0 0 1-1.265 1.265L7.76 16.24l1.804-5.411a2 2 0 0 1 1.265-1.265z\"></path>",
  _tmpl$1326 = "<path d=\"M15.536 11.293a1 1 0 0 0 0 1.414l2.376 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z\"></path>",
  _tmpl$1327 = "<path d=\"M2.297 11.293a1 1 0 0 0 0 1.414l2.377 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414L6.088 8.916a1 1 0 0 0-1.414 0z\"></path>",
  _tmpl$1328 = "<path d=\"M8.916 17.912a1 1 0 0 0 0 1.415l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.415l-2.377-2.376a1 1 0 0 0-1.414 0z\"></path>",
  _tmpl$1329 = "<path d=\"M8.916 4.674a1 1 0 0 0 0 1.414l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z\"></path>",
  _tmpl$1330 = "<rect width=\"14\" height=\"8\" x=\"5\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$1331 = "<rect width=\"20\" height=\"8\" x=\"2\" y=\"14\" rx=\"2\"></rect>",
  _tmpl$1332 = "<path d=\"M6 18h2\"></path>",
  _tmpl$1333 = "<path d=\"M12 18h6\"></path>",
  _tmpl$1334 = "<path d=\"M3 20a1 1 0 0 1-1-1v-1a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1Z\"></path>",
  _tmpl$1335 = "<path d=\"M20 16a8 8 0 1 0-16 0\"></path>",
  _tmpl$1336 = "<path d=\"M12 4v4\"></path>",
  _tmpl$1337 = "<path d=\"M10 4h4\"></path>",
  _tmpl$1338 = "<path d=\"m20.9 18.55-8-15.98a1 1 0 0 0-1.8 0l-8 15.98\"></path>",
  _tmpl$1339 = "<ellipse cx=\"12\" cy=\"19\" rx=\"9\" ry=\"3\"></ellipse>",
  _tmpl$1340 = "<rect x=\"2\" y=\"6\" width=\"20\" height=\"8\" rx=\"1\"></rect>",
  _tmpl$1341 = "<path d=\"M17 14v7\"></path>",
  _tmpl$1342 = "<path d=\"M7 14v7\"></path>",
  _tmpl$1343 = "<path d=\"M17 3v3\"></path>",
  _tmpl$1344 = "<path d=\"M7 3v3\"></path>",
  _tmpl$1345 = "<path d=\"M10 14 2.3 6.3\"></path>",
  _tmpl$1346 = "<path d=\"m14 6 7.7 7.7\"></path>",
  _tmpl$1347 = "<path d=\"m8 6 8 8\"></path>",
  _tmpl$1348 = "<path d=\"M16 2v2\"></path>",
  _tmpl$1349 = "<path d=\"M17.915 22a6 6 0 0 0-12 0\"></path>",
  _tmpl$1350 = "<path d=\"M8 2v2\"></path>",
  _tmpl$1351 = "<path d=\"M7 22v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2\"></path>",
  _tmpl$1352 = "<circle cx=\"12\" cy=\"11\" r=\"3\"></circle>",
  _tmpl$1353 = "<path d=\"M22 7.7c0-.6-.4-1.2-.8-1.5l-6.3-3.9a1.72 1.72 0 0 0-1.7 0l-10.3 6c-.5.2-.9.8-.9 1.4v6.6c0 .5.4 1.2.8 1.5l6.3 3.9a1.72 1.72 0 0 0 1.7 0l10.3-6c.5-.3.9-1 .9-1.5Z\"></path>",
  _tmpl$1354 = "<path d=\"M10 21.9V14L2.1 9.1\"></path>",
  _tmpl$1355 = "<path d=\"m10 14 11.9-6.9\"></path>",
  _tmpl$1356 = "<path d=\"M14 19.8v-8.1\"></path>",
  _tmpl$1357 = "<path d=\"M18 17.5V9.4\"></path>",
  _tmpl$1358 = "<path d=\"M12 18a6 6 0 0 0 0-12v12z\"></path>",
  _tmpl$1359 = "<path d=\"M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5\"></path>",
  _tmpl$1360 = "<path d=\"M8.5 8.5v.01\"></path>",
  _tmpl$1361 = "<path d=\"M16 15.5v.01\"></path>",
  _tmpl$1362 = "<path d=\"M12 12v.01\"></path>",
  _tmpl$1363 = "<path d=\"M11 17v.01\"></path>",
  _tmpl$1364 = "<path d=\"M7 14v.01\"></path>",
  _tmpl$1365 = "<path d=\"M20 12v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8\"></path>",
  _tmpl$1366 = "<path d=\"m4 8 16-4\"></path>",
  _tmpl$1367 = "<path d=\"m8.86 6.78-.45-1.81a2 2 0 0 1 1.45-2.43l1.94-.48a2 2 0 0 1 2.43 1.46l.45 1.8\"></path>",
  _tmpl$1368 = "<path d=\"m12 15 2 2 4-4\"></path>",
  _tmpl$1369 = "<rect width=\"14\" height=\"14\" x=\"8\" y=\"8\" rx=\"2\" ry=\"2\"></rect>",
  _tmpl$1370 = "<path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path>",
  _tmpl$1371 = "<line x1=\"12\" x2=\"18\" y1=\"15\" y2=\"15\"></line>",
  _tmpl$1372 = "<line x1=\"15\" x2=\"15\" y1=\"12\" y2=\"18\"></line>",
  _tmpl$1373 = "<line x1=\"12\" x2=\"18\" y1=\"18\" y2=\"12\"></line>",
  _tmpl$1374 = "<line x1=\"12\" x2=\"18\" y1=\"12\" y2=\"18\"></line>",
  _tmpl$1375 = "<path d=\"M9.17 14.83a4 4 0 1 0 0-5.66\"></path>",
  _tmpl$1376 = "<path d=\"M14.83 14.83a4 4 0 1 1 0-5.66\"></path>",
  _tmpl$1377 = "<path d=\"M20 4v7a4 4 0 0 1-4 4H4\"></path>",
  _tmpl$1378 = "<path d=\"m9 10-5 5 5 5\"></path>",
  _tmpl$1379 = "<path d=\"m15 10 5 5-5 5\"></path>",
  _tmpl$1380 = "<path d=\"M4 4v7a4 4 0 0 0 4 4h12\"></path>",
  _tmpl$1381 = "<path d=\"m14 15-5 5-5-5\"></path>",
  _tmpl$1382 = "<path d=\"M20 4h-7a4 4 0 0 0-4 4v12\"></path>",
  _tmpl$1383 = "<path d=\"M14 9 9 4 4 9\"></path>",
  _tmpl$1384 = "<path d=\"M20 20h-7a4 4 0 0 1-4-4V4\"></path>",
  _tmpl$1385 = "<path d=\"m10 15 5 5 5-5\"></path>",
  _tmpl$1386 = "<path d=\"M4 4h7a4 4 0 0 1 4 4v12\"></path>",
  _tmpl$1387 = "<path d=\"m10 9 5-5 5 5\"></path>",
  _tmpl$1388 = "<path d=\"M4 20h7a4 4 0 0 0 4-4V4\"></path>",
  _tmpl$1389 = "<path d=\"M20 20v-7a4 4 0 0 0-4-4H4\"></path>",
  _tmpl$1390 = "<path d=\"M9 14 4 9l5-5\"></path>",
  _tmpl$1391 = "<path d=\"m15 14 5-5-5-5\"></path>",
  _tmpl$1392 = "<path d=\"M4 20v-7a4 4 0 0 1 4-4h12\"></path>",
  _tmpl$1393 = "<path d=\"M12 20v2\"></path>",
  _tmpl$1394 = "<path d=\"M17 20v2\"></path>",
  _tmpl$1395 = "<path d=\"M17 2v2\"></path>",
  _tmpl$1396 = "<path d=\"M2 17h2\"></path>",
  _tmpl$1397 = "<path d=\"M2 7h2\"></path>",
  _tmpl$1398 = "<path d=\"M20 17h2\"></path>",
  _tmpl$1399 = "<path d=\"M20 7h2\"></path>",
  _tmpl$1400 = "<path d=\"M7 20v2\"></path>",
  _tmpl$1401 = "<path d=\"M7 2v2\"></path>",
  _tmpl$1402 = "<rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"></rect>",
  _tmpl$1403 = "<rect x=\"8\" y=\"8\" width=\"8\" height=\"8\" rx=\"1\"></rect>",
  _tmpl$1404 = "<path d=\"M10 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1\"></path>",
  _tmpl$1405 = "<path d=\"M17 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1\"></path>",
  _tmpl$1406 = "<rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect>",
  _tmpl$1407 = "<line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line>",
  _tmpl$1408 = "<path d=\"m4.6 13.11 5.79-3.21c1.89-1.05 4.79 1.78 3.71 3.71l-3.22 5.81C8.8 23.16.79 15.23 4.6 13.11Z\"></path>",
  _tmpl$1409 = "<path d=\"m10.5 9.5-1-2.29C9.2 6.48 8.8 6 8 6H4.5C2.79 6 2 6.5 2 8.5a7.71 7.71 0 0 0 2 4.83\"></path>",
  _tmpl$1410 = "<path d=\"M8 6c0-1.55.24-4-2-4-2 0-2.5 2.17-2.5 4\"></path>",
  _tmpl$1411 = "<path d=\"m14.5 13.5 2.29 1c.73.3 1.21.7 1.21 1.5v3.5c0 1.71-.5 2.5-2.5 2.5a7.71 7.71 0 0 1-4.83-2\"></path>",
  _tmpl$1412 = "<path d=\"M18 16c1.55 0 4-.24 4 2 0 2-2.17 2.5-4 2.5\"></path>",
  _tmpl$1413 = "<path d=\"M6 2v14a2 2 0 0 0 2 2h14\"></path>",
  _tmpl$1414 = "<path d=\"M18 22V8a2 2 0 0 0-2-2H2\"></path>",
  _tmpl$1415 = "<path d=\"M4 9a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h4a1 1 0 0 1 1 1v4a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-4a1 1 0 0 1 1-1h4a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-4a1 1 0 0 1-1-1V4a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4a1 1 0 0 1-1 1z\"></path>",
  _tmpl$1416 = "<line x1=\"22\" x2=\"18\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$1417 = "<line x1=\"6\" x2=\"2\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$1418 = "<line x1=\"12\" x2=\"12\" y1=\"6\" y2=\"2\"></line>",
  _tmpl$1419 = "<line x1=\"12\" x2=\"12\" y1=\"22\" y2=\"18\"></line>",
  _tmpl$1420 = "<path d=\"M11.562 3.266a.5.5 0 0 1 .876 0L15.39 8.87a1 1 0 0 0 1.516.294L21.183 5.5a.5.5 0 0 1 .798.519l-2.834 10.246a1 1 0 0 1-.956.734H5.81a1 1 0 0 1-.957-.734L2.02 6.02a.5.5 0 0 1 .798-.519l4.276 3.664a1 1 0 0 0 1.516-.294z\"></path>",
  _tmpl$1421 = "<path d=\"m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z\"></path>",
  _tmpl$1422 = "<path d=\"M10 22v-8L2.25 9.15\"></path>",
  _tmpl$1423 = "<path d=\"m10 14 11.77-6.87\"></path>",
  _tmpl$1424 = "<path d=\"m6 8 1.75 12.28a2 2 0 0 0 2 1.72h4.54a2 2 0 0 0 2-1.72L18 8\"></path>",
  _tmpl$1425 = "<path d=\"M5 8h14\"></path>",
  _tmpl$1426 = "<path d=\"M7 15a6.47 6.47 0 0 1 5 0 6.47 6.47 0 0 0 5 0\"></path>",
  _tmpl$1427 = "<path d=\"m12 8 1-6h2\"></path>",
  _tmpl$1428 = "<circle cx=\"12\" cy=\"12\" r=\"8\"></circle>",
  _tmpl$1429 = "<line x1=\"3\" x2=\"6\" y1=\"3\" y2=\"6\"></line>",
  _tmpl$1430 = "<line x1=\"21\" x2=\"18\" y1=\"3\" y2=\"6\"></line>",
  _tmpl$1431 = "<line x1=\"3\" x2=\"6\" y1=\"21\" y2=\"18\"></line>",
  _tmpl$1432 = "<line x1=\"21\" x2=\"18\" y1=\"21\" y2=\"18\"></line>",
  _tmpl$1433 = "<ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\"></ellipse>",
  _tmpl$1434 = "<path d=\"M3 5v14a9 3 0 0 0 18 0V5\"></path>",
  _tmpl$1435 = "<path d=\"M11 11.31c1.17.56 1.54 1.69 3.5 1.69 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\"></path>",
  _tmpl$1436 = "<path d=\"M11.75 18c.35.5 1.45 1 2.75 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\"></path>",
  _tmpl$1437 = "<path d=\"M2 10h4\"></path>",
  _tmpl$1438 = "<path d=\"M2 14h4\"></path>",
  _tmpl$1439 = "<path d=\"M2 18h4\"></path>",
  _tmpl$1440 = "<path d=\"M2 6h4\"></path>",
  _tmpl$1441 = "<path d=\"M7 3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1L10 4a1 1 0 0 0-1-1z\"></path>",
  _tmpl$1442 = "<path d=\"M3 12a9 3 0 0 0 5 2.69\"></path>",
  _tmpl$1443 = "<path d=\"M21 9.3V5\"></path>",
  _tmpl$1444 = "<path d=\"M3 5v14a9 3 0 0 0 6.47 2.88\"></path>",
  _tmpl$1445 = "<path d=\"M12 12v4h4\"></path>",
  _tmpl$1446 = "<path d=\"M13 20a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L12 16\"></path>",
  _tmpl$1447 = "<path d=\"M3 5V19A9 3 0 0 0 15 21.84\"></path>",
  _tmpl$1448 = "<path d=\"M21 5V8\"></path>",
  _tmpl$1449 = "<path d=\"M21 12L18 17H22L19 22\"></path>",
  _tmpl$1450 = "<path d=\"M3 12A9 3 0 0 0 14.59 14.87\"></path>",
  _tmpl$1451 = "<path d=\"M3 5V19A9 3 0 0 0 21 19V5\"></path>",
  _tmpl$1452 = "<path d=\"M3 12A9 3 0 0 0 21 12\"></path>",
  _tmpl$1453 = "<path d=\"m13 21-3-3 3-3\"></path>",
  _tmpl$1454 = "<path d=\"M20 18H10\"></path>",
  _tmpl$1455 = "<path d=\"M3 11h.01\"></path>",
  _tmpl$1456 = "<rect x=\"6\" y=\"3\" width=\"5\" height=\"8\" rx=\"2.5\"></rect>",
  _tmpl$1457 = "<path d=\"M10 18h10\"></path>",
  _tmpl$1458 = "<path d=\"m17 21 3-3-3-3\"></path>",
  _tmpl$1459 = "<rect x=\"15\" y=\"3\" width=\"5\" height=\"8\" rx=\"2.5\"></rect>",
  _tmpl$1460 = "<path d=\"M10 5a2 2 0 0 0-1.344.519l-6.328 5.74a1 1 0 0 0 0 1.481l6.328 5.741A2 2 0 0 0 10 19h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z\"></path>",
  _tmpl$1461 = "<path d=\"m12 9 6 6\"></path>",
  _tmpl$1462 = "<path d=\"m18 9-6 6\"></path>",
  _tmpl$1463 = "<path d=\"M10.162 3.167A10 10 0 0 0 2 13a2 2 0 0 0 4 0v-1a2 2 0 0 1 4 0v4a2 2 0 0 0 4 0v-4a2 2 0 0 1 4 0v1a2 2 0 0 0 4-.006 10 10 0 0 0-8.161-9.826\"></path>",
  _tmpl$1464 = "<path d=\"M20.804 14.869a9 9 0 0 1-17.608 0\"></path>",
  _tmpl$1465 = "<circle cx=\"12\" cy=\"4\" r=\"2\"></circle>",
  _tmpl$1466 = "<circle cx=\"19\" cy=\"19\" r=\"2\"></circle>",
  _tmpl$1467 = "<circle cx=\"5\" cy=\"5\" r=\"2\"></circle>",
  _tmpl$1468 = "<path d=\"M6.48 3.66a10 10 0 0 1 13.86 13.86\"></path>",
  _tmpl$1469 = "<path d=\"m6.41 6.41 11.18 11.18\"></path>",
  _tmpl$1470 = "<path d=\"M3.66 6.48a10 10 0 0 0 13.86 13.86\"></path>",
  _tmpl$1471 = "<path d=\"M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0z\"></path>",
  _tmpl$1472 = "<path d=\"M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0Z\"></path>",
  _tmpl$1473 = "<path d=\"M9.2 9.2h.01\"></path>",
  _tmpl$1474 = "<path d=\"m14.5 9.5-5 5\"></path>",
  _tmpl$1475 = "<path d=\"M14.7 14.8h.01\"></path>",
  _tmpl$1476 = "<path d=\"M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41l-7.59-7.59a2.41 2.41 0 0 0-3.41 0Z\"></path>",
  _tmpl$1477 = "<path d=\"M15 9h.01\"></path>",
  _tmpl$1478 = "<path d=\"M9 15h.01\"></path>",
  _tmpl$1479 = "<path d=\"M16 8h.01\"></path>",
  _tmpl$1480 = "<path d=\"M8 8h.01\"></path>",
  _tmpl$1481 = "<path d=\"M16 16h.01\"></path>",
  _tmpl$1482 = "<rect width=\"12\" height=\"12\" x=\"2\" y=\"10\" rx=\"2\" ry=\"2\"></rect>",
  _tmpl$1483 = "<path d=\"m17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6\"></path>",
  _tmpl$1484 = "<path d=\"M6 18h.01\"></path>",
  _tmpl$1485 = "<path d=\"M10 14h.01\"></path>",
  _tmpl$1486 = "<path d=\"M15 6h.01\"></path>",
  _tmpl$1487 = "<path d=\"M18 9h.01\"></path>",
  _tmpl$1488 = "<path d=\"M5 10h14\"></path>",
  _tmpl$1489 = "<path d=\"M6 12c0-1.7.7-3.2 1.8-4.2\"></path>",
  _tmpl$1490 = "<path d=\"M18 12c0 1.7-.7 3.2-1.8 4.2\"></path>",
  _tmpl$1491 = "<circle cx=\"12\" cy=\"12\" r=\"5\"></circle>",
  _tmpl$1492 = "<circle cx=\"12\" cy=\"6\" r=\"1\"></circle>",
  _tmpl$1493 = "<line x1=\"5\" x2=\"19\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$1494 = "<circle cx=\"12\" cy=\"18\" r=\"1\"></circle>",
  _tmpl$1495 = "<path d=\"M15 2c-1.35 1.5-2.092 3-2.5 4.5L14 8\"></path>",
  _tmpl$1496 = "<path d=\"m17 6-2.891-2.891\"></path>",
  _tmpl$1497 = "<path d=\"M2 15c3.333-3 6.667-3 10-3\"></path>",
  _tmpl$1498 = "<path d=\"m20 9 .891.891\"></path>",
  _tmpl$1499 = "<path d=\"M22 9c-1.5 1.35-3 2.092-4.5 2.5l-1-1\"></path>",
  _tmpl$1500 = "<path d=\"M3.109 14.109 4 15\"></path>",
  _tmpl$1501 = "<path d=\"m6.5 12.5 1 1\"></path>",
  _tmpl$1502 = "<path d=\"m7 18 2.891 2.891\"></path>",
  _tmpl$1503 = "<path d=\"M9 22c1.35-1.5 2.092-3 2.5-4.5L10 16\"></path>",
  _tmpl$1504 = "<path d=\"m10 16 1.5 1.5\"></path>",
  _tmpl$1505 = "<path d=\"m14 8-1.5-1.5\"></path>",
  _tmpl$1506 = "<path d=\"M15 2c-1.798 1.998-2.518 3.995-2.807 5.993\"></path>",
  _tmpl$1507 = "<path d=\"m16.5 10.5 1 1\"></path>",
  _tmpl$1508 = "<path d=\"M2 15c6.667-6 13.333 0 20-6\"></path>",
  _tmpl$1509 = "<path d=\"M9 22c1.798-1.998 2.518-3.995 2.807-5.993\"></path>",
  _tmpl$1510 = "<path d=\"M6 16h12\"></path>",
  _tmpl$1511 = "<path d=\"M11.25 16.25h1.5L12 17z\"></path>",
  _tmpl$1512 = "<path d=\"M4.42 11.247A13.152 13.152 0 0 0 4 14.556C4 18.728 7.582 21 12 21s8-2.272 8-6.444a11.702 11.702 0 0 0-.493-3.309\"></path>",
  _tmpl$1513 = "<path d=\"M8.5 8.5c-.384 1.05-1.083 2.028-2.344 2.5-1.931.722-3.576-.297-3.656-1-.113-.994 1.177-6.53 4-7 1.923-.321 3.651.845 3.651 2.235A7.497 7.497 0 0 1 14 5.277c0-1.39 1.844-2.598 3.767-2.277 2.823.47 4.113 6.006 4 7-.08.703-1.725 1.722-3.656 1-1.261-.472-1.855-1.45-2.239-2.5\"></path>",
  _tmpl$1514 = "<line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"22\"></line>",
  _tmpl$1515 = "<path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path>",
  _tmpl$1516 = "<path d=\"M20.5 10a2.5 2.5 0 0 1-2.4-3H18a2.95 2.95 0 0 1-2.6-4.4 10 10 0 1 0 6.3 7.1c-.3.2-.8.3-1.2.3\"></path>",
  _tmpl$1517 = "<path d=\"M10 12h.01\"></path>",
  _tmpl$1518 = "<path d=\"M18 9V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v14\"></path>",
  _tmpl$1519 = "<path d=\"M2 20h8\"></path>",
  _tmpl$1520 = "<path d=\"M20 17v-2a2 2 0 1 0-4 0v2\"></path>",
  _tmpl$1521 = "<rect x=\"14\" y=\"17\" width=\"8\" height=\"5\" rx=\"1\"></rect>",
  _tmpl$1522 = "<path d=\"M18 20V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v14\"></path>",
  _tmpl$1523 = "<path d=\"M11 20H2\"></path>",
  _tmpl$1524 = "<path d=\"M11 4.562v16.157a1 1 0 0 0 1.242.97L19 20V5.562a2 2 0 0 0-1.515-1.94l-4-1A2 2 0 0 0 11 4.561z\"></path>",
  _tmpl$1525 = "<path d=\"M11 4H8a2 2 0 0 0-2 2v14\"></path>",
  _tmpl$1526 = "<path d=\"M14 12h.01\"></path>",
  _tmpl$1527 = "<path d=\"M22 20h-3\"></path>",
  _tmpl$1528 = "<circle cx=\"12.1\" cy=\"12.1\" r=\"1\"></circle>",
  _tmpl$1529 = "<path d=\"M12 15V3\"></path>",
  _tmpl$1530 = "<path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>",
  _tmpl$1531 = "<path d=\"m7 10 5 5 5-5\"></path>",
  _tmpl$1532 = "<path d=\"m12.99 6.74 1.93 3.44\"></path>",
  _tmpl$1533 = "<path d=\"M19.136 12a10 10 0 0 1-14.271 0\"></path>",
  _tmpl$1534 = "<path d=\"m21 21-2.16-3.84\"></path>",
  _tmpl$1535 = "<path d=\"m3 21 8.02-14.26\"></path>",
  _tmpl$1536 = "<circle cx=\"12\" cy=\"5\" r=\"2\"></circle>",
  _tmpl$1537 = "<path d=\"M10 11h.01\"></path>",
  _tmpl$1538 = "<path d=\"M14 6h.01\"></path>",
  _tmpl$1539 = "<path d=\"M18 6h.01\"></path>",
  _tmpl$1540 = "<path d=\"M6.5 13.1h.01\"></path>",
  _tmpl$1541 = "<path d=\"M22 5c0 9-4 12-6 12s-6-3-6-12c0-2 2-3 6-3s6 1 6 3\"></path>",
  _tmpl$1542 = "<path d=\"M17.4 9.9c-.8.8-2 .8-2.8 0\"></path>",
  _tmpl$1543 = "<path d=\"M10.1 7.1C9 7.2 7.7 7.7 6 8.6c-3.5 2-4.7 3.9-3.7 5.6 4.5 7.8 9.5 8.4 11.2 7.4.9-.5 1.9-2.1 1.9-4.7\"></path>",
  _tmpl$1544 = "<path d=\"M9.1 16.5c.3-1.1 1.4-1.7 2.4-1.4\"></path>",
  _tmpl$1545 = "<path d=\"M19.13 5.09C15.22 9.14 10 10.44 2.25 10.94\"></path>",
  _tmpl$1546 = "<path d=\"M21.75 12.84c-6.62-1.41-12.14 1-16.38 6.32\"></path>",
  _tmpl$1547 = "<path d=\"M8.56 2.75c4.37 6 6 9.42 8 17.72\"></path>",
  _tmpl$1548 = "<path d=\"M10 18a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H5a3 3 0 0 1-3-3 1 1 0 0 1 1-1z\"></path>",
  _tmpl$1549 = "<path d=\"M13 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1l-.81 3.242a1 1 0 0 1-.97.758H8\"></path>",
  _tmpl$1550 = "<path d=\"M14 4h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-3\"></path>",
  _tmpl$1551 = "<path d=\"M18 6h4\"></path>",
  _tmpl$1552 = "<path d=\"m5 10-2 8\"></path>",
  _tmpl$1553 = "<path d=\"m7 18 2-8\"></path>",
  _tmpl$1554 = "<path d=\"M10 10 7 7\"></path>",
  _tmpl$1555 = "<path d=\"m10 14-3 3\"></path>",
  _tmpl$1556 = "<path d=\"m14 10 3-3\"></path>",
  _tmpl$1557 = "<path d=\"m14 14 3 3\"></path>",
  _tmpl$1558 = "<path d=\"M14.205 4.139a4 4 0 1 1 5.439 5.863\"></path>",
  _tmpl$1559 = "<path d=\"M19.637 14a4 4 0 1 1-5.432 5.868\"></path>",
  _tmpl$1560 = "<path d=\"M4.367 10a4 4 0 1 1 5.438-5.862\"></path>",
  _tmpl$1561 = "<path d=\"M9.795 19.862a4 4 0 1 1-5.429-5.873\"></path>",
  _tmpl$1562 = "<rect x=\"10\" y=\"8\" width=\"4\" height=\"8\" rx=\"1\"></rect>",
  _tmpl$1563 = "<path d=\"M18.715 13.186C18.29 11.858 17.384 10.607 16 9.5c-2-1.6-3.5-4-4-6.5a10.7 10.7 0 0 1-.884 2.586\"></path>",
  _tmpl$1564 = "<path d=\"M8.795 8.797A11 11 0 0 1 8 9.5C6 11.1 5 13 5 15a7 7 0 0 0 13.222 3.208\"></path>",
  _tmpl$1565 = "<path d=\"M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-4-6.5c-.5 2.5-2 4.9-4 6.5C6 11.1 5 13 5 15a7 7 0 0 0 7 7z\"></path>",
  _tmpl$1566 = "<path d=\"M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z\"></path>",
  _tmpl$1567 = "<path d=\"M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97\"></path>",
  _tmpl$1568 = "<path d=\"m2 2 8 8\"></path>",
  _tmpl$1569 = "<path d=\"m22 2-8 8\"></path>",
  _tmpl$1570 = "<ellipse cx=\"12\" cy=\"9\" rx=\"10\" ry=\"5\"></ellipse>",
  _tmpl$1571 = "<path d=\"M7 13.4v7.9\"></path>",
  _tmpl$1572 = "<path d=\"M12 14v8\"></path>",
  _tmpl$1573 = "<path d=\"M17 13.4v7.9\"></path>",
  _tmpl$1574 = "<path d=\"M2 9v8a10 5 0 0 0 20 0V9\"></path>",
  _tmpl$1575 = "<path d=\"M15.4 15.63a7.875 6 135 1 1 6.23-6.23 4.5 3.43 135 0 0-6.23 6.23\"></path>",
  _tmpl$1576 = "<path d=\"m8.29 12.71-2.6 2.6a2.5 2.5 0 1 0-1.65 4.65A2.5 2.5 0 1 0 8.7 18.3l2.59-2.59\"></path>",
  _tmpl$1577 = "<path d=\"M17.596 12.768a2 2 0 1 0 2.829-2.829l-1.768-1.767a2 2 0 0 0 2.828-2.829l-2.828-2.828a2 2 0 0 0-2.829 2.828l-1.767-1.768a2 2 0 1 0-2.829 2.829z\"></path>",
  _tmpl$1578 = "<path d=\"m2.5 21.5 1.4-1.4\"></path>",
  _tmpl$1579 = "<path d=\"m20.1 3.9 1.4-1.4\"></path>",
  _tmpl$1580 = "<path d=\"M5.343 21.485a2 2 0 1 0 2.829-2.828l1.767 1.768a2 2 0 1 0 2.829-2.829l-6.364-6.364a2 2 0 1 0-2.829 2.829l1.768 1.767a2 2 0 0 0-2.828 2.829z\"></path>",
  _tmpl$1581 = "<path d=\"m9.6 14.4 4.8-4.8\"></path>",
  _tmpl$1582 = "<path d=\"M6 18.5a3.5 3.5 0 1 0 7 0c0-1.57.92-2.52 2.04-3.46\"></path>",
  _tmpl$1583 = "<path d=\"M6 8.5c0-.75.13-1.47.36-2.14\"></path>",
  _tmpl$1584 = "<path d=\"M8.8 3.15A6.5 6.5 0 0 1 19 8.5c0 1.63-.44 2.81-1.09 3.76\"></path>",
  _tmpl$1585 = "<path d=\"M12.5 6A2.5 2.5 0 0 1 15 8.5M10 13a2 2 0 0 0 1.82-1.18\"></path>",
  _tmpl$1586 = "<path d=\"M6 8.5a6.5 6.5 0 1 1 13 0c0 6-6 6-6 10a3.5 3.5 0 1 1-7 0\"></path>",
  _tmpl$1587 = "<path d=\"M15 8.5a2.5 2.5 0 0 0-5 0v1a2 2 0 1 1 0 4\"></path>",
  _tmpl$1588 = "<path d=\"M7 3.34V5a3 3 0 0 0 3 3\"></path>",
  _tmpl$1589 = "<path d=\"M11 21.95V18a2 2 0 0 0-2-2 2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05\"></path>",
  _tmpl$1590 = "<path d=\"M21.54 15H17a2 2 0 0 0-2 2v4.54\"></path>",
  _tmpl$1591 = "<path d=\"M12 2a10 10 0 1 0 9.54 13\"></path>",
  _tmpl$1592 = "<path d=\"M20 6V4a2 2 0 1 0-4 0v2\"></path>",
  _tmpl$1593 = "<rect width=\"8\" height=\"5\" x=\"14\" y=\"6\" rx=\"1\"></rect>",
  _tmpl$1594 = "<path d=\"M7 3.34V5a3 3 0 0 0 3 3a2 2 0 0 1 2 2c0 1.1.9 2 2 2a2 2 0 0 0 2-2c0-1.1.9-2 2-2h3.17\"></path>",
  _tmpl$1595 = "<path d=\"M11 21.95V18a2 2 0 0 0-2-2a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05\"></path>",
  _tmpl$1596 = "<path d=\"M12 2a7 7 0 1 0 10 10\"></path>",
  _tmpl$1597 = "<circle cx=\"11.5\" cy=\"12.5\" r=\"3.5\"></circle>",
  _tmpl$1598 = "<path d=\"M3 8c0-3.5 2.5-6 6.5-6 5 0 4.83 3 7.5 5s5 2 5 6c0 4.5-2.5 6.5-7 6.5-2.5 0-2.5 2.5-6 2.5s-7-2-7-5.5c0-3 1.5-3 1.5-5C3.5 10 3 9 3 8Z\"></path>",
  _tmpl$1599 = "<path d=\"M20 14.347V14c0-6-4-12-8-12-1.078 0-2.157.436-3.157 1.19\"></path>",
  _tmpl$1600 = "<path d=\"M6.206 6.21C4.871 8.4 4 11.2 4 14a8 8 0 0 0 14.568 4.568\"></path>",
  _tmpl$1601 = "<path d=\"M12 2C8 2 4 8 4 14a8 8 0 0 0 16 0c0-6-4-12-8-12\"></path>",
  _tmpl$1602 = "<circle cx=\"12\" cy=\"5\" r=\"1\"></circle>",
  _tmpl$1603 = "<circle cx=\"12\" cy=\"19\" r=\"1\"></circle>",
  _tmpl$1604 = "<circle cx=\"19\" cy=\"12\" r=\"1\"></circle>",
  _tmpl$1605 = "<circle cx=\"5\" cy=\"12\" r=\"1\"></circle>",
  _tmpl$1606 = "<path d=\"M5 15a6.5 6.5 0 0 1 7 0 6.5 6.5 0 0 0 7 0\"></path>",
  _tmpl$1607 = "<path d=\"M5 9a6.5 6.5 0 0 1 7 0 6.5 6.5 0 0 0 7 0\"></path>",
  _tmpl$1608 = "<line x1=\"5\" x2=\"19\" y1=\"9\" y2=\"9\"></line>",
  _tmpl$1609 = "<line x1=\"5\" x2=\"19\" y1=\"15\" y2=\"15\"></line>",
  _tmpl$1610 = "<line x1=\"19\" x2=\"5\" y1=\"5\" y2=\"19\"></line>",
  _tmpl$1611 = "<path d=\"M21 21H8a2 2 0 0 1-1.42-.587l-3.994-3.999a2 2 0 0 1 0-2.828l10-10a2 2 0 0 1 2.829 0l5.999 6a2 2 0 0 1 0 2.828L12.834 21\"></path>",
  _tmpl$1612 = "<path d=\"m5.082 11.09 8.828 8.828\"></path>",
  _tmpl$1613 = "<path d=\"m15 20 3-3h2a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h2l3 3z\"></path>",
  _tmpl$1614 = "<path d=\"M6 8v1\"></path>",
  _tmpl$1615 = "<path d=\"M10 8v1\"></path>",
  _tmpl$1616 = "<path d=\"M14 8v1\"></path>",
  _tmpl$1617 = "<path d=\"M18 8v1\"></path>",
  _tmpl$1618 = "<path d=\"M4 10h12\"></path>",
  _tmpl$1619 = "<path d=\"M4 14h9\"></path>",
  _tmpl$1620 = "<path d=\"M19 6a7.7 7.7 0 0 0-5.2-2A7.9 7.9 0 0 0 6 12c0 4.4 3.5 8 7.8 8 2 0 3.8-.8 5.2-2\"></path>",
  _tmpl$1621 = "<path d=\"m15 15 6 6\"></path>",
  _tmpl$1622 = "<path d=\"m15 9 6-6\"></path>",
  _tmpl$1623 = "<path d=\"M21 16v5h-5\"></path>",
  _tmpl$1624 = "<path d=\"M21 8V3h-5\"></path>",
  _tmpl$1625 = "<path d=\"M3 16v5h5\"></path>",
  _tmpl$1626 = "<path d=\"m3 21 6-6\"></path>",
  _tmpl$1627 = "<path d=\"M3 8V3h5\"></path>",
  _tmpl$1628 = "<path d=\"M9 9 3 3\"></path>",
  _tmpl$1629 = "<path d=\"M15 3h6v6\"></path>",
  _tmpl$1630 = "<path d=\"M10 14 21 3\"></path>",
  _tmpl$1631 = "<path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>",
  _tmpl$1632 = "<path d=\"m15 18-.722-3.25\"></path>",
  _tmpl$1633 = "<path d=\"M2 8a10.645 10.645 0 0 0 20 0\"></path>",
  _tmpl$1634 = "<path d=\"m20 15-1.726-2.05\"></path>",
  _tmpl$1635 = "<path d=\"m4 15 1.726-2.05\"></path>",
  _tmpl$1636 = "<path d=\"m9 18 .722-3.25\"></path>",
  _tmpl$1637 = "<path d=\"M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49\"></path>",
  _tmpl$1638 = "<path d=\"M14.084 14.158a3 3 0 0 1-4.242-4.242\"></path>",
  _tmpl$1639 = "<path d=\"M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143\"></path>",
  _tmpl$1640 = "<path d=\"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0\"></path>",
  _tmpl$1641 = "<path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path>",
  _tmpl$1642 = "<path d=\"M12 16h.01\"></path>",
  _tmpl$1643 = "<path d=\"M3 19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8.5a.5.5 0 0 0-.769-.422l-4.462 2.844A.5.5 0 0 1 15 10.5v-2a.5.5 0 0 0-.769-.422L9.77 10.922A.5.5 0 0 1 9 10.5V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z\"></path>",
  _tmpl$1644 = "<path d=\"M10.827 16.379a6.082 6.082 0 0 1-8.618-7.002l5.412 1.45a6.082 6.082 0 0 1 7.002-8.618l-1.45 5.412a6.082 6.082 0 0 1 8.618 7.002l-5.412-1.45a6.082 6.082 0 0 1-7.002 8.618l1.45-5.412Z\"></path>",
  _tmpl$1645 = "<polygon points=\"13 19 22 12 13 5 13 19\"></polygon>",
  _tmpl$1646 = "<polygon points=\"2 19 11 12 2 5 2 19\"></polygon>",
  _tmpl$1647 = "<path d=\"M12.67 19a2 2 0 0 0 1.416-.588l6.154-6.172a6 6 0 0 0-8.49-8.49L5.586 9.914A2 2 0 0 0 5 11.328V18a1 1 0 0 0 1 1z\"></path>",
  _tmpl$1648 = "<path d=\"M16 8 2 22\"></path>",
  _tmpl$1649 = "<path d=\"M17.5 15H9\"></path>",
  _tmpl$1650 = "<path d=\"M4 3 2 5v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z\"></path>",
  _tmpl$1651 = "<path d=\"M6 8h4\"></path>",
  _tmpl$1652 = "<path d=\"M6 18h4\"></path>",
  _tmpl$1653 = "<path d=\"m12 3-2 2v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z\"></path>",
  _tmpl$1654 = "<path d=\"M14 8h4\"></path>",
  _tmpl$1655 = "<path d=\"M14 18h4\"></path>",
  _tmpl$1656 = "<path d=\"m20 3-2 2v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z\"></path>",
  _tmpl$1657 = "<path d=\"M12 2v4\"></path>",
  _tmpl$1658 = "<path d=\"m6.8 15-3.5 2\"></path>",
  _tmpl$1659 = "<path d=\"m20.7 7-3.5 2\"></path>",
  _tmpl$1660 = "<path d=\"M6.8 9 3.3 7\"></path>",
  _tmpl$1661 = "<path d=\"m20.7 17-3.5-2\"></path>",
  _tmpl$1662 = "<path d=\"m9 22 3-8 3 8\"></path>",
  _tmpl$1663 = "<path d=\"M8 22h8\"></path>",
  _tmpl$1664 = "<path d=\"M18 18.7a9 9 0 1 0-12 0\"></path>",
  _tmpl$1665 = "<path d=\"M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z\"></path>",
  _tmpl$1666 = "<path d=\"M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z\"></path>",
  _tmpl$1667 = "<path d=\"M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z\"></path>",
  _tmpl$1668 = "<path d=\"M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z\"></path>",
  _tmpl$1669 = "<path d=\"M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z\"></path>",
  _tmpl$1670 = "<path d=\"M10 12v-1\"></path>",
  _tmpl$1671 = "<path d=\"M10 18v-2\"></path>",
  _tmpl$1672 = "<path d=\"M10 7V6\"></path>",
  _tmpl$1673 = "<path d=\"M14 2v4a2 2 0 0 0 2 2h4\"></path>",
  _tmpl$1674 = "<path d=\"M15.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 .274 1.01\"></path>",
  _tmpl$1675 = "<circle cx=\"10\" cy=\"20\" r=\"2\"></circle>",
  _tmpl$1676 = "<path d=\"M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2\"></path>",
  _tmpl$1677 = "<circle cx=\"3\" cy=\"17\" r=\"1\"></circle>",
  _tmpl$1678 = "<path d=\"M2 17v-3a4 4 0 0 1 8 0v3\"></path>",
  _tmpl$1679 = "<circle cx=\"9\" cy=\"17\" r=\"1\"></circle>",
  _tmpl$1680 = "<path d=\"M17.5 22h.5a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3\"></path>",
  _tmpl$1681 = "<path d=\"M2 19a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0v-4a6 6 0 0 1 12 0v4a2 2 0 1 1-4 0v-1a2 2 0 1 1 4 0\"></path>",
  _tmpl$1682 = "<path d=\"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\"></path>",
  _tmpl$1683 = "<path d=\"m8 18 4-4\"></path>",
  _tmpl$1684 = "<path d=\"M8 10v8h8\"></path>",
  _tmpl$1685 = "<path d=\"m13.69 12.479 1.29 4.88a.5.5 0 0 1-.697.591l-1.844-.849a1 1 0 0 0-.88.001l-1.846.85a.5.5 0 0 1-.693-.593l1.29-4.88\"></path>",
  _tmpl$1686 = "<path d=\"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z\"></path>",
  _tmpl$1687 = "<path d=\"M12 22h6a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3.072\"></path>",
  _tmpl$1688 = "<path d=\"m6.69 16.479 1.29 4.88a.5.5 0 0 1-.698.591l-1.843-.849a1 1 0 0 0-.88.001l-1.846.85a.5.5 0 0 1-.693-.593l1.29-4.88\"></path>",
  _tmpl$1689 = "<circle cx=\"5\" cy=\"14\" r=\"3\"></circle>",
  _tmpl$1690 = "<path d=\"M14.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4\"></path>",
  _tmpl$1691 = "<path d=\"M3 13.1a2 2 0 0 0-1 1.76v3.24a2 2 0 0 0 .97 1.78L6 21.7a2 2 0 0 0 2.03.01L11 19.9a2 2 0 0 0 1-1.76V14.9a2 2 0 0 0-.97-1.78L8 11.3a2 2 0 0 0-2.03-.01Z\"></path>",
  _tmpl$1692 = "<path d=\"M7 17v5\"></path>",
  _tmpl$1693 = "<path d=\"M11.7 14.2 7 17l-4.7-2.8\"></path>",
  _tmpl$1694 = "<path d=\"M8 18v-2\"></path>",
  _tmpl$1695 = "<path d=\"M12 18v-4\"></path>",
  _tmpl$1696 = "<path d=\"M16 18v-6\"></path>",
  _tmpl$1697 = "<path d=\"M8 18v-1\"></path>",
  _tmpl$1698 = "<path d=\"M12 18v-6\"></path>",
  _tmpl$1699 = "<path d=\"M16 18v-3\"></path>",
  _tmpl$1700 = "<path d=\"m16 13-3.5 3.5-2-2L8 17\"></path>",
  _tmpl$1701 = "<path d=\"M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3.5\"></path>",
  _tmpl$1702 = "<path d=\"M4.017 11.512a6 6 0 1 0 8.466 8.475\"></path>",
  _tmpl$1703 = "<path d=\"M9 16a1 1 0 0 1-1-1v-4c0-.552.45-1.008.995-.917a6 6 0 0 1 4.922 4.922c.091.544-.365.995-.917.995z\"></path>",
  _tmpl$1704 = "<path d=\"M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4\"></path>",
  _tmpl$1705 = "<path d=\"m3 15 2 2 4-4\"></path>",
  _tmpl$1706 = "<path d=\"m9 15 2 2 4-4\"></path>",
  _tmpl$1707 = "<path d=\"M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3\"></path>",
  _tmpl$1708 = "<path d=\"M8 14v2.2l1.6 1\"></path>",
  _tmpl$1709 = "<circle cx=\"8\" cy=\"16\" r=\"6\"></circle>",
  _tmpl$1710 = "<path d=\"m5 12-3 3 3 3\"></path>",
  _tmpl$1711 = "<path d=\"m9 18 3-3-3-3\"></path>",
  _tmpl$1712 = "<path d=\"M10 12.5 8 15l2 2.5\"></path>",
  _tmpl$1713 = "<path d=\"m14 12.5 2 2.5-2 2.5\"></path>",
  _tmpl$1714 = "<path d=\"m2.305 15.53.923-.382\"></path>",
  _tmpl$1715 = "<path d=\"m3.228 12.852-.924-.383\"></path>",
  _tmpl$1716 = "<path d=\"M4.677 21.5a2 2 0 0 0 1.313.5H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2.5\"></path>",
  _tmpl$1717 = "<path d=\"m4.852 11.228-.383-.923\"></path>",
  _tmpl$1718 = "<path d=\"m4.852 16.772-.383.924\"></path>",
  _tmpl$1719 = "<path d=\"m7.148 11.228.383-.923\"></path>",
  _tmpl$1720 = "<path d=\"m7.53 17.696-.382-.924\"></path>",
  _tmpl$1721 = "<path d=\"m8.772 12.852.923-.383\"></path>",
  _tmpl$1722 = "<path d=\"m8.772 15.148.923.383\"></path>",
  _tmpl$1723 = "<circle cx=\"6\" cy=\"14\" r=\"3\"></circle>",
  _tmpl$1724 = "<rect width=\"4\" height=\"6\" x=\"2\" y=\"12\" rx=\"2\"></rect>",
  _tmpl$1725 = "<path d=\"M10 12h2v6\"></path>",
  _tmpl$1726 = "<path d=\"m9 15 3 3 3-3\"></path>",
  _tmpl$1727 = "<path d=\"M10.29 10.7a2.43 2.43 0 0 0-2.66-.52c-.29.12-.56.3-.78.53l-.35.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L6.5 18l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z\"></path>",
  _tmpl$1728 = "<circle cx=\"10\" cy=\"12\" r=\"2\"></circle>",
  _tmpl$1729 = "<path d=\"m20 17-1.296-1.296a2.41 2.41 0 0 0-3.408 0L9 22\"></path>",
  _tmpl$1730 = "<path d=\"M2 15h10\"></path>",
  _tmpl$1731 = "<path d=\"M4 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1\"></path>",
  _tmpl$1732 = "<path d=\"M8 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1\"></path>",
  _tmpl$1733 = "<path d=\"M10 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1\"></path>",
  _tmpl$1734 = "<path d=\"M14 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1\"></path>",
  _tmpl$1735 = "<path d=\"M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v6\"></path>",
  _tmpl$1736 = "<circle cx=\"4\" cy=\"16\" r=\"2\"></circle>",
  _tmpl$1737 = "<path d=\"m10 10-4.5 4.5\"></path>",
  _tmpl$1738 = "<path d=\"m9 11 1 1\"></path>",
  _tmpl$1739 = "<circle cx=\"10\" cy=\"16\" r=\"2\"></circle>",
  _tmpl$1740 = "<path d=\"m16 10-4.5 4.5\"></path>",
  _tmpl$1741 = "<path d=\"m15 11 1 1\"></path>",
  _tmpl$1742 = "<path d=\"M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v1\"></path>",
  _tmpl$1743 = "<rect width=\"8\" height=\"5\" x=\"2\" y=\"13\" rx=\"1\"></rect>",
  _tmpl$1744 = "<path d=\"M8 13v-2a2 2 0 1 0-4 0v2\"></path>",
  _tmpl$1745 = "<rect width=\"8\" height=\"6\" x=\"8\" y=\"12\" rx=\"1\"></rect>",
  _tmpl$1746 = "<path d=\"M10 12v-2a2 2 0 1 1 4 0v2\"></path>",
  _tmpl$1747 = "<path d=\"M3 15h6\"></path>",
  _tmpl$1748 = "<path d=\"M9 15h6\"></path>",
  _tmpl$1749 = "<path d=\"M10.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v8.4\"></path>",
  _tmpl$1750 = "<path d=\"M8 18v-7.7L16 9v7\"></path>",
  _tmpl$1751 = "<circle cx=\"14\" cy=\"16\" r=\"2\"></circle>",
  _tmpl$1752 = "<circle cx=\"6\" cy=\"18\" r=\"2\"></circle>",
  _tmpl$1753 = "<path d=\"M4 7V4a2 2 0 0 1 2-2 2 2 0 0 0-2 2\"></path>",
  _tmpl$1754 = "<path d=\"M4.063 20.999a2 2 0 0 0 2 1L18 22a2 2 0 0 0 2-2V7l-5-5H6\"></path>",
  _tmpl$1755 = "<path d=\"m5 11-3 3\"></path>",
  _tmpl$1756 = "<path d=\"m5 17-3-3h10\"></path>",
  _tmpl$1757 = "<path d=\"m18 5-2.414-2.414A2 2 0 0 0 14.172 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2\"></path>",
  _tmpl$1758 = "<path d=\"M12.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v9.5\"></path>",
  _tmpl$1759 = "<path d=\"M6 12v6\"></path>",
  _tmpl$1760 = "<path d=\"M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3\"></path>",
  _tmpl$1761 = "<path d=\"M20 10V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4\"></path>",
  _tmpl$1762 = "<path d=\"M16 14a2 2 0 0 0-2 2\"></path>",
  _tmpl$1763 = "<path d=\"M20 14a2 2 0 0 1 2 2\"></path>",
  _tmpl$1764 = "<path d=\"M20 22a2 2 0 0 0 2-2\"></path>",
  _tmpl$1765 = "<path d=\"M16 22a2 2 0 0 1-2-2\"></path>",
  _tmpl$1766 = "<circle cx=\"11.5\" cy=\"14.5\" r=\"2.5\"></circle>",
  _tmpl$1767 = "<path d=\"M13.3 16.3 15 18\"></path>",
  _tmpl$1768 = "<path d=\"M4.268 21a2 2 0 0 0 1.727 1H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3\"></path>",
  _tmpl$1769 = "<path d=\"m9 18-1.5-1.5\"></path>",
  _tmpl$1770 = "<path d=\"M10 11v2\"></path>",
  _tmpl$1771 = "<path d=\"M8 17h8\"></path>",
  _tmpl$1772 = "<path d=\"M14 16v2\"></path>",
  _tmpl$1773 = "<path d=\"M8 13h2\"></path>",
  _tmpl$1774 = "<path d=\"M14 13h2\"></path>",
  _tmpl$1775 = "<path d=\"M8 17h2\"></path>",
  _tmpl$1776 = "<path d=\"M14 17h2\"></path>",
  _tmpl$1777 = "<path d=\"M21 7h-3a2 2 0 0 1-2-2V2\"></path>",
  _tmpl$1778 = "<path d=\"M21 6v6.5c0 .8-.7 1.5-1.5 1.5h-7c-.8 0-1.5-.7-1.5-1.5v-9c0-.8.7-1.5 1.5-1.5H17Z\"></path>",
  _tmpl$1779 = "<path d=\"M7 8v8.8c0 .3.2.6.4.8.2.2.5.4.8.4H15\"></path>",
  _tmpl$1780 = "<path d=\"M3 12v8.8c0 .3.2.6.4.8.2.2.5.4.8.4H11\"></path>",
  _tmpl$1781 = "<path d=\"m10 18 3-3-3-3\"></path>",
  _tmpl$1782 = "<path d=\"M4 11V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7\"></path>",
  _tmpl$1783 = "<path d=\"m8 16 2-2-2-2\"></path>",
  _tmpl$1784 = "<path d=\"M12 18h4\"></path>",
  _tmpl$1785 = "<path d=\"M10 9H8\"></path>",
  _tmpl$1786 = "<path d=\"M16 13H8\"></path>",
  _tmpl$1787 = "<path d=\"M16 17H8\"></path>",
  _tmpl$1788 = "<path d=\"M2 13v-1h6v1\"></path>",
  _tmpl$1789 = "<path d=\"M5 12v6\"></path>",
  _tmpl$1790 = "<path d=\"M4 18h2\"></path>",
  _tmpl$1791 = "<path d=\"M9 13v-1h6v1\"></path>",
  _tmpl$1792 = "<path d=\"M12 12v6\"></path>",
  _tmpl$1793 = "<path d=\"M11 18h2\"></path>",
  _tmpl$1794 = "<path d=\"m15 15-3-3-3 3\"></path>",
  _tmpl$1795 = "<path d=\"M15 18a3 3 0 1 0-6 0\"></path>",
  _tmpl$1796 = "<circle cx=\"12\" cy=\"13\" r=\"2\"></circle>",
  _tmpl$1797 = "<rect width=\"8\" height=\"6\" x=\"2\" y=\"12\" rx=\"1\"></rect>",
  _tmpl$1798 = "<path d=\"m10 15.5 4 2.5v-6l-4 2.5\"></path>",
  _tmpl$1799 = "<path d=\"m10 11 5 3-5 3v-6Z\"></path>",
  _tmpl$1800 = "<path d=\"M11.5 13.5a2.5 2.5 0 0 1 0 3\"></path>",
  _tmpl$1801 = "<path d=\"M15 12a5 5 0 0 1 0 6\"></path>",
  _tmpl$1802 = "<path d=\"M11 11a5 5 0 0 1 0 6\"></path>",
  _tmpl$1803 = "<path d=\"M4 6.765V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-.93-.23\"></path>",
  _tmpl$1804 = "<path d=\"M7 10.51a.5.5 0 0 0-.826-.38l-1.893 1.628A1 1 0 0 1 3.63 12H2.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h1.129a1 1 0 0 1 .652.242l1.893 1.63a.5.5 0 0 0 .826-.38z\"></path>",
  _tmpl$1805 = "<path d=\"M12 9v4\"></path>",
  _tmpl$1806 = "<path d=\"m8 12.5-5 5\"></path>",
  _tmpl$1807 = "<path d=\"m3 12.5 5 5\"></path>",
  _tmpl$1808 = "<path d=\"m14.5 12.5-5 5\"></path>",
  _tmpl$1809 = "<path d=\"m9.5 12.5 5 5\"></path>",
  _tmpl$1810 = "<path d=\"M20 7h-3a2 2 0 0 1-2-2V2\"></path>",
  _tmpl$1811 = "<path d=\"M9 18a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h7l4 4v10a2 2 0 0 1-2 2Z\"></path>",
  _tmpl$1812 = "<path d=\"M3 7.6v12.8A1.6 1.6 0 0 0 4.6 22h9.8\"></path>",
  _tmpl$1813 = "<path d=\"M7 3v18\"></path>",
  _tmpl$1814 = "<path d=\"M3 7.5h4\"></path>",
  _tmpl$1815 = "<path d=\"M3 16.5h4\"></path>",
  _tmpl$1816 = "<path d=\"M17 3v18\"></path>",
  _tmpl$1817 = "<path d=\"M17 7.5h4\"></path>",
  _tmpl$1818 = "<path d=\"M17 16.5h4\"></path>",
  _tmpl$1819 = "<path d=\"M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4\"></path>",
  _tmpl$1820 = "<path d=\"M14 13.12c0 2.38 0 6.38-1 8.88\"></path>",
  _tmpl$1821 = "<path d=\"M17.29 21.02c.12-.6.43-2.3.5-3.02\"></path>",
  _tmpl$1822 = "<path d=\"M2 12a10 10 0 0 1 18-6\"></path>",
  _tmpl$1823 = "<path d=\"M2 16h.01\"></path>",
  _tmpl$1824 = "<path d=\"M21.8 16c.2-2 .131-5.354 0-6\"></path>",
  _tmpl$1825 = "<path d=\"M5 19.5C5.5 18 6 15 6 12a6 6 0 0 1 .34-2\"></path>",
  _tmpl$1826 = "<path d=\"M8.65 22c.21-.66.45-1.32.57-2\"></path>",
  _tmpl$1827 = "<path d=\"M9 6.8a6 6 0 0 1 9 5.2v2\"></path>",
  _tmpl$1828 = "<path d=\"M15 6.5V3a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3.5\"></path>",
  _tmpl$1829 = "<path d=\"M9 18h8\"></path>",
  _tmpl$1830 = "<path d=\"M18 3h-3\"></path>",
  _tmpl$1831 = "<path d=\"M11 3a6 6 0 0 0-6 6v11\"></path>",
  _tmpl$1832 = "<path d=\"M5 13h4\"></path>",
  _tmpl$1833 = "<path d=\"M17 10a4 4 0 0 0-8 0v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2Z\"></path>",
  _tmpl$1834 = "<path d=\"M18 12.47v.03m0-.5v.47m-.475 5.056A6.744 6.744 0 0 1 15 18c-3.56 0-7.56-2.53-8.5-6 .348-1.28 1.114-2.433 2.121-3.38m3.444-2.088A8.802 8.802 0 0 1 15 6c3.56 0 6.06 2.54 7 6-.309 1.14-.786 2.177-1.413 3.058\"></path>",
  _tmpl$1835 = "<path d=\"M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33m7.48-4.372A9.77 9.77 0 0 1 16 6.07m0 11.86a9.77 9.77 0 0 1-1.728-3.618\"></path>",
  _tmpl$1836 = "<path d=\"m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98M8.53 3h5.27a2 2 0 0 1 1.98 1.67l.23 1.4M2 2l20 20\"></path>",
  _tmpl$1837 = "<path d=\"M2 16s9-15 20-4C11 23 2 8 2 8\"></path>",
  _tmpl$1838 = "<path d=\"M6.5 12c.94-3.46 4.94-6 8.5-6 3.56 0 6.06 2.54 7 6-.94 3.47-3.44 6-7 6s-7.56-2.53-8.5-6Z\"></path>",
  _tmpl$1839 = "<path d=\"M18 12v.5\"></path>",
  _tmpl$1840 = "<path d=\"M16 17.93a9.77 9.77 0 0 1 0-11.86\"></path>",
  _tmpl$1841 = "<path d=\"M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33\"></path>",
  _tmpl$1842 = "<path d=\"M10.46 7.26C10.2 5.88 9.17 4.24 8 3h5.8a2 2 0 0 1 1.98 1.67l.23 1.4\"></path>",
  _tmpl$1843 = "<path d=\"m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98\"></path>",
  _tmpl$1844 = "<path d=\"M16 16c-3 0-5-2-8-2a6 6 0 0 0-4 1.528\"></path>",
  _tmpl$1845 = "<path d=\"M4 22V4\"></path>",
  _tmpl$1846 = "<path d=\"M7.656 2H8c3 0 5 2 7.333 2q2 0 3.067-.8A1 1 0 0 1 20 4v10.347\"></path>",
  _tmpl$1847 = "<path d=\"M17 22V2L7 7l10 5\"></path>",
  _tmpl$1848 = "<path d=\"M7 22V2l10 5-10 5\"></path>",
  _tmpl$1849 = "<path d=\"M4 22V4a1 1 0 0 1 .4-.8A6 6 0 0 1 8 2c3 0 5 2 7.333 2q2 0 3.067-.8A1 1 0 0 1 20 4v10a1 1 0 0 1-.4.8A6 6 0 0 1 16 16c-3 0-5-2-8-2a6 6 0 0 0-4 1.528\"></path>",
  _tmpl$1850 = "<path d=\"M12 2c1 3 2.5 3.5 3.5 4.5A5 5 0 0 1 17 10a5 5 0 1 1-10 0c0-.3 0-.6.1-.9a2 2 0 1 0 3.3-2C8 4.5 11 2 12 2Z\"></path>",
  _tmpl$1851 = "<path d=\"m5 22 14-4\"></path>",
  _tmpl$1852 = "<path d=\"m5 18 14 4\"></path>",
  _tmpl$1853 = "<path d=\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\"></path>",
  _tmpl$1854 = "<path d=\"M16 16v4a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4\"></path>",
  _tmpl$1855 = "<path d=\"M7 2h11v4c0 2-2 2-2 4v1\"></path>",
  _tmpl$1856 = "<line x1=\"11\" x2=\"18\" y1=\"6\" y2=\"6\"></line>",
  _tmpl$1857 = "<path d=\"M18 6c0 2-2 2-2 4v10a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4V2h12z\"></path>",
  _tmpl$1858 = "<line x1=\"6\" x2=\"18\" y1=\"6\" y2=\"6\"></line>",
  _tmpl$1859 = "<line x1=\"12\" x2=\"12\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$1860 = "<path d=\"M10 2v2.343\"></path>",
  _tmpl$1861 = "<path d=\"M14 2v6.343\"></path>",
  _tmpl$1862 = "<path d=\"M20 20a2 2 0 0 1-2 2H6a2 2 0 0 1-1.755-2.96l5.227-9.563\"></path>",
  _tmpl$1863 = "<path d=\"M6.453 15H15\"></path>",
  _tmpl$1864 = "<path d=\"M8.5 2h7\"></path>",
  _tmpl$1865 = "<path d=\"M14 2v6a2 2 0 0 0 .245.96l5.51 10.08A2 2 0 0 1 18 22H6a2 2 0 0 1-1.755-2.96l5.51-10.08A2 2 0 0 0 10 8V2\"></path>",
  _tmpl$1866 = "<path d=\"M6.453 15h11.094\"></path>",
  _tmpl$1867 = "<path d=\"M10 2v6.292a7 7 0 1 0 4 0V2\"></path>",
  _tmpl$1868 = "<path d=\"M5 15h14\"></path>",
  _tmpl$1869 = "<path d=\"m3 7 5 5-5 5V7\"></path>",
  _tmpl$1870 = "<path d=\"m21 7-5 5 5 5V7\"></path>",
  _tmpl$1871 = "<path d=\"M12 14v2\"></path>",
  _tmpl$1872 = "<path d=\"M12 8v2\"></path>",
  _tmpl$1873 = "<path d=\"M8 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h3\"></path>",
  _tmpl$1874 = "<path d=\"M16 3h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-3\"></path>",
  _tmpl$1875 = "<path d=\"m17 3-5 5-5-5h10\"></path>",
  _tmpl$1876 = "<path d=\"m17 21-5-5-5 5h10\"></path>",
  _tmpl$1877 = "<path d=\"M4 12H2\"></path>",
  _tmpl$1878 = "<path d=\"M10 12H8\"></path>",
  _tmpl$1879 = "<path d=\"M16 12h-2\"></path>",
  _tmpl$1880 = "<path d=\"M22 12h-2\"></path>",
  _tmpl$1881 = "<path d=\"M21 8V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3\"></path>",
  _tmpl$1882 = "<path d=\"M21 16v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3\"></path>",
  _tmpl$1883 = "<path d=\"M12 5a3 3 0 1 1 3 3m-3-3a3 3 0 1 0-3 3m3-3v1M9 8a3 3 0 1 0 3 3M9 8h1m5 0a3 3 0 1 1-3 3m3-3h-1m-2 3v-1\"></path>",
  _tmpl$1884 = "<path d=\"M12 10v12\"></path>",
  _tmpl$1885 = "<path d=\"M12 22c4.2 0 7-1.667 7-5-4.2 0-7 1.667-7 5Z\"></path>",
  _tmpl$1886 = "<path d=\"M12 22c-4.2 0-7-1.667-7-5 4.2 0 7 1.667 7 5Z\"></path>",
  _tmpl$1887 = "<path d=\"M12 16.5A4.5 4.5 0 1 1 7.5 12 4.5 4.5 0 1 1 12 7.5a4.5 4.5 0 1 1 4.5 4.5 4.5 4.5 0 1 1-4.5 4.5\"></path>",
  _tmpl$1888 = "<path d=\"M12 7.5V9\"></path>",
  _tmpl$1889 = "<path d=\"M7.5 12H9\"></path>",
  _tmpl$1890 = "<path d=\"M16.5 12H15\"></path>",
  _tmpl$1891 = "<path d=\"M12 16.5V15\"></path>",
  _tmpl$1892 = "<path d=\"m8 8 1.88 1.88\"></path>",
  _tmpl$1893 = "<path d=\"M14.12 9.88 16 8\"></path>",
  _tmpl$1894 = "<path d=\"m8 16 1.88-1.88\"></path>",
  _tmpl$1895 = "<path d=\"M14.12 14.12 16 16\"></path>",
  _tmpl$1896 = "<path d=\"M3 7V5a2 2 0 0 1 2-2h2\"></path>",
  _tmpl$1897 = "<path d=\"M17 3h2a2 2 0 0 1 2 2v2\"></path>",
  _tmpl$1898 = "<path d=\"M21 17v2a2 2 0 0 1-2 2h-2\"></path>",
  _tmpl$1899 = "<path d=\"M7 21H5a2 2 0 0 1-2-2v-2\"></path>",
  _tmpl$1900 = "<path d=\"M2 12h6\"></path>",
  _tmpl$1901 = "<path d=\"M22 12h-6\"></path>",
  _tmpl$1902 = "<path d=\"m19 9-3 3 3 3\"></path>",
  _tmpl$1903 = "<path d=\"m5 15 3-3-3-3\"></path>",
  _tmpl$1904 = "<path d=\"M12 22v-6\"></path>",
  _tmpl$1905 = "<path d=\"M12 8V2\"></path>",
  _tmpl$1906 = "<path d=\"m15 19-3-3-3 3\"></path>",
  _tmpl$1907 = "<path d=\"m15 5-3 3-3-3\"></path>",
  _tmpl$1908 = "<circle cx=\"15\" cy=\"19\" r=\"2\"></circle>",
  _tmpl$1909 = "<path d=\"M20.9 19.8A2 2 0 0 0 22 18V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2h5.1\"></path>",
  _tmpl$1910 = "<path d=\"M15 11v-1\"></path>",
  _tmpl$1911 = "<path d=\"M15 17v-2\"></path>",
  _tmpl$1912 = "<path d=\"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z\"></path>",
  _tmpl$1913 = "<path d=\"M7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2\"></path>",
  _tmpl$1914 = "<path d=\"M10 10.5 8 13l2 2.5\"></path>",
  _tmpl$1915 = "<path d=\"m14 10.5 2 2.5-2 2.5\"></path>",
  _tmpl$1916 = "<path d=\"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2z\"></path>",
  _tmpl$1917 = "<path d=\"M10.3 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.98a2 2 0 0 1 1.69.9l.66 1.2A2 2 0 0 0 12 6h8a2 2 0 0 1 2 2v3.3\"></path>",
  _tmpl$1918 = "<path d=\"m14.305 19.53.923-.382\"></path>",
  _tmpl$1919 = "<path d=\"m16.852 15.228-.383-.923\"></path>",
  _tmpl$1920 = "<path d=\"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\"></path>",
  _tmpl$1921 = "<circle cx=\"12\" cy=\"13\" r=\"1\"></circle>",
  _tmpl$1922 = "<path d=\"m15 13-3 3-3-3\"></path>",
  _tmpl$1923 = "<path d=\"M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v5\"></path>",
  _tmpl$1924 = "<circle cx=\"13\" cy=\"12\" r=\"2\"></circle>",
  _tmpl$1925 = "<path d=\"M18 19c-2.8 0-5-2.2-5-5v8\"></path>",
  _tmpl$1926 = "<circle cx=\"20\" cy=\"19\" r=\"2\"></circle>",
  _tmpl$1927 = "<path d=\"M14 13h3\"></path>",
  _tmpl$1928 = "<path d=\"M7 13h3\"></path>",
  _tmpl$1929 = "<path d=\"M11 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v1.5\"></path>",
  _tmpl$1930 = "<path d=\"M13.9 17.45c-1.2-1.2-1.14-2.8-.2-3.73a2.43 2.43 0 0 1 3.44 0l.36.34.34-.34a2.43 2.43 0 0 1 3.45-.01c.95.95 1 2.53-.2 3.74L17.5 21Z\"></path>",
  _tmpl$1931 = "<path d=\"M2 9V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-1\"></path>",
  _tmpl$1932 = "<path d=\"M2 13h10\"></path>",
  _tmpl$1933 = "<path d=\"m9 16 3-3-3-3\"></path>",
  _tmpl$1934 = "<path d=\"M8 10v4\"></path>",
  _tmpl$1935 = "<path d=\"M12 10v2\"></path>",
  _tmpl$1936 = "<path d=\"M16 10v6\"></path>",
  _tmpl$1937 = "<circle cx=\"16\" cy=\"20\" r=\"2\"></circle>",
  _tmpl$1938 = "<path d=\"M10 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v2\"></path>",
  _tmpl$1939 = "<path d=\"m22 14-4.5 4.5\"></path>",
  _tmpl$1940 = "<path d=\"m21 15 1 1\"></path>",
  _tmpl$1941 = "<rect width=\"8\" height=\"5\" x=\"14\" y=\"17\" rx=\"1\"></rect>",
  _tmpl$1942 = "<path d=\"M10 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v2.5\"></path>",
  _tmpl$1943 = "<path d=\"m6 14 1.45-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.55 6a2 2 0 0 1-1.94 1.5H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H18a2 2 0 0 1 2 2v2\"></path>",
  _tmpl$1944 = "<circle cx=\"14\" cy=\"15\" r=\"1\"></circle>",
  _tmpl$1945 = "<path d=\"m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2\"></path>",
  _tmpl$1946 = "<path d=\"M2 7.5V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-1.5\"></path>",
  _tmpl$1947 = "<path d=\"m5 10-3 3 3 3\"></path>",
  _tmpl$1948 = "<path d=\"M2 11.5V5a2 2 0 0 1 2-2h3.9c.7 0 1.3.3 1.7.9l.8 1.2c.4.6 1 .9 1.7.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5\"></path>",
  _tmpl$1949 = "<path d=\"M11.378 13.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z\"></path>",
  _tmpl$1950 = "<path d=\"M12 15v5\"></path>",
  _tmpl$1951 = "<circle cx=\"11.5\" cy=\"12.5\" r=\"2.5\"></circle>",
  _tmpl$1952 = "<path d=\"M13.3 14.3 15 16\"></path>",
  _tmpl$1953 = "<path d=\"M10.7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v4.1\"></path>",
  _tmpl$1954 = "<path d=\"m21 21-1.9-1.9\"></path>",
  _tmpl$1955 = "<circle cx=\"17\" cy=\"17\" r=\"3\"></circle>",
  _tmpl$1956 = "<path d=\"M2 9V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7\"></path>",
  _tmpl$1957 = "<path d=\"m8 16 3-3-3-3\"></path>",
  _tmpl$1958 = "<path d=\"M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v.5\"></path>",
  _tmpl$1959 = "<path d=\"M12 10v4h4\"></path>",
  _tmpl$1960 = "<path d=\"m12 14 1.535-1.605a5 5 0 0 1 8 1.5\"></path>",
  _tmpl$1961 = "<path d=\"M22 22v-4h-4\"></path>",
  _tmpl$1962 = "<path d=\"m22 18-1.535 1.605a5 5 0 0 1-8-1.5\"></path>",
  _tmpl$1963 = "<path d=\"M20 10a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1h-2.5a1 1 0 0 1-.8-.4l-.9-1.2A1 1 0 0 0 15 3h-2a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z\"></path>",
  _tmpl$1964 = "<path d=\"M20 21a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-2.9a1 1 0 0 1-.88-.55l-.42-.85a1 1 0 0 0-.92-.6H13a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z\"></path>",
  _tmpl$1965 = "<path d=\"M3 5a2 2 0 0 0 2 2h3\"></path>",
  _tmpl$1966 = "<path d=\"M3 3v13a2 2 0 0 0 2 2h3\"></path>",
  _tmpl$1967 = "<path d=\"m9 13 3-3 3 3\"></path>",
  _tmpl$1968 = "<path d=\"m9.5 10.5 5 5\"></path>",
  _tmpl$1969 = "<path d=\"m14.5 10.5-5 5\"></path>",
  _tmpl$1970 = "<path d=\"M20 17a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3.9a2 2 0 0 1-1.69-.9l-.81-1.2a2 2 0 0 0-1.67-.9H8a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2Z\"></path>",
  _tmpl$1971 = "<path d=\"M2 8v11a2 2 0 0 0 2 2h14\"></path>",
  _tmpl$1972 = "<path d=\"M4 16v-2.38C4 11.5 2.97 10.5 3 8c.03-2.72 1.49-6 4.5-6C9.37 2 10 3.8 10 5.5c0 3.11-2 5.66-2 8.68V16a2 2 0 1 1-4 0Z\"></path>",
  _tmpl$1973 = "<path d=\"M20 20v-2.38c0-2.12 1.03-3.12 1-5.62-.03-2.72-1.49-6-4.5-6C14.63 6 14 7.8 14 9.5c0 3.11 2 5.66 2 8.68V20a2 2 0 1 0 4 0Z\"></path>",
  _tmpl$1974 = "<path d=\"M16 17h4\"></path>",
  _tmpl$1975 = "<path d=\"M4 13h4\"></path>",
  _tmpl$1976 = "<path d=\"M12 12H5a2 2 0 0 0-2 2v5\"></path>",
  _tmpl$1977 = "<circle cx=\"13\" cy=\"19\" r=\"2\"></circle>",
  _tmpl$1978 = "<circle cx=\"5\" cy=\"19\" r=\"2\"></circle>",
  _tmpl$1979 = "<path d=\"M8 19h3m5-17v17h6M6 12V7c0-1.1.9-2 2-2h3l5 5\"></path>",
  _tmpl$1980 = "<path d=\"m15 17 5-5-5-5\"></path>",
  _tmpl$1981 = "<path d=\"M4 18v-2a4 4 0 0 1 4-4h12\"></path>",
  _tmpl$1982 = "<line x1=\"22\" x2=\"2\" y1=\"6\" y2=\"6\"></line>",
  _tmpl$1983 = "<line x1=\"22\" x2=\"2\" y1=\"18\" y2=\"18\"></line>",
  _tmpl$1984 = "<line x1=\"6\" x2=\"6\" y1=\"2\" y2=\"22\"></line>",
  _tmpl$1985 = "<line x1=\"18\" x2=\"18\" y1=\"2\" y2=\"22\"></line>",
  _tmpl$1986 = "<path d=\"M5 16V9h14V2H5l14 14h-7m-7 0 7 7v-7m-7 0h7\"></path>",
  _tmpl$1987 = "<line x1=\"9\" x2=\"9.01\" y1=\"9\" y2=\"9\"></line>",
  _tmpl$1988 = "<line x1=\"15\" x2=\"15.01\" y1=\"9\" y2=\"9\"></line>",
  _tmpl$1989 = "<line x1=\"3\" x2=\"15\" y1=\"22\" y2=\"22\"></line>",
  _tmpl$1990 = "<line x1=\"4\" x2=\"14\" y1=\"9\" y2=\"9\"></line>",
  _tmpl$1991 = "<path d=\"M14 22V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v18\"></path>",
  _tmpl$1992 = "<path d=\"M14 13h2a2 2 0 0 1 2 2v2a2 2 0 0 0 2 2a2 2 0 0 0 2-2V9.83a2 2 0 0 0-.59-1.42L18 5\"></path>",
  _tmpl$1993 = "<rect width=\"10\" height=\"8\" x=\"7\" y=\"8\" rx=\"1\"></rect>",
  _tmpl$1994 = "<path d=\"M13.354 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14v6a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341l1.218-1.348\"></path>",
  _tmpl$1995 = "<path d=\"M16 6h6\"></path>",
  _tmpl$1996 = "<path d=\"M19 3v6\"></path>",
  _tmpl$1997 = "<path d=\"M12.531 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14v6a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341l.427-.473\"></path>",
  _tmpl$1998 = "<path d=\"m16.5 3.5 5 5\"></path>",
  _tmpl$1999 = "<path d=\"m21.5 3.5-5 5\"></path>",
  _tmpl$2000 = "<path d=\"M10 20a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341L21.74 4.67A1 1 0 0 0 21 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14z\"></path>",
  _tmpl$2001 = "<path d=\"M2 7v10\"></path>",
  _tmpl$2002 = "<path d=\"M6 5v14\"></path>",
  _tmpl$2003 = "<rect width=\"12\" height=\"18\" x=\"10\" y=\"3\" rx=\"2\"></rect>",
  _tmpl$2004 = "<path d=\"M2 3v18\"></path>",
  _tmpl$2005 = "<rect width=\"12\" height=\"18\" x=\"6\" y=\"3\" rx=\"2\"></rect>",
  _tmpl$2006 = "<path d=\"M22 3v18\"></path>",
  _tmpl$2007 = "<rect width=\"18\" height=\"14\" x=\"3\" y=\"3\" rx=\"2\"></rect>",
  _tmpl$2008 = "<path d=\"M4 21h1\"></path>",
  _tmpl$2009 = "<path d=\"M9 21h1\"></path>",
  _tmpl$2010 = "<path d=\"M14 21h1\"></path>",
  _tmpl$2011 = "<path d=\"M19 21h1\"></path>",
  _tmpl$2012 = "<path d=\"M7 2h10\"></path>",
  _tmpl$2013 = "<path d=\"M5 6h14\"></path>",
  _tmpl$2014 = "<rect width=\"18\" height=\"12\" x=\"3\" y=\"10\" rx=\"2\"></rect>",
  _tmpl$2015 = "<path d=\"M3 2h18\"></path>",
  _tmpl$2016 = "<rect width=\"18\" height=\"12\" x=\"3\" y=\"6\" rx=\"2\"></rect>",
  _tmpl$2017 = "<path d=\"M3 22h18\"></path>",
  _tmpl$2018 = "<line x1=\"6\" x2=\"10\" y1=\"11\" y2=\"11\"></line>",
  _tmpl$2019 = "<line x1=\"8\" x2=\"8\" y1=\"9\" y2=\"13\"></line>",
  _tmpl$2020 = "<line x1=\"15\" x2=\"15.01\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$2021 = "<line x1=\"18\" x2=\"18.01\" y1=\"10\" y2=\"10\"></line>",
  _tmpl$2022 = "<path d=\"M17.32 5H6.68a4 4 0 0 0-3.978 3.59c-.006.052-.01.101-.017.152C2.604 9.416 2 14.456 2 16a3 3 0 0 0 3 3c1 0 1.5-.5 2-1l1.414-1.414A2 2 0 0 1 9.828 16h4.344a2 2 0 0 1 1.414.586L17 18c.5.5 1 1 2 1a3 3 0 0 0 3-3c0-1.545-.604-6.584-.685-7.258-.007-.05-.011-.1-.017-.151A4 4 0 0 0 17.32 5z\"></path>",
  _tmpl$2023 = "<line x1=\"6\" x2=\"10\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$2024 = "<line x1=\"8\" x2=\"8\" y1=\"10\" y2=\"14\"></line>",
  _tmpl$2025 = "<line x1=\"15\" x2=\"15.01\" y1=\"13\" y2=\"13\"></line>",
  _tmpl$2026 = "<line x1=\"18\" x2=\"18.01\" y1=\"11\" y2=\"11\"></line>",
  _tmpl$2027 = "<path d=\"m12 14 4-4\"></path>",
  _tmpl$2028 = "<path d=\"M3.34 19a10 10 0 1 1 17.32 0\"></path>",
  _tmpl$2029 = "<path d=\"m14.5 12.5-8 8a2.119 2.119 0 1 1-3-3l8-8\"></path>",
  _tmpl$2030 = "<path d=\"m16 16 6-6\"></path>",
  _tmpl$2031 = "<path d=\"m8 8 6-6\"></path>",
  _tmpl$2032 = "<path d=\"m9 7 8 8\"></path>",
  _tmpl$2033 = "<path d=\"m21 11-8-8\"></path>",
  _tmpl$2034 = "<path d=\"M6 3h12l4 6-10 13L2 9Z\"></path>",
  _tmpl$2035 = "<path d=\"M11 3 8 9l4 13 4-13-3-6\"></path>",
  _tmpl$2036 = "<path d=\"M2 9h20\"></path>",
  _tmpl$2037 = "<path d=\"M11.5 21a7.5 7.5 0 1 1 7.35-9\"></path>",
  _tmpl$2038 = "<path d=\"M13 12V3\"></path>",
  _tmpl$2039 = "<path d=\"M9 12V3\"></path>",
  _tmpl$2040 = "<path d=\"M12 2a8 8 0 0 0-8 8v12l3-3 2.5 2.5L12 19l2.5 2.5L17 19l3 3V10a8 8 0 0 0-8-8z\"></path>",
  _tmpl$2041 = "<rect x=\"3\" y=\"8\" width=\"18\" height=\"4\" rx=\"1\"></rect>",
  _tmpl$2042 = "<path d=\"M12 8v13\"></path>",
  _tmpl$2043 = "<path d=\"M19 12v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-7\"></path>",
  _tmpl$2044 = "<path d=\"M7.5 8a2.5 2.5 0 0 1 0-5A4.8 8 0 0 1 12 8a4.8 8 0 0 1 4.5-5 2.5 2.5 0 0 1 0 5\"></path>",
  _tmpl$2045 = "<path d=\"M6 3v12\"></path>",
  _tmpl$2046 = "<path d=\"M18 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"></path>",
  _tmpl$2047 = "<path d=\"M6 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"></path>",
  _tmpl$2048 = "<path d=\"M15 6a9 9 0 0 0-9 9\"></path>",
  _tmpl$2049 = "<path d=\"M18 15v6\"></path>",
  _tmpl$2050 = "<path d=\"M21 18h-6\"></path>",
  _tmpl$2051 = "<line x1=\"6\" x2=\"6\" y1=\"3\" y2=\"15\"></line>",
  _tmpl$2052 = "<circle cx=\"18\" cy=\"6\" r=\"3\"></circle>",
  _tmpl$2053 = "<circle cx=\"6\" cy=\"18\" r=\"3\"></circle>",
  _tmpl$2054 = "<path d=\"M18 9a9 9 0 0 1-9 9\"></path>",
  _tmpl$2055 = "<line x1=\"3\" x2=\"9\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$2056 = "<line x1=\"15\" x2=\"21\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$2057 = "<path d=\"M12 3v6\"></path>",
  _tmpl$2058 = "<path d=\"M12 15v6\"></path>",
  _tmpl$2059 = "<circle cx=\"5\" cy=\"6\" r=\"3\"></circle>",
  _tmpl$2060 = "<path d=\"M12 6h5a2 2 0 0 1 2 2v7\"></path>",
  _tmpl$2061 = "<path d=\"m15 9-3-3 3-3\"></path>",
  _tmpl$2062 = "<circle cx=\"19\" cy=\"18\" r=\"3\"></circle>",
  _tmpl$2063 = "<path d=\"M12 18H7a2 2 0 0 1-2-2V9\"></path>",
  _tmpl$2064 = "<path d=\"m9 15 3 3-3 3\"></path>",
  _tmpl$2065 = "<circle cx=\"6\" cy=\"6\" r=\"3\"></circle>",
  _tmpl$2066 = "<path d=\"M13 6h3a2 2 0 0 1 2 2v7\"></path>",
  _tmpl$2067 = "<path d=\"M11 18H8a2 2 0 0 1-2-2V9\"></path>",
  _tmpl$2068 = "<circle cx=\"12\" cy=\"18\" r=\"3\"></circle>",
  _tmpl$2069 = "<path d=\"M18 9v2c0 .6-.4 1-1 1H7c-.6 0-1-.4-1-1V9\"></path>",
  _tmpl$2070 = "<path d=\"M12 12v3\"></path>",
  _tmpl$2071 = "<circle cx=\"5\" cy=\"18\" r=\"3\"></circle>",
  _tmpl$2072 = "<circle cx=\"19\" cy=\"6\" r=\"3\"></circle>",
  _tmpl$2073 = "<path d=\"M16 15.7A9 9 0 0 0 19 9\"></path>",
  _tmpl$2074 = "<path d=\"M6 21V9a9 9 0 0 0 9 9\"></path>",
  _tmpl$2075 = "<path d=\"M5 9v12\"></path>",
  _tmpl$2076 = "<path d=\"M6 9v12\"></path>",
  _tmpl$2077 = "<path d=\"m21 3-6 6\"></path>",
  _tmpl$2078 = "<path d=\"m21 9-6-6\"></path>",
  _tmpl$2079 = "<path d=\"M18 11.5V15\"></path>",
  _tmpl$2080 = "<path d=\"M12 6h5a2 2 0 0 1 2 2v3\"></path>",
  _tmpl$2081 = "<path d=\"M19 15v6\"></path>",
  _tmpl$2082 = "<path d=\"M22 18h-6\"></path>",
  _tmpl$2083 = "<path d=\"M13 6h3a2 2 0 0 1 2 2v3\"></path>",
  _tmpl$2084 = "<path d=\"M18 6V5\"></path>",
  _tmpl$2085 = "<path d=\"M18 11v-1\"></path>",
  _tmpl$2086 = "<line x1=\"6\" x2=\"6\" y1=\"9\" y2=\"21\"></line>",
  _tmpl$2087 = "<path d=\"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4\"></path>",
  _tmpl$2088 = "<path d=\"M9 18c-4.51 2-5-2-7-2\"></path>",
  _tmpl$2089 = "<path d=\"m22 13.29-3.33-10a.42.42 0 0 0-.14-.18.38.38 0 0 0-.22-.11.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18l-2.26 6.67H8.32L6.1 3.26a.42.42 0 0 0-.1-.18.38.38 0 0 0-.26-.08.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18L2 13.29a.74.74 0 0 0 .27.83L12 21l9.69-6.88a.71.71 0 0 0 .31-.83Z\"></path>",
  _tmpl$2090 = "<path d=\"M5.116 4.104A1 1 0 0 1 6.11 3h11.78a1 1 0 0 1 .994 1.105L17.19 20.21A2 2 0 0 1 15.2 22H8.8a2 2 0 0 1-2-1.79z\"></path>",
  _tmpl$2091 = "<path d=\"M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0\"></path>",
  _tmpl$2092 = "<circle cx=\"6\" cy=\"15\" r=\"4\"></circle>",
  _tmpl$2093 = "<circle cx=\"18\" cy=\"15\" r=\"4\"></circle>",
  _tmpl$2094 = "<path d=\"M14 15a2 2 0 0 0-2-2 2 2 0 0 0-2 2\"></path>",
  _tmpl$2095 = "<path d=\"M2.5 13 5 7c.7-1.3 1.4-2 3-2\"></path>",
  _tmpl$2096 = "<path d=\"M21.5 13 19 7c-.7-1.3-1.5-2-3-2\"></path>",
  _tmpl$2097 = "<path d=\"M15.686 15A14.5 14.5 0 0 1 12 22a14.5 14.5 0 0 1 0-20 10 10 0 1 0 9.542 13\"></path>",
  _tmpl$2098 = "<path d=\"M2 12h8.5\"></path>",
  _tmpl$2099 = "<path d=\"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20\"></path>",
  _tmpl$2100 = "<path d=\"M12 13V2l8 4-8 4\"></path>",
  _tmpl$2101 = "<path d=\"M20.561 10.222a9 9 0 1 1-12.55-5.29\"></path>",
  _tmpl$2102 = "<path d=\"M8.002 9.997a5 5 0 1 0 8.9 2.02\"></path>",
  _tmpl$2103 = "<path d=\"M2 21V3\"></path>",
  _tmpl$2104 = "<path d=\"M2 5h18a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2.26\"></path>",
  _tmpl$2105 = "<path d=\"M7 17v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1v-3\"></path>",
  _tmpl$2106 = "<circle cx=\"16\" cy=\"11\" r=\"2\"></circle>",
  _tmpl$2107 = "<circle cx=\"8\" cy=\"11\" r=\"2\"></circle>",
  _tmpl$2108 = "<path d=\"M18 11.5V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1.4\"></path>",
  _tmpl$2109 = "<path d=\"M14 10V8a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2\"></path>",
  _tmpl$2110 = "<path d=\"M10 9.9V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v5\"></path>",
  _tmpl$2111 = "<path d=\"M6 14a2 2 0 0 0-2-2a2 2 0 0 0-2 2\"></path>",
  _tmpl$2112 = "<path d=\"M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-4a8 8 0 0 1-8-8 2 2 0 1 1 4 0\"></path>",
  _tmpl$2113 = "<path d=\"M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z\"></path>",
  _tmpl$2114 = "<path d=\"M22 10v6\"></path>",
  _tmpl$2115 = "<path d=\"M6 12.5V16a6 3 0 0 0 12 0v-3.5\"></path>",
  _tmpl$2116 = "<path d=\"M22 5V2l-5.89 5.89\"></path>",
  _tmpl$2117 = "<circle cx=\"16.6\" cy=\"15.89\" r=\"3\"></circle>",
  _tmpl$2118 = "<circle cx=\"8.11\" cy=\"7.4\" r=\"3\"></circle>",
  _tmpl$2119 = "<circle cx=\"12.35\" cy=\"11.65\" r=\"3\"></circle>",
  _tmpl$2120 = "<circle cx=\"13.91\" cy=\"5.85\" r=\"3\"></circle>",
  _tmpl$2121 = "<circle cx=\"18.15\" cy=\"10.09\" r=\"3\"></circle>",
  _tmpl$2122 = "<circle cx=\"6.56\" cy=\"13.2\" r=\"3\"></circle>",
  _tmpl$2123 = "<circle cx=\"10.8\" cy=\"17.44\" r=\"3\"></circle>",
  _tmpl$2124 = "<circle cx=\"5\" cy=\"19\" r=\"3\"></circle>",
  _tmpl$2125 = "<path d=\"M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3\"></path>",
  _tmpl$2126 = "<path d=\"m16 19 2 2 4-4\"></path>",
  _tmpl$2127 = "<path d=\"m16 16 5 5\"></path>",
  _tmpl$2128 = "<path d=\"m16 21 5-5\"></path>",
  _tmpl$2129 = "<rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\"></rect>",
  _tmpl$2130 = "<circle cx=\"12\" cy=\"9\" r=\"1\"></circle>",
  _tmpl$2131 = "<circle cx=\"19\" cy=\"9\" r=\"1\"></circle>",
  _tmpl$2132 = "<circle cx=\"5\" cy=\"9\" r=\"1\"></circle>",
  _tmpl$2133 = "<circle cx=\"12\" cy=\"15\" r=\"1\"></circle>",
  _tmpl$2134 = "<circle cx=\"19\" cy=\"15\" r=\"1\"></circle>",
  _tmpl$2135 = "<circle cx=\"5\" cy=\"15\" r=\"1\"></circle>",
  _tmpl$2136 = "<circle cx=\"9\" cy=\"5\" r=\"1\"></circle>",
  _tmpl$2137 = "<circle cx=\"9\" cy=\"19\" r=\"1\"></circle>",
  _tmpl$2138 = "<circle cx=\"15\" cy=\"19\" r=\"1\"></circle>",
  _tmpl$2139 = "<circle cx=\"19\" cy=\"5\" r=\"1\"></circle>",
  _tmpl$2140 = "<circle cx=\"5\" cy=\"5\" r=\"1\"></circle>",
  _tmpl$2141 = "<circle cx=\"19\" cy=\"19\" r=\"1\"></circle>",
  _tmpl$2142 = "<circle cx=\"5\" cy=\"19\" r=\"1\"></circle>",
  _tmpl$2143 = "<path d=\"M3 7V5c0-1.1.9-2 2-2h2\"></path>",
  _tmpl$2144 = "<path d=\"M17 3h2c1.1 0 2 .9 2 2v2\"></path>",
  _tmpl$2145 = "<path d=\"M21 17v2c0 1.1-.9 2-2 2h-2\"></path>",
  _tmpl$2146 = "<path d=\"M7 21H5c-1.1 0-2-.9-2-2v-2\"></path>",
  _tmpl$2147 = "<rect width=\"7\" height=\"5\" x=\"7\" y=\"7\" rx=\"1\"></rect>",
  _tmpl$2148 = "<rect width=\"7\" height=\"5\" x=\"10\" y=\"12\" rx=\"1\"></rect>",
  _tmpl$2149 = "<path d=\"m11.9 12.1 4.514-4.514\"></path>",
  _tmpl$2150 = "<path d=\"M20.1 2.3a1 1 0 0 0-1.4 0l-1.114 1.114A2 2 0 0 0 17 4.828v1.344a2 2 0 0 1-.586 1.414A2 2 0 0 1 17.828 7h1.344a2 2 0 0 0 1.414-.586L21.7 5.3a1 1 0 0 0 0-1.4z\"></path>",
  _tmpl$2151 = "<path d=\"m6 16 2 2\"></path>",
  _tmpl$2152 = "<path d=\"M8.23 9.85A3 3 0 0 1 11 8a5 5 0 0 1 5 5 3 3 0 0 1-1.85 2.77l-.92.38A2 2 0 0 0 12 18a4 4 0 0 1-4 4 6 6 0 0 1-6-6 4 4 0 0 1 4-4 2 2 0 0 0 1.85-1.23z\"></path>",
  _tmpl$2153 = "<path d=\"M13.144 21.144A7.274 10.445 45 1 0 2.856 10.856\"></path>",
  _tmpl$2154 = "<path d=\"M13.144 21.144A7.274 4.365 45 0 0 2.856 10.856a7.274 4.365 45 0 0 10.288 10.288\"></path>",
  _tmpl$2155 = "<path d=\"M16.565 10.435 18.6 8.4a2.501 2.501 0 1 0 1.65-4.65 2.5 2.5 0 1 0-4.66 1.66l-2.024 2.025\"></path>",
  _tmpl$2156 = "<path d=\"m8.5 16.5-1-1\"></path>",
  _tmpl$2157 = "<path d=\"M12 16H4a2 2 0 1 1 0-4h16a2 2 0 1 1 0 4h-4.25\"></path>",
  _tmpl$2158 = "<path d=\"M5 12a2 2 0 0 1-2-2 9 7 0 0 1 18 0 2 2 0 0 1-2 2\"></path>",
  _tmpl$2159 = "<path d=\"M5 16a2 2 0 0 0-2 2 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 2 2 0 0 0-2-2q0 0 0 0\"></path>",
  _tmpl$2160 = "<path d=\"m6.67 12 6.13 4.6a2 2 0 0 0 2.8-.4l3.15-4.2\"></path>",
  _tmpl$2161 = "<path d=\"m15 12-8.373 8.373a1 1 0 1 1-3-3L12 9\"></path>",
  _tmpl$2162 = "<path d=\"m18 15 4-4\"></path>",
  _tmpl$2163 = "<path d=\"m21.5 11.5-1.914-1.914A2 2 0 0 1 19 8.172V7l-2.26-2.26a6 6 0 0 0-4.202-1.756L9 2.96l.92.82A6.18 6.18 0 0 1 12 8.4V10l2 2h1.172a2 2 0 0 1 1.414.586L18.5 14.5\"></path>",
  _tmpl$2164 = "<path d=\"M11 15h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 17\"></path>",
  _tmpl$2165 = "<path d=\"m7 21 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9\"></path>",
  _tmpl$2166 = "<path d=\"m2 16 6 6\"></path>",
  _tmpl$2167 = "<circle cx=\"16\" cy=\"9\" r=\"2.9\"></circle>",
  _tmpl$2168 = "<circle cx=\"6\" cy=\"5\" r=\"3\"></circle>",
  _tmpl$2169 = "<path d=\"M11 14h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 16\"></path>",
  _tmpl$2170 = "<path d=\"m7 20 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9\"></path>",
  _tmpl$2171 = "<path d=\"m2 15 6 6\"></path>",
  _tmpl$2172 = "<path d=\"M19.5 8.5c.7-.7 1.5-1.6 1.5-2.7A2.73 2.73 0 0 0 16 4a2.78 2.78 0 0 0-5 1.8c0 1.2.8 2 1.5 2.8L16 12Z\"></path>",
  _tmpl$2173 = "<path d=\"M11 12h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 14\"></path>",
  _tmpl$2174 = "<path d=\"m7 18 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9\"></path>",
  _tmpl$2175 = "<path d=\"m2 13 6 6\"></path>",
  _tmpl$2176 = "<path d=\"M18 12.5V10a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1.4\"></path>",
  _tmpl$2177 = "<path d=\"M14 11V9a2 2 0 1 0-4 0v2\"></path>",
  _tmpl$2178 = "<path d=\"M10 10.5V5a2 2 0 1 0-4 0v9\"></path>",
  _tmpl$2179 = "<path d=\"m7 15-1.76-1.76a2 2 0 0 0-2.83 2.82l3.6 3.6C7.5 21.14 9.2 22 12 22h2a8 8 0 0 0 8-8V7a2 2 0 1 0-4 0v5\"></path>",
  _tmpl$2180 = "<path d=\"M12 3V2\"></path>",
  _tmpl$2181 = "<path d=\"m15.4 17.4 3.2-2.8a2 2 0 1 1 2.8 2.9l-3.6 3.3c-.7.8-1.7 1.2-2.8 1.2h-4c-1.1 0-2.1-.4-2.8-1.2l-1.302-1.464A1 1 0 0 0 6.151 19H5\"></path>",
  _tmpl$2182 = "<path d=\"M2 14h12a2 2 0 0 1 0 4h-2\"></path>",
  _tmpl$2183 = "<path d=\"M4 10h16\"></path>",
  _tmpl$2184 = "<path d=\"M5 10a7 7 0 0 1 14 0\"></path>",
  _tmpl$2185 = "<path d=\"M5 14v6a1 1 0 0 1-1 1H2\"></path>",
  _tmpl$2186 = "<path d=\"M18 11V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2\"></path>",
  _tmpl$2187 = "<path d=\"M14 10V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2\"></path>",
  _tmpl$2188 = "<path d=\"M10 10.5V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2v8\"></path>",
  _tmpl$2189 = "<path d=\"M18 8a2 2 0 1 1 4 0v6a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15\"></path>",
  _tmpl$2190 = "<path d=\"m11 17 2 2a1 1 0 1 0 3-3\"></path>",
  _tmpl$2191 = "<path d=\"m14 14 2.5 2.5a1 1 0 1 0 3-3l-3.88-3.88a3 3 0 0 0-4.24 0l-.88.88a1 1 0 1 1-3-3l2.81-2.81a5.79 5.79 0 0 1 7.06-.87l.47.28a2 2 0 0 0 1.42.25L21 4\"></path>",
  _tmpl$2192 = "<path d=\"m21 3 1 11h-2\"></path>",
  _tmpl$2193 = "<path d=\"M3 3 2 14l6.5 6.5a1 1 0 1 0 3-3\"></path>",
  _tmpl$2194 = "<path d=\"M3 4h8\"></path>",
  _tmpl$2195 = "<path d=\"M12 2v8\"></path>",
  _tmpl$2196 = "<path d=\"m16 6-4 4-4-4\"></path>",
  _tmpl$2197 = "<path d=\"M10 18h.01\"></path>",
  _tmpl$2198 = "<path d=\"m16 6-4-4-4 4\"></path>",
  _tmpl$2199 = "<line x1=\"22\" x2=\"2\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$2200 = "<path d=\"M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"></path>",
  _tmpl$2201 = "<line x1=\"6\" x2=\"6.01\" y1=\"16\" y2=\"16\"></line>",
  _tmpl$2202 = "<line x1=\"10\" x2=\"10.01\" y1=\"16\" y2=\"16\"></line>",
  _tmpl$2203 = "<path d=\"M10 10V5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v5\"></path>",
  _tmpl$2204 = "<path d=\"M14 6a6 6 0 0 1 6 6v3\"></path>",
  _tmpl$2205 = "<path d=\"M4 15v-3a6 6 0 0 1 6-6\"></path>",
  _tmpl$2206 = "<rect x=\"2\" y=\"15\" width=\"20\" height=\"4\" rx=\"1\"></rect>",
  _tmpl$2207 = "<line x1=\"4\" x2=\"20\" y1=\"9\" y2=\"9\"></line>",
  _tmpl$2208 = "<line x1=\"4\" x2=\"20\" y1=\"15\" y2=\"15\"></line>",
  _tmpl$2209 = "<line x1=\"10\" x2=\"8\" y1=\"3\" y2=\"21\"></line>",
  _tmpl$2210 = "<line x1=\"16\" x2=\"14\" y1=\"3\" y2=\"21\"></line>",
  _tmpl$2211 = "<path d=\"m5.2 6.2 1.4 1.4\"></path>",
  _tmpl$2212 = "<path d=\"M2 13h2\"></path>",
  _tmpl$2213 = "<path d=\"M20 13h2\"></path>",
  _tmpl$2214 = "<path d=\"m17.4 7.6 1.4-1.4\"></path>",
  _tmpl$2215 = "<path d=\"M22 17H2\"></path>",
  _tmpl$2216 = "<path d=\"M22 21H2\"></path>",
  _tmpl$2217 = "<path d=\"M16 13a4 4 0 0 0-8 0\"></path>",
  _tmpl$2218 = "<path d=\"M12 5V2.5\"></path>",
  _tmpl$2219 = "<path d=\"M22 9a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h1l2 2h12l2-2h1a1 1 0 0 0 1-1Z\"></path>",
  _tmpl$2220 = "<path d=\"M7.5 12h9\"></path>",
  _tmpl$2221 = "<path d=\"M4 12h8\"></path>",
  _tmpl$2222 = "<path d=\"M4 18V6\"></path>",
  _tmpl$2223 = "<path d=\"m17 12 3-2v8\"></path>",
  _tmpl$2224 = "<path d=\"M21 18h-4c0-4 4-3 4-6 0-1.5-2-2.5-4-1\"></path>",
  _tmpl$2225 = "<path d=\"M17.5 10.5c1.7-1 3.5 0 3.5 1.5a2 2 0 0 1-2 2\"></path>",
  _tmpl$2226 = "<path d=\"M17 17.5c2 1.5 4 .3 4-1.5a2 2 0 0 0-2-2\"></path>",
  _tmpl$2227 = "<path d=\"M17 10v3a1 1 0 0 0 1 1h3\"></path>",
  _tmpl$2228 = "<path d=\"M21 10v8\"></path>",
  _tmpl$2229 = "<path d=\"M17 13v-3h4\"></path>",
  _tmpl$2230 = "<path d=\"M17 17.7c.4.2.8.3 1.3.3 1.5 0 2.7-1.1 2.7-2.5S19.8 13 18.3 13H17\"></path>",
  _tmpl$2231 = "<circle cx=\"19\" cy=\"16\" r=\"2\"></circle>",
  _tmpl$2232 = "<path d=\"M20 10c-2 2-3 3.5-3 6\"></path>",
  _tmpl$2233 = "<path d=\"M6 12h12\"></path>",
  _tmpl$2234 = "<path d=\"M18 20V4\"></path>",
  _tmpl$2235 = "<path d=\"M21 14h-1.343\"></path>",
  _tmpl$2236 = "<path d=\"M9.128 3.47A9 9 0 0 1 21 12v3.343\"></path>",
  _tmpl$2237 = "<path d=\"M20.414 20.414A2 2 0 0 1 19 21h-1a2 2 0 0 1-2-2v-3\"></path>",
  _tmpl$2238 = "<path d=\"M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 2.636-6.364\"></path>",
  _tmpl$2239 = "<path d=\"M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 18 0v7a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3\"></path>",
  _tmpl$2240 = "<path d=\"M3 11h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-5Zm0 0a9 9 0 1 1 18 0m0 0v5a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3Z\"></path>",
  _tmpl$2241 = "<path d=\"M21 16v2a4 4 0 0 1-4 4h-5\"></path>",
  _tmpl$2242 = "<path d=\"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\"></path>",
  _tmpl$2243 = "<path d=\"m12 13-1-1 2-2-3-3 2-2\"></path>",
  _tmpl$2244 = "<path d=\"M12 5 9.04 7.96a2.17 2.17 0 0 0 0 3.08c.82.82 2.13.85 3 .07l2.07-1.9a2.82 2.82 0 0 1 3.79 0l2.96 2.66\"></path>",
  _tmpl$2245 = "<path d=\"m18 15-2-2\"></path>",
  _tmpl$2246 = "<path d=\"m15 18-2-2\"></path>",
  _tmpl$2247 = "<path d=\"M13.5 19.5 12 21l-7-7c-1.5-1.45-3-3.2-3-5.5A5.5 5.5 0 0 1 7.5 3c1.76 0 3 .5 4.5 2 1.5-1.5 2.74-2 4.5-2a5.5 5.5 0 0 1 5.402 6.5\"></path>",
  _tmpl$2248 = "<path d=\"M15 15h6\"></path>",
  _tmpl$2249 = "<line x1=\"2\" y1=\"2\" x2=\"22\" y2=\"22\"></line>",
  _tmpl$2250 = "<path d=\"M16.5 16.5 12 21l-7-7c-1.5-1.45-3-3.2-3-5.5a5.5 5.5 0 0 1 2.14-4.35\"></path>",
  _tmpl$2251 = "<path d=\"M8.76 3.1c1.15.22 2.13.78 3.24 1.9 1.5-1.5 2.74-2 4.5-2A5.5 5.5 0 0 1 22 8.5c0 2.12-1.3 3.78-2.67 5.17\"></path>",
  _tmpl$2252 = "<path d=\"M18 12v6\"></path>",
  _tmpl$2253 = "<path d=\"M3.22 12H9.5l.5-1 2 4.5 2-7 1.5 3.5h5.27\"></path>",
  _tmpl$2254 = "<path d=\"M11 8c2-3-2-3 0-6\"></path>",
  _tmpl$2255 = "<path d=\"M15.5 8c2-3-2-3 0-6\"></path>",
  _tmpl$2256 = "<path d=\"M6 10h.01\"></path>",
  _tmpl$2257 = "<path d=\"M6 14h.01\"></path>",
  _tmpl$2258 = "<path d=\"M10 16v-4\"></path>",
  _tmpl$2259 = "<path d=\"M14 16v-4\"></path>",
  _tmpl$2260 = "<path d=\"M18 16v-4\"></path>",
  _tmpl$2261 = "<path d=\"M20 6a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3\"></path>",
  _tmpl$2262 = "<path d=\"M5 20v2\"></path>",
  _tmpl$2263 = "<path d=\"M19 20v2\"></path>",
  _tmpl$2264 = "<path d=\"m9 11-6 6v3h9l3-3\"></path>",
  _tmpl$2265 = "<path d=\"m22 12-4.6 4.6a2 2 0 0 1-2.8 0l-5.2-5.2a2 2 0 0 1 0-2.8L14 4\"></path>",
  _tmpl$2266 = "<path d=\"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\"></path>",
  _tmpl$2267 = "<path d=\"M3 3v5h5\"></path>",
  _tmpl$2268 = "<path d=\"M12 7v5l4 2\"></path>",
  _tmpl$2269 = "<path d=\"M10.82 16.12c1.69.6 3.91.79 5.18.85.28.01.53-.09.7-.27\"></path>",
  _tmpl$2270 = "<path d=\"M11.14 20.57c.52.24 2.44 1.12 4.08 1.37.46.06.86-.25.9-.71.12-1.52-.3-3.43-.5-4.28\"></path>",
  _tmpl$2271 = "<path d=\"M16.13 21.05c1.65.63 3.68.84 4.87.91a.9.9 0 0 0 .7-.26\"></path>",
  _tmpl$2272 = "<path d=\"M17.99 5.52a20.83 20.83 0 0 1 3.15 4.5.8.8 0 0 1-.68 1.13c-1.17.1-2.5.02-3.9-.25\"></path>",
  _tmpl$2273 = "<path d=\"M20.57 11.14c.24.52 1.12 2.44 1.37 4.08.04.3-.08.59-.31.75\"></path>",
  _tmpl$2274 = "<path d=\"M4.93 4.93a10 10 0 0 0-.67 13.4c.35.43.96.4 1.17-.12.69-1.71 1.07-5.07 1.07-6.71 1.34.45 3.1.9 4.88.62a.85.85 0 0 0 .48-.24\"></path>",
  _tmpl$2275 = "<path d=\"M5.52 17.99c1.05.95 2.91 2.42 4.5 3.15a.8.8 0 0 0 1.13-.68c.2-2.34-.33-5.3-1.57-8.28\"></path>",
  _tmpl$2276 = "<path d=\"M8.35 2.68a10 10 0 0 1 9.98 1.58c.43.35.4.96-.12 1.17-1.5.6-4.3.98-6.07 1.05\"></path>",
  _tmpl$2277 = "<path d=\"M10.82 16.12c1.69.6 3.91.79 5.18.85.55.03 1-.42.97-.97-.06-1.27-.26-3.5-.85-5.18\"></path>",
  _tmpl$2278 = "<path d=\"M11.5 6.5c1.64 0 5-.38 6.71-1.07.52-.2.55-.82.12-1.17A10 10 0 0 0 4.26 18.33c.35.43.96.4 1.17-.12.69-1.71 1.07-5.07 1.07-6.71 1.34.45 3.1.9 4.88.62a.88.88 0 0 0 .73-.74c.3-2.14-.15-3.5-.61-4.88\"></path>",
  _tmpl$2279 = "<path d=\"M15.62 16.95c.2.85.62 2.76.5 4.28a.77.77 0 0 1-.9.7 16.64 16.64 0 0 1-4.08-1.36\"></path>",
  _tmpl$2280 = "<path d=\"M16.13 21.05c1.65.63 3.68.84 4.87.91a.9.9 0 0 0 .96-.96 17.68 17.68 0 0 0-.9-4.87\"></path>",
  _tmpl$2281 = "<path d=\"M16.94 15.62c.86.2 2.77.62 4.29.5a.77.77 0 0 0 .7-.9 16.64 16.64 0 0 0-1.36-4.08\"></path>",
  _tmpl$2282 = "<path d=\"M17.99 5.52a20.82 20.82 0 0 1 3.15 4.5.8.8 0 0 1-.68 1.13c-2.33.2-5.3-.32-8.27-1.57\"></path>",
  _tmpl$2283 = "<path d=\"M4.93 4.93 3 3a.7.7 0 0 1 0-1\"></path>",
  _tmpl$2284 = "<path d=\"M9.58 12.18c1.24 2.98 1.77 5.95 1.57 8.28a.8.8 0 0 1-1.13.68 20.82 20.82 0 0 1-4.5-3.15\"></path>",
  _tmpl$2285 = "<path d=\"M12 6v4\"></path>",
  _tmpl$2286 = "<path d=\"M14 14h-4\"></path>",
  _tmpl$2287 = "<path d=\"M14 18h-4\"></path>",
  _tmpl$2288 = "<path d=\"M14 8h-4\"></path>",
  _tmpl$2289 = "<path d=\"M18 12h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-9a2 2 0 0 1 2-2h2\"></path>",
  _tmpl$2290 = "<path d=\"M18 22V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v18\"></path>",
  _tmpl$2291 = "<path d=\"M10 22v-6.57\"></path>",
  _tmpl$2292 = "<path d=\"M12 11h.01\"></path>",
  _tmpl$2293 = "<path d=\"M12 7h.01\"></path>",
  _tmpl$2294 = "<path d=\"M14 15.43V22\"></path>",
  _tmpl$2295 = "<path d=\"M15 16a5 5 0 0 0-6 0\"></path>",
  _tmpl$2296 = "<path d=\"M16 11h.01\"></path>",
  _tmpl$2297 = "<path d=\"M8 7h.01\"></path>",
  _tmpl$2298 = "<rect x=\"4\" y=\"2\" width=\"16\" height=\"20\" rx=\"2\"></rect>",
  _tmpl$2299 = "<path d=\"M5 22h14\"></path>",
  _tmpl$2300 = "<path d=\"M5 2h14\"></path>",
  _tmpl$2301 = "<path d=\"M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22\"></path>",
  _tmpl$2302 = "<path d=\"M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2\"></path>",
  _tmpl$2303 = "<path d=\"M10 12V8.964\"></path>",
  _tmpl$2304 = "<path d=\"M14 12V8.964\"></path>",
  _tmpl$2305 = "<path d=\"M15 12a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2a1 1 0 0 1 1-1z\"></path>",
  _tmpl$2306 = "<path d=\"M8.5 21H5a2 2 0 0 1-2-2v-9a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2h-5a2 2 0 0 1-2-2v-2\"></path>",
  _tmpl$2307 = "<path d=\"M12.662 21H5a2 2 0 0 1-2-2v-9a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v2.475\"></path>",
  _tmpl$2308 = "<path d=\"M14.959 12.717A1 1 0 0 0 14 12h-4a1 1 0 0 0-1 1v8\"></path>",
  _tmpl$2309 = "<path d=\"M15 18h6\"></path>",
  _tmpl$2310 = "<path d=\"M9.5 13.866a4 4 0 0 1 5 .01\"></path>",
  _tmpl$2311 = "<path d=\"M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>",
  _tmpl$2312 = "<path d=\"M7 10.754a8 8 0 0 1 10 0\"></path>",
  _tmpl$2313 = "<path d=\"M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8\"></path>",
  _tmpl$2314 = "<path d=\"M12 17c5 0 8-2.69 8-6H4c0 3.31 3 6 8 6m-4 4h8m-4-3v3M5.14 11a3.5 3.5 0 1 1 6.71 0\"></path>",
  _tmpl$2315 = "<path d=\"M12.14 11a3.5 3.5 0 1 1 6.71 0\"></path>",
  _tmpl$2316 = "<path d=\"M15.5 6.5a3.5 3.5 0 1 0-7 0\"></path>",
  _tmpl$2317 = "<path d=\"m7 11 4.08 10.35a1 1 0 0 0 1.84 0L17 11\"></path>",
  _tmpl$2318 = "<path d=\"M17 7A5 5 0 0 0 7 7\"></path>",
  _tmpl$2319 = "<path d=\"M17 7a2 2 0 0 1 0 4H7a2 2 0 0 1 0-4\"></path>",
  _tmpl$2320 = "<path d=\"M13.5 8h-3\"></path>",
  _tmpl$2321 = "<path d=\"m15 2-1 2h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h3\"></path>",
  _tmpl$2322 = "<path d=\"M16.899 22A5 5 0 0 0 7.1 22\"></path>",
  _tmpl$2323 = "<path d=\"m9 2 3 6\"></path>",
  _tmpl$2324 = "<circle cx=\"12\" cy=\"15\" r=\"3\"></circle>",
  _tmpl$2325 = "<path d=\"M16 10h2\"></path>",
  _tmpl$2326 = "<path d=\"M16 14h2\"></path>",
  _tmpl$2327 = "<path d=\"M6.17 15a3 3 0 0 1 5.66 0\"></path>",
  _tmpl$2328 = "<circle cx=\"9\" cy=\"11\" r=\"2\"></circle>",
  _tmpl$2329 = "<rect x=\"2\" y=\"5\" width=\"20\" height=\"14\" rx=\"2\"></rect>",
  _tmpl$2330 = "<path d=\"M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21\"></path>",
  _tmpl$2331 = "<path d=\"m14 19 3 3v-5.5\"></path>",
  _tmpl$2332 = "<path d=\"m17 22 3-3\"></path>",
  _tmpl$2333 = "<path d=\"M21 9v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7\"></path>",
  _tmpl$2334 = "<line x1=\"16\" x2=\"22\" y1=\"5\" y2=\"5\"></line>",
  _tmpl$2335 = "<path d=\"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\"></path>",
  _tmpl$2336 = "<path d=\"M10.41 10.41a2 2 0 1 1-2.83-2.83\"></path>",
  _tmpl$2337 = "<line x1=\"13.5\" x2=\"6\" y1=\"13.5\" y2=\"21\"></line>",
  _tmpl$2338 = "<line x1=\"18\" x2=\"21\" y1=\"12\" y2=\"15\"></line>",
  _tmpl$2339 = "<path d=\"M3.59 3.59A1.99 1.99 0 0 0 3 5v14a2 2 0 0 0 2 2h14c.55 0 1.052-.22 1.41-.59\"></path>",
  _tmpl$2340 = "<path d=\"M21 15V5a2 2 0 0 0-2-2H9\"></path>",
  _tmpl$2341 = "<path d=\"m11 16-5 5\"></path>",
  _tmpl$2342 = "<path d=\"M11 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6.5\"></path>",
  _tmpl$2343 = "<path d=\"M15.765 22a.5.5 0 0 1-.765-.424V13.38a.5.5 0 0 1 .765-.424l5.878 3.674a1 1 0 0 1 0 1.696z\"></path>",
  _tmpl$2344 = "<path d=\"M16 5h6\"></path>",
  _tmpl$2345 = "<path d=\"M19 2v6\"></path>",
  _tmpl$2346 = "<path d=\"M21 11.5V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7.5\"></path>",
  _tmpl$2347 = "<path d=\"m14 19.5 3-3 3 3\"></path>",
  _tmpl$2348 = "<path d=\"M17 22v-5.5\"></path>",
  _tmpl$2349 = "<path d=\"M16 3h5v5\"></path>",
  _tmpl$2350 = "<path d=\"M17 21h2a2 2 0 0 0 2-2\"></path>",
  _tmpl$2351 = "<path d=\"M21 12v3\"></path>",
  _tmpl$2352 = "<path d=\"m21 3-5 5\"></path>",
  _tmpl$2353 = "<path d=\"M3 7V5a2 2 0 0 1 2-2\"></path>",
  _tmpl$2354 = "<path d=\"m5 21 4.144-4.144a1.21 1.21 0 0 1 1.712 0L13 19\"></path>",
  _tmpl$2355 = "<path d=\"M9 3h3\"></path>",
  _tmpl$2356 = "<rect x=\"3\" y=\"11\" width=\"10\" height=\"10\" rx=\"1\"></rect>",
  _tmpl$2357 = "<path d=\"M18 22H4a2 2 0 0 1-2-2V6\"></path>",
  _tmpl$2358 = "<path d=\"m22 13-1.296-1.296a2.41 2.41 0 0 0-3.408 0L11 18\"></path>",
  _tmpl$2359 = "<rect width=\"16\" height=\"16\" x=\"6\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$2360 = "<path d=\"M12 3v12\"></path>",
  _tmpl$2361 = "<path d=\"m8 11 4 4 4-4\"></path>",
  _tmpl$2362 = "<path d=\"M8 5H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-4\"></path>",
  _tmpl$2363 = "<polyline points=\"22 12 16 12 14 15 10 15 8 12 2 12\"></polyline>",
  _tmpl$2364 = "<path d=\"M21 12H11\"></path>",
  _tmpl$2365 = "<path d=\"M21 18H11\"></path>",
  _tmpl$2366 = "<path d=\"M21 6H11\"></path>",
  _tmpl$2367 = "<path d=\"m7 8-4 4 4 4\"></path>",
  _tmpl$2368 = "<path d=\"m3 8 4 4-4 4\"></path>",
  _tmpl$2369 = "<path d=\"M6 3h12\"></path>",
  _tmpl$2370 = "<path d=\"m6 13 8.5 8\"></path>",
  _tmpl$2371 = "<path d=\"M6 13h3\"></path>",
  _tmpl$2372 = "<path d=\"M9 13c6.667 0 6.667-10 0-10\"></path>",
  _tmpl$2373 = "<path d=\"M6 16c5 0 7-8 12-8a4 4 0 0 1 0 8c-5 0-7-8-12-8a4 4 0 1 0 0 8\"></path>",
  _tmpl$2374 = "<path d=\"M12 16v-4\"></path>",
  _tmpl$2375 = "<path d=\"M12 8h.01\"></path>",
  _tmpl$2376 = "<path d=\"M7 7h.01\"></path>",
  _tmpl$2377 = "<path d=\"M17 7h.01\"></path>",
  _tmpl$2378 = "<path d=\"M7 17h.01\"></path>",
  _tmpl$2379 = "<path d=\"M17 17h.01\"></path>",
  _tmpl$2380 = "<rect width=\"20\" height=\"20\" x=\"2\" y=\"2\" rx=\"5\" ry=\"5\"></rect>",
  _tmpl$2381 = "<path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path>",
  _tmpl$2382 = "<line x1=\"17.5\" x2=\"17.51\" y1=\"6.5\" y2=\"6.5\"></line>",
  _tmpl$2383 = "<line x1=\"19\" x2=\"10\" y1=\"4\" y2=\"4\"></line>",
  _tmpl$2384 = "<line x1=\"14\" x2=\"5\" y1=\"20\" y2=\"20\"></line>",
  _tmpl$2385 = "<line x1=\"15\" x2=\"9\" y1=\"4\" y2=\"20\"></line>",
  _tmpl$2386 = "<path d=\"m16 14 4 4-4 4\"></path>",
  _tmpl$2387 = "<path d=\"M20 10a8 8 0 1 0-8 8h8\"></path>",
  _tmpl$2388 = "<path d=\"M4 10a8 8 0 1 1 8 8H4\"></path>",
  _tmpl$2389 = "<path d=\"m8 22-4-4 4-4\"></path>",
  _tmpl$2390 = "<path d=\"M12 9.5V21m0-11.5L6 3m6 6.5L18 3\"></path>",
  _tmpl$2391 = "<path d=\"M6 15h12\"></path>",
  _tmpl$2392 = "<path d=\"M6 11h12\"></path>",
  _tmpl$2393 = "<path d=\"M21 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-2Z\"></path>",
  _tmpl$2394 = "<path d=\"M6 15v-2\"></path>",
  _tmpl$2395 = "<path d=\"M12 15V9\"></path>",
  _tmpl$2396 = "<circle cx=\"12\" cy=\"6\" r=\"3\"></circle>",
  _tmpl$2397 = "<path d=\"M6 5v11\"></path>",
  _tmpl$2398 = "<path d=\"M12 5v6\"></path>",
  _tmpl$2399 = "<path d=\"M18 5v14\"></path>",
  _tmpl$2400 = "<path d=\"M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z\"></path>",
  _tmpl$2401 = "<circle cx=\"16.5\" cy=\"7.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$2402 = "<path d=\"M12.4 2.7a2.5 2.5 0 0 1 3.4 0l5.5 5.5a2.5 2.5 0 0 1 0 3.4l-3.7 3.7a2.5 2.5 0 0 1-3.4 0L8.7 9.8a2.5 2.5 0 0 1 0-3.4z\"></path>",
  _tmpl$2403 = "<path d=\"m14 7 3 3\"></path>",
  _tmpl$2404 = "<path d=\"m9.4 10.6-6.814 6.814A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814\"></path>",
  _tmpl$2405 = "<path d=\"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4\"></path>",
  _tmpl$2406 = "<path d=\"m21 2-9.6 9.6\"></path>",
  _tmpl$2407 = "<circle cx=\"7.5\" cy=\"15.5\" r=\"5.5\"></circle>",
  _tmpl$2408 = "<path d=\"M18 8h.01\"></path>",
  _tmpl$2409 = "<path d=\"M6 12v4\"></path>",
  _tmpl$2410 = "<path d=\"M10 12v4\"></path>",
  _tmpl$2411 = "<path d=\"M14 12v4\"></path>",
  _tmpl$2412 = "<path d=\"M18 12v4\"></path>",
  _tmpl$2413 = "<path d=\"M 20 4 A2 2 0 0 1 22 6\"></path>",
  _tmpl$2414 = "<path d=\"M 22 6 L 22 16.41\"></path>",
  _tmpl$2415 = "<path d=\"M 7 16 L 16 16\"></path>",
  _tmpl$2416 = "<path d=\"M 9.69 4 L 20 4\"></path>",
  _tmpl$2417 = "<path d=\"M20 20H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2\"></path>",
  _tmpl$2418 = "<path d=\"M7 16h10\"></path>",
  _tmpl$2419 = "<path d=\"M12 2v5\"></path>",
  _tmpl$2420 = "<path d=\"M14.829 15.998a3 3 0 1 1-5.658 0\"></path>",
  _tmpl$2421 = "<path d=\"M20.92 14.606A1 1 0 0 1 20 16H4a1 1 0 0 1-.92-1.394l3-7A1 1 0 0 1 7 7h10a1 1 0 0 1 .92.606z\"></path>",
  _tmpl$2422 = "<path d=\"M10.293 2.293a1 1 0 0 1 1.414 0l2.5 2.5 5.994 1.227a1 1 0 0 1 .506 1.687l-7 7a1 1 0 0 1-1.687-.506l-1.227-5.994-2.5-2.5a1 1 0 0 1 0-1.414z\"></path>",
  _tmpl$2423 = "<path d=\"m14.207 4.793-3.414 3.414\"></path>",
  _tmpl$2424 = "<path d=\"M3 20a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1z\"></path>",
  _tmpl$2425 = "<path d=\"m9.086 6.5-4.793 4.793a1 1 0 0 0-.18 1.17L7 18\"></path>",
  _tmpl$2426 = "<path d=\"M17.929 7.629A1 1 0 0 1 17 9H7a1 1 0 0 1-.928-1.371l2-5A1 1 0 0 1 9 2h6a1 1 0 0 1 .928.629z\"></path>",
  _tmpl$2427 = "<path d=\"M9 22h6\"></path>",
  _tmpl$2428 = "<path d=\"M19.929 18.629A1 1 0 0 1 19 20H9a1 1 0 0 1-.928-1.371l2-5A1 1 0 0 1 11 13h6a1 1 0 0 1 .928.629z\"></path>",
  _tmpl$2429 = "<path d=\"M6 3a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H5a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1z\"></path>",
  _tmpl$2430 = "<path d=\"M8 6h4a2 2 0 0 1 2 2v5\"></path>",
  _tmpl$2431 = "<path d=\"M19.929 9.629A1 1 0 0 1 19 11H9a1 1 0 0 1-.928-1.371l2-5A1 1 0 0 1 11 4h6a1 1 0 0 1 .928.629z\"></path>",
  _tmpl$2432 = "<path d=\"M6 15a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H5a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1z\"></path>",
  _tmpl$2433 = "<path d=\"M8 18h4a2 2 0 0 0 2-2v-5\"></path>",
  _tmpl$2434 = "<path d=\"M4.077 10.615A1 1 0 0 0 5 12h14a1 1 0 0 0 .923-1.385l-3.077-7.384A2 2 0 0 0 15 2H9a2 2 0 0 0-1.846 1.23Z\"></path>",
  _tmpl$2435 = "<path d=\"M8 20a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1z\"></path>",
  _tmpl$2436 = "<path d=\"m12 8 6-3-6-3v10\"></path>",
  _tmpl$2437 = "<path d=\"m8 11.99-5.5 3.14a1 1 0 0 0 0 1.74l8.5 4.86a2 2 0 0 0 2 0l8.5-4.86a1 1 0 0 0 0-1.74L16 12\"></path>",
  _tmpl$2438 = "<path d=\"m6.49 12.85 11.02 6.3\"></path>",
  _tmpl$2439 = "<path d=\"M17.51 12.85 6.5 19.15\"></path>",
  _tmpl$2440 = "<path d=\"M10 18v-7\"></path>",
  _tmpl$2441 = "<path d=\"M11.12 2.198a2 2 0 0 1 1.76.006l7.866 3.847c.476.233.31.949-.22.949H3.474c-.53 0-.695-.716-.22-.949z\"></path>",
  _tmpl$2442 = "<path d=\"M14 18v-7\"></path>",
  _tmpl$2443 = "<path d=\"M18 18v-7\"></path>",
  _tmpl$2444 = "<path d=\"M6 18v-7\"></path>",
  _tmpl$2445 = "<path d=\"m5 8 6 6\"></path>",
  _tmpl$2446 = "<path d=\"m4 14 6-6 2-3\"></path>",
  _tmpl$2447 = "<path d=\"M2 5h12\"></path>",
  _tmpl$2448 = "<path d=\"M7 2h1\"></path>",
  _tmpl$2449 = "<path d=\"m22 22-5-10-5 10\"></path>",
  _tmpl$2450 = "<path d=\"M14 18h6\"></path>",
  _tmpl$2451 = "<rect x=\"3\" y=\"4\" width=\"18\" height=\"12\" rx=\"2\"></rect>",
  _tmpl$2452 = "<rect width=\"18\" height=\"12\" x=\"3\" y=\"4\" rx=\"2\" ry=\"2\"></rect>",
  _tmpl$2453 = "<line x1=\"2\" x2=\"22\" y1=\"20\" y2=\"20\"></line>",
  _tmpl$2454 = "<path d=\"M18 5a2 2 0 0 1 2 2v8.526a2 2 0 0 0 .212.897l1.068 2.127a1 1 0 0 1-.9 1.45H3.62a1 1 0 0 1-.9-1.45l1.068-2.127A2 2 0 0 0 4 15.526V7a2 2 0 0 1 2-2z\"></path>",
  _tmpl$2455 = "<path d=\"M20.054 15.987H3.946\"></path>",
  _tmpl$2456 = "<path d=\"M7 22a5 5 0 0 1-2-4\"></path>",
  _tmpl$2457 = "<path d=\"M7 16.93c.96.43 1.96.74 2.99.91\"></path>",
  _tmpl$2458 = "<path d=\"M3.34 14A6.8 6.8 0 0 1 2 10c0-4.42 4.48-8 10-8s10 3.58 10 8a7.19 7.19 0 0 1-.33 2\"></path>",
  _tmpl$2459 = "<path d=\"M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z\"></path>",
  _tmpl$2460 = "<path d=\"M14.33 22h-.09a.35.35 0 0 1-.24-.32v-10a.34.34 0 0 1 .33-.34c.08 0 .15.03.21.08l7.34 6a.33.33 0 0 1-.21.59h-4.49l-2.57 3.85a.35.35 0 0 1-.28.14z\"></path>",
  _tmpl$2461 = "<path d=\"M3.3 14A6.8 6.8 0 0 1 2 10c0-4.4 4.5-8 10-8s10 3.6 10 8-4.5 8-10 8a12 12 0 0 1-5-1\"></path>",
  _tmpl$2462 = "<path d=\"M18 13a6 6 0 0 1-6 5 6 6 0 0 1-6-5h12Z\"></path>",
  _tmpl$2463 = "<path d=\"M13 13.74a2 2 0 0 1-2 0L2.5 8.87a1 1 0 0 1 0-1.74L11 2.26a2 2 0 0 1 2 0l8.5 4.87a1 1 0 0 1 0 1.74z\"></path>",
  _tmpl$2464 = "<path d=\"m20 14.285 1.5.845a1 1 0 0 1 0 1.74L13 21.74a2 2 0 0 1-2 0l-8.5-4.87a1 1 0 0 1 0-1.74l1.5-.845\"></path>",
  _tmpl$2465 = "<path d=\"M12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83z\"></path>",
  _tmpl$2466 = "<path d=\"M2 12a1 1 0 0 0 .58.91l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9A1 1 0 0 0 22 12\"></path>",
  _tmpl$2467 = "<path d=\"M2 17a1 1 0 0 0 .58.91l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9A1 1 0 0 0 22 17\"></path>",
  _tmpl$2468 = "<rect width=\"7\" height=\"9\" x=\"3\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$2469 = "<rect width=\"7\" height=\"5\" x=\"14\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$2470 = "<rect width=\"7\" height=\"9\" x=\"14\" y=\"12\" rx=\"1\"></rect>",
  _tmpl$2471 = "<rect width=\"7\" height=\"5\" x=\"3\" y=\"16\" rx=\"1\"></rect>",
  _tmpl$2472 = "<rect width=\"7\" height=\"7\" x=\"3\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$2473 = "<rect width=\"7\" height=\"7\" x=\"14\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$2474 = "<rect width=\"7\" height=\"7\" x=\"14\" y=\"14\" rx=\"1\"></rect>",
  _tmpl$2475 = "<rect width=\"7\" height=\"7\" x=\"3\" y=\"14\" rx=\"1\"></rect>",
  _tmpl$2476 = "<path d=\"M14 4h7\"></path>",
  _tmpl$2477 = "<path d=\"M14 9h7\"></path>",
  _tmpl$2478 = "<path d=\"M14 15h7\"></path>",
  _tmpl$2479 = "<path d=\"M14 20h7\"></path>",
  _tmpl$2480 = "<rect width=\"7\" height=\"18\" x=\"3\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$2481 = "<rect width=\"18\" height=\"7\" x=\"3\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$2482 = "<rect width=\"9\" height=\"7\" x=\"3\" y=\"14\" rx=\"1\"></rect>",
  _tmpl$2483 = "<rect width=\"5\" height=\"7\" x=\"16\" y=\"14\" rx=\"1\"></rect>",
  _tmpl$2484 = "<path d=\"M11 20A7 7 0 0 1 9.8 6.1C15.5 5 17 4.48 19 2c1 2 2 4.18 2 8 0 5.5-4.78 10-10 10Z\"></path>",
  _tmpl$2485 = "<path d=\"M2 21c0-3 1.85-5.36 5.08-6C9.5 14.52 12 13 13 12\"></path>",
  _tmpl$2486 = "<path d=\"M2 22c1.25-.987 2.27-1.975 3.9-2.2a5.56 5.56 0 0 1 3.8 1.5 4 4 0 0 0 6.187-2.353 3.5 3.5 0 0 0 3.69-5.116A3.5 3.5 0 0 0 20.95 8 3.5 3.5 0 1 0 16 3.05a3.5 3.5 0 0 0-5.831 1.373 3.5 3.5 0 0 0-5.116 3.69 4 4 0 0 0-2.348 6.155C3.499 15.42 4.409 16.712 4.2 18.1 3.926 19.743 3.014 20.732 2 22\"></path>",
  _tmpl$2487 = "<path d=\"M2 22 17 7\"></path>",
  _tmpl$2488 = "<path d=\"M16 12h3a2 2 0 0 0 1.902-1.38l1.056-3.333A1 1 0 0 0 21 6H3a1 1 0 0 0-.958 1.287l1.056 3.334A2 2 0 0 0 5 12h3\"></path>",
  _tmpl$2489 = "<path d=\"M18 6V3a1 1 0 0 0-1-1h-3\"></path>",
  _tmpl$2490 = "<rect width=\"8\" height=\"12\" x=\"8\" y=\"10\" rx=\"1\"></rect>",
  _tmpl$2491 = "<path d=\"M15 12h6\"></path>",
  _tmpl$2492 = "<path d=\"M15 6h6\"></path>",
  _tmpl$2493 = "<path d=\"m3 13 3.553-7.724a.5.5 0 0 1 .894 0L11 13\"></path>",
  _tmpl$2494 = "<path d=\"M3.92 11h6.16\"></path>",
  _tmpl$2495 = "<rect width=\"8\" height=\"18\" x=\"3\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$2496 = "<path d=\"M20.4 18.9c.2.5-.1 1.1-.6 1.3l-1.9.7c-.5.2-1.1-.1-1.3-.6L11.1 5.1c-.2-.5.1-1.1.6-1.3l1.9-.7c.5-.2 1.1.1 1.3.6Z\"></path>",
  _tmpl$2497 = "<path d=\"m16 6 4 14\"></path>",
  _tmpl$2498 = "<path d=\"M12 6v14\"></path>",
  _tmpl$2499 = "<path d=\"M8 8v12\"></path>",
  _tmpl$2500 = "<path d=\"M4 4v16\"></path>",
  _tmpl$2501 = "<path d=\"m4.93 4.93 4.24 4.24\"></path>",
  _tmpl$2502 = "<path d=\"m14.83 9.17 4.24-4.24\"></path>",
  _tmpl$2503 = "<path d=\"m14.83 14.83 4.24 4.24\"></path>",
  _tmpl$2504 = "<path d=\"m9.17 14.83-4.24 4.24\"></path>",
  _tmpl$2505 = "<path d=\"M14 12h2v8\"></path>",
  _tmpl$2506 = "<path d=\"M14 20h4\"></path>",
  _tmpl$2507 = "<path d=\"M6 12h4\"></path>",
  _tmpl$2508 = "<path d=\"M8 20V8a4 4 0 0 1 7.464-2\"></path>",
  _tmpl$2509 = "<path d=\"M16.8 11.2c.8-.9 1.2-2 1.2-3.2a6 6 0 0 0-9.3-5\"></path>",
  _tmpl$2510 = "<path d=\"M6.3 6.3a4.67 4.67 0 0 0 1.2 5.2c.7.7 1.3 1.5 1.5 2.5\"></path>",
  _tmpl$2511 = "<path d=\"M10 22h4\"></path>",
  _tmpl$2512 = "<path d=\"M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5\"></path>",
  _tmpl$2513 = "<path d=\"M7 3.5c5-2 7 2.5 3 4C1.5 10 2 15 5 16c5 2 9-10 14-7s.5 13.5-4 12c-5-2.5.5-11 6-2\"></path>",
  _tmpl$2514 = "<path d=\"M9 17H7A5 5 0 0 1 7 7\"></path>",
  _tmpl$2515 = "<path d=\"M15 7h2a5 5 0 0 1 4 8\"></path>",
  _tmpl$2516 = "<line x1=\"8\" x2=\"12\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$2517 = "<path d=\"M9 17H7A5 5 0 0 1 7 7h2\"></path>",
  _tmpl$2518 = "<path d=\"M15 7h2a5 5 0 1 1 0 10h-2\"></path>",
  _tmpl$2519 = "<path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path>",
  _tmpl$2520 = "<path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>",
  _tmpl$2521 = "<path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"></path>",
  _tmpl$2522 = "<rect width=\"4\" height=\"12\" x=\"2\" y=\"9\"></rect>",
  _tmpl$2523 = "<circle cx=\"4\" cy=\"4\" r=\"2\"></circle>",
  _tmpl$2524 = "<path d=\"M11 18H3\"></path>",
  _tmpl$2525 = "<path d=\"m15 18 2 2 4-4\"></path>",
  _tmpl$2526 = "<path d=\"M16 12H3\"></path>",
  _tmpl$2527 = "<path d=\"M16 6H3\"></path>",
  _tmpl$2528 = "<path d=\"m3 17 2 2 4-4\"></path>",
  _tmpl$2529 = "<path d=\"m3 7 2 2 4-4\"></path>",
  _tmpl$2530 = "<path d=\"M13 6h8\"></path>",
  _tmpl$2531 = "<path d=\"M13 12h8\"></path>",
  _tmpl$2532 = "<path d=\"M13 18h8\"></path>",
  _tmpl$2533 = "<path d=\"M10 12h11\"></path>",
  _tmpl$2534 = "<path d=\"M10 18h11\"></path>",
  _tmpl$2535 = "<path d=\"M10 6h11\"></path>",
  _tmpl$2536 = "<path d=\"m3 10 3-3-3-3\"></path>",
  _tmpl$2537 = "<path d=\"m3 20 3-3-3-3\"></path>",
  _tmpl$2538 = "<path d=\"M10 18H3\"></path>",
  _tmpl$2539 = "<path d=\"M21 6v10a2 2 0 0 1-2 2h-5\"></path>",
  _tmpl$2540 = "<path d=\"m16 16-2 2 2 2\"></path>",
  _tmpl$2541 = "<path d=\"M11 6H3\"></path>",
  _tmpl$2542 = "<path d=\"M18 9V3\"></path>",
  _tmpl$2543 = "<path d=\"M7 12h8\"></path>",
  _tmpl$2544 = "<path d=\"M7 12h10\"></path>",
  _tmpl$2545 = "<path d=\"M11 12H3\"></path>",
  _tmpl$2546 = "<path d=\"M16 18H3\"></path>",
  _tmpl$2547 = "<path d=\"M21 12h-6\"></path>",
  _tmpl$2548 = "<path d=\"M21 15V6\"></path>",
  _tmpl$2549 = "<path d=\"M18.5 18a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z\"></path>",
  _tmpl$2550 = "<path d=\"M12 12H3\"></path>",
  _tmpl$2551 = "<path d=\"M12 18H3\"></path>",
  _tmpl$2552 = "<path d=\"M4 10h2\"></path>",
  _tmpl$2553 = "<path d=\"M4 6h1v4\"></path>",
  _tmpl$2554 = "<path d=\"M6 18H4c0-1 2-2 2-3s-1-1.5-2-1\"></path>",
  _tmpl$2555 = "<path d=\"M18 9v6\"></path>",
  _tmpl$2556 = "<path d=\"M7 12H3\"></path>",
  _tmpl$2557 = "<path d=\"M7 18H3\"></path>",
  _tmpl$2558 = "<path d=\"M12 18a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L11 14\"></path>",
  _tmpl$2559 = "<path d=\"M10 6H3\"></path>",
  _tmpl$2560 = "<path d=\"M21 18V8a2 2 0 0 0-2-2h-5\"></path>",
  _tmpl$2561 = "<path d=\"m16 8-2-2 2-2\"></path>",
  _tmpl$2562 = "<rect x=\"3\" y=\"5\" width=\"6\" height=\"6\" rx=\"1\"></rect>",
  _tmpl$2563 = "<path d=\"M21 12h-8\"></path>",
  _tmpl$2564 = "<path d=\"M21 6H8\"></path>",
  _tmpl$2565 = "<path d=\"M21 18h-8\"></path>",
  _tmpl$2566 = "<path d=\"M3 6v4c0 1.1.9 2 2 2h3\"></path>",
  _tmpl$2567 = "<path d=\"M3 10v6c0 1.1.9 2 2 2h3\"></path>",
  _tmpl$2568 = "<path d=\"m16 12 5 3-5 3v-6Z\"></path>",
  _tmpl$2569 = "<path d=\"m19 10-4 4\"></path>",
  _tmpl$2570 = "<path d=\"m15 10 4 4\"></path>",
  _tmpl$2571 = "<path d=\"M3 12h.01\"></path>",
  _tmpl$2572 = "<path d=\"M3 18h.01\"></path>",
  _tmpl$2573 = "<path d=\"M3 6h.01\"></path>",
  _tmpl$2574 = "<path d=\"M8 12h13\"></path>",
  _tmpl$2575 = "<path d=\"M8 18h13\"></path>",
  _tmpl$2576 = "<path d=\"M8 6h13\"></path>",
  _tmpl$2577 = "<path d=\"M21 12a9 9 0 1 1-6.219-8.56\"></path>",
  _tmpl$2578 = "<path d=\"M22 12a1 1 0 0 1-10 0 1 1 0 0 0-10 0\"></path>",
  _tmpl$2579 = "<path d=\"M7 20.7a1 1 0 1 1 5-8.7 1 1 0 1 0 5-8.6\"></path>",
  _tmpl$2580 = "<path d=\"M7 3.3a1 1 0 1 1 5 8.6 1 1 0 1 0 5 8.6\"></path>",
  _tmpl$2581 = "<path d=\"m16.2 7.8 2.9-2.9\"></path>",
  _tmpl$2582 = "<path d=\"M18 12h4\"></path>",
  _tmpl$2583 = "<path d=\"m16.2 16.2 2.9 2.9\"></path>",
  _tmpl$2584 = "<path d=\"M12 18v4\"></path>",
  _tmpl$2585 = "<path d=\"m4.9 19.1 2.9-2.9\"></path>",
  _tmpl$2586 = "<path d=\"M2 12h4\"></path>",
  _tmpl$2587 = "<path d=\"m4.9 4.9 2.9 2.9\"></path>",
  _tmpl$2588 = "<line x1=\"2\" x2=\"5\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$2589 = "<line x1=\"19\" x2=\"22\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$2590 = "<line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"5\"></line>",
  _tmpl$2591 = "<line x1=\"12\" x2=\"12\" y1=\"19\" y2=\"22\"></line>",
  _tmpl$2592 = "<circle cx=\"12\" cy=\"12\" r=\"7\"></circle>",
  _tmpl$2593 = "<path d=\"M12 19v3\"></path>",
  _tmpl$2594 = "<path d=\"M12 2v3\"></path>",
  _tmpl$2595 = "<path d=\"M18.89 13.24a7 7 0 0 0-8.13-8.13\"></path>",
  _tmpl$2596 = "<path d=\"M19 12h3\"></path>",
  _tmpl$2597 = "<path d=\"M2 12h3\"></path>",
  _tmpl$2598 = "<path d=\"M7.05 7.05a7 7 0 0 0 9.9 9.9\"></path>",
  _tmpl$2599 = "<path d=\"M17.97 9.304A8 8 0 0 0 2 10c0 4.69 4.887 9.562 7.022 11.468\"></path>",
  _tmpl$2600 = "<path d=\"M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z\"></path>",
  _tmpl$2601 = "<circle cx=\"10\" cy=\"10\" r=\"3\"></circle>",
  _tmpl$2602 = "<circle cx=\"12\" cy=\"16\" r=\"1\"></circle>",
  _tmpl$2603 = "<path d=\"M7 10V7a5 5 0 0 1 9.33-2.5\"></path>",
  _tmpl$2604 = "<rect x=\"3\" y=\"10\" width=\"18\" height=\"12\" rx=\"2\"></rect>",
  _tmpl$2605 = "<path d=\"M7 10V7a5 5 0 0 1 10 0v3\"></path>",
  _tmpl$2606 = "<rect width=\"18\" height=\"11\" x=\"3\" y=\"11\" rx=\"2\" ry=\"2\"></rect>",
  _tmpl$2607 = "<path d=\"M7 11V7a5 5 0 0 1 9.9-1\"></path>",
  _tmpl$2608 = "<path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>",
  _tmpl$2609 = "<path d=\"m10 17 5-5-5-5\"></path>",
  _tmpl$2610 = "<path d=\"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\"></path>",
  _tmpl$2611 = "<path d=\"m16 17 5-5-5-5\"></path>",
  _tmpl$2612 = "<path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path>",
  _tmpl$2613 = "<path d=\"M3 12h1\"></path>",
  _tmpl$2614 = "<path d=\"M3 18h1\"></path>",
  _tmpl$2615 = "<path d=\"M3 6h1\"></path>",
  _tmpl$2616 = "<path d=\"M8 12h1\"></path>",
  _tmpl$2617 = "<path d=\"M8 6h1\"></path>",
  _tmpl$2618 = "<circle cx=\"11\" cy=\"11\" r=\"8\"></circle>",
  _tmpl$2619 = "<path d=\"m21 21-4.3-4.3\"></path>",
  _tmpl$2620 = "<path d=\"M11 11a2 2 0 0 0 4 0 4 4 0 0 0-8 0 6 6 0 0 0 12 0\"></path>",
  _tmpl$2621 = "<path d=\"M6 20a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2\"></path>",
  _tmpl$2622 = "<path d=\"M8 18V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v14\"></path>",
  _tmpl$2623 = "<path d=\"M10 20h4\"></path>",
  _tmpl$2624 = "<circle cx=\"8\" cy=\"20\" r=\"2\"></circle>",
  _tmpl$2625 = "<path d=\"m6 15-4-4 6.75-6.77a7.79 7.79 0 0 1 11 11L13 22l-4-4 6.39-6.36a2.14 2.14 0 0 0-3-3L6 15\"></path>",
  _tmpl$2626 = "<path d=\"m5 8 4 4\"></path>",
  _tmpl$2627 = "<path d=\"m12 15 4 4\"></path>",
  _tmpl$2628 = "<path d=\"M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8\"></path>",
  _tmpl$2629 = "<path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\"></path>",
  _tmpl$2630 = "<path d=\"M22 15V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8\"></path>",
  _tmpl$2631 = "<path d=\"M21.2 8.4c.5.38.8.97.8 1.6v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V10a2 2 0 0 1 .8-1.6l8-6a2 2 0 0 1 2.4 0l8 6Z\"></path>",
  _tmpl$2632 = "<path d=\"m22 10-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 10\"></path>",
  _tmpl$2633 = "<path d=\"M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5\"></path>",
  _tmpl$2634 = "<path d=\"M18 15.28c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2\"></path>",
  _tmpl$2635 = "<path d=\"M20 22v.01\"></path>",
  _tmpl$2636 = "<path d=\"M22 12.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h7.5\"></path>",
  _tmpl$2637 = "<path d=\"M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"></path>",
  _tmpl$2638 = "<path d=\"m22 22-1.5-1.5\"></path>",
  _tmpl$2639 = "<path d=\"M20 14v4\"></path>",
  _tmpl$2640 = "<path d=\"M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h9\"></path>",
  _tmpl$2641 = "<path d=\"m17 17 4 4\"></path>",
  _tmpl$2642 = "<path d=\"m21 17-4 4\"></path>",
  _tmpl$2643 = "<path d=\"m22 7-8.991 5.727a2 2 0 0 1-2.009 0L2 7\"></path>",
  _tmpl$2644 = "<path d=\"M22 17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.5C2 7 4 5 6.5 5H18c2.2 0 4 1.8 4 4v8Z\"></path>",
  _tmpl$2645 = "<polyline points=\"15,9 18,9 18,11\"></polyline>",
  _tmpl$2646 = "<path d=\"M6.5 5C9 5 11 7 11 9.5V17a2 2 0 0 1-2 2\"></path>",
  _tmpl$2647 = "<line x1=\"6\" x2=\"7\" y1=\"10\" y2=\"10\"></line>",
  _tmpl$2648 = "<rect width=\"16\" height=\"13\" x=\"6\" y=\"4\" rx=\"2\"></rect>",
  _tmpl$2649 = "<path d=\"m22 7-7.1 3.78c-.57.3-1.23.3-1.8 0L6 7\"></path>",
  _tmpl$2650 = "<path d=\"M2 8v11c0 1.1.9 2 2 2h14\"></path>",
  _tmpl$2651 = "<path d=\"M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0\"></path>",
  _tmpl$2652 = "<path d=\"M19.43 12.935c.357-.967.57-1.955.57-2.935a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32.197 32.197 0 0 0 .813-.728\"></path>",
  _tmpl$2653 = "<path d=\"m16 18 2 2 4-4\"></path>",
  _tmpl$2654 = "<path d=\"M15 22a1 1 0 0 1-1-1v-4a1 1 0 0 1 .445-.832l3-2a1 1 0 0 1 1.11 0l3 2A1 1 0 0 1 22 17v4a1 1 0 0 1-1 1z\"></path>",
  _tmpl$2655 = "<path d=\"M18 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 .601.2\"></path>",
  _tmpl$2656 = "<path d=\"M18 22v-3\"></path>",
  _tmpl$2657 = "<path d=\"M18.977 14C19.6 12.701 20 11.343 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32 32 0 0 0 .824-.738\"></path>",
  _tmpl$2658 = "<path d=\"M16 18h6\"></path>",
  _tmpl$2659 = "<path d=\"M12.75 7.09a3 3 0 0 1 2.16 2.16\"></path>",
  _tmpl$2660 = "<path d=\"M17.072 17.072c-1.634 2.17-3.527 3.912-4.471 4.727a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 1.432-4.568\"></path>",
  _tmpl$2661 = "<path d=\"M8.475 2.818A8 8 0 0 1 20 10c0 1.183-.31 2.377-.81 3.533\"></path>",
  _tmpl$2662 = "<path d=\"M9.13 9.13a3 3 0 0 0 3.74 3.74\"></path>",
  _tmpl$2663 = "<path d=\"M19.914 11.105A7.298 7.298 0 0 0 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32 32 0 0 0 .824-.738\"></path>",
  _tmpl$2664 = "<path d=\"M19.752 11.901A7.78 7.78 0 0 0 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 19 19 0 0 0 .09-.077\"></path>",
  _tmpl$2665 = "<path d=\"m21.5 15.5-5 5\"></path>",
  _tmpl$2666 = "<path d=\"m21.5 20.5-5-5\"></path>",
  _tmpl$2667 = "<path d=\"M18 8c0 3.613-3.869 7.429-5.393 8.795a1 1 0 0 1-1.214 0C9.87 15.429 6 11.613 6 8a6 6 0 0 1 12 0\"></path>",
  _tmpl$2668 = "<path d=\"M8.714 14h-3.71a1 1 0 0 0-.948.683l-2.004 6A1 1 0 0 0 3 22h18a1 1 0 0 0 .948-1.316l-2-6a1 1 0 0 0-.949-.684h-3.712\"></path>",
  _tmpl$2669 = "<path d=\"m11 19-1.106-.552a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0l4.212 2.106a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619V12\"></path>",
  _tmpl$2670 = "<path d=\"M15 5.764V12\"></path>",
  _tmpl$2671 = "<path d=\"M9 3.236v15\"></path>",
  _tmpl$2672 = "<path d=\"M14.106 5.553a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619v12.764a1 1 0 0 1-.553.894l-4.553 2.277a2 2 0 0 1-1.788 0l-4.212-2.106a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0z\"></path>",
  _tmpl$2673 = "<path d=\"M15 5.764v15\"></path>",
  _tmpl$2674 = "<path d=\"m14 6 4 4\"></path>",
  _tmpl$2675 = "<path d=\"m21 3-7.75 7.75\"></path>",
  _tmpl$2676 = "<circle cx=\"9\" cy=\"15\" r=\"6\"></circle>",
  _tmpl$2677 = "<path d=\"m21 3-6.75 6.75\"></path>",
  _tmpl$2678 = "<circle cx=\"10\" cy=\"14\" r=\"6\"></circle>",
  _tmpl$2679 = "<path d=\"M12 11v11\"></path>",
  _tmpl$2680 = "<path d=\"m19 3-7 8-7-8Z\"></path>",
  _tmpl$2681 = "<path d=\"m21 3-7 7\"></path>",
  _tmpl$2682 = "<path d=\"m3 21 7-7\"></path>",
  _tmpl$2683 = "<path d=\"M9 21H3v-6\"></path>",
  _tmpl$2684 = "<path d=\"M8 3H5a2 2 0 0 0-2 2v3\"></path>",
  _tmpl$2685 = "<path d=\"M21 8V5a2 2 0 0 0-2-2h-3\"></path>",
  _tmpl$2686 = "<path d=\"M3 16v3a2 2 0 0 0 2 2h3\"></path>",
  _tmpl$2687 = "<path d=\"M16 21h3a2 2 0 0 0 2-2v-3\"></path>",
  _tmpl$2688 = "<path d=\"M7.21 15 2.66 7.14a2 2 0 0 1 .13-2.2L4.4 2.8A2 2 0 0 1 6 2h12a2 2 0 0 1 1.6.8l1.6 2.14a2 2 0 0 1 .14 2.2L16.79 15\"></path>",
  _tmpl$2689 = "<path d=\"M11 12 5.12 2.2\"></path>",
  _tmpl$2690 = "<path d=\"m13 12 5.88-9.8\"></path>",
  _tmpl$2691 = "<path d=\"M8 7h8\"></path>",
  _tmpl$2692 = "<circle cx=\"12\" cy=\"17\" r=\"5\"></circle>",
  _tmpl$2693 = "<path d=\"M12 18v-2h-.5\"></path>",
  _tmpl$2694 = "<path d=\"M11.636 6A13 13 0 0 0 19.4 3.2 1 1 0 0 1 21 4v11.344\"></path>",
  _tmpl$2695 = "<path d=\"M14.378 14.357A13 13 0 0 0 11 14H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h1\"></path>",
  _tmpl$2696 = "<path d=\"M6 14a12 12 0 0 0 2.4 7.2 2 2 0 0 0 3.2-2.4A8 8 0 0 1 10 14\"></path>",
  _tmpl$2697 = "<path d=\"M8 8v6\"></path>",
  _tmpl$2698 = "<path d=\"M11 6a13 13 0 0 0 8.4-2.8A1 1 0 0 1 21 4v12a1 1 0 0 1-1.6.8A13 13 0 0 0 11 14H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2z\"></path>",
  _tmpl$2699 = "<path d=\"M8 6v8\"></path>",
  _tmpl$2700 = "<line x1=\"8\" x2=\"16\" y1=\"15\" y2=\"15\"></line>",
  _tmpl$2701 = "<path d=\"M6 19v-3\"></path>",
  _tmpl$2702 = "<path d=\"M10 19v-3\"></path>",
  _tmpl$2703 = "<path d=\"M14 19v-3\"></path>",
  _tmpl$2704 = "<path d=\"M18 19v-3\"></path>",
  _tmpl$2705 = "<path d=\"M8 11V9\"></path>",
  _tmpl$2706 = "<path d=\"M16 11V9\"></path>",
  _tmpl$2707 = "<path d=\"M12 11V9\"></path>",
  _tmpl$2708 = "<path d=\"M2 15h20\"></path>",
  _tmpl$2709 = "<path d=\"M2 7a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1.1a2 2 0 0 0 0 3.837V17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-5.1a2 2 0 0 0 0-3.837Z\"></path>",
  _tmpl$2710 = "<path d=\"M4 12h16\"></path>",
  _tmpl$2711 = "<path d=\"M4 18h16\"></path>",
  _tmpl$2712 = "<path d=\"M4 6h16\"></path>",
  _tmpl$2713 = "<path d=\"m8 6 4-4 4 4\"></path>",
  _tmpl$2714 = "<path d=\"M12 2v10.3a4 4 0 0 1-1.172 2.872L4 22\"></path>",
  _tmpl$2715 = "<path d=\"m20 22-5-5\"></path>",
  _tmpl$2716 = "<path d=\"M10 9.5 8 12l2 2.5\"></path>",
  _tmpl$2717 = "<path d=\"m14 9.5 2 2.5-2 2.5\"></path>",
  _tmpl$2718 = "<path d=\"M7.9 20A9 9 0 1 0 4 16.1L2 22z\"></path>",
  _tmpl$2719 = "<path d=\"M13.5 3.1c-.5 0-1-.1-1.5-.1s-1 .1-1.5.1\"></path>",
  _tmpl$2720 = "<path d=\"M19.3 6.8a10.45 10.45 0 0 0-2.1-2.1\"></path>",
  _tmpl$2721 = "<path d=\"M20.9 13.5c.1-.5.1-1 .1-1.5s-.1-1-.1-1.5\"></path>",
  _tmpl$2722 = "<path d=\"M17.2 19.3a10.45 10.45 0 0 0 2.1-2.1\"></path>",
  _tmpl$2723 = "<path d=\"M10.5 20.9c.5.1 1 .1 1.5.1s1-.1 1.5-.1\"></path>",
  _tmpl$2724 = "<path d=\"M3.5 17.5 2 22l4.5-1.5\"></path>",
  _tmpl$2725 = "<path d=\"M3.1 10.5c0 .5-.1 1-.1 1.5s.1 1 .1 1.5\"></path>",
  _tmpl$2726 = "<path d=\"M6.8 4.7a10.45 10.45 0 0 0-2.1 2.1\"></path>",
  _tmpl$2727 = "<path d=\"M7.9 20A9 9 0 1 0 4 16.1L2 22Z\"></path>",
  _tmpl$2728 = "<path d=\"M15.8 9.2a2.5 2.5 0 0 0-3.5 0l-.3.4-.35-.3a2.42 2.42 0 1 0-3.2 3.6l3.6 3.5 3.6-3.5c1.2-1.2 1.1-2.7.2-3.7\"></path>",
  _tmpl$2729 = "<path d=\"M20.5 14.9A9 9 0 0 0 9.1 3.5\"></path>",
  _tmpl$2730 = "<path d=\"M5.6 5.6C3 8.3 2.2 12.5 4 16l-2 6 6-2c3.4 1.8 7.6 1.1 10.3-1.7\"></path>",
  _tmpl$2731 = "<path d=\"m10 15-3-3 3-3\"></path>",
  _tmpl$2732 = "<path d=\"M7 12h7a2 2 0 0 1 2 2v1\"></path>",
  _tmpl$2733 = "<path d=\"M12 8v4\"></path>",
  _tmpl$2734 = "<path d=\"M10 7.5 8 10l2 2.5\"></path>",
  _tmpl$2735 = "<path d=\"m14 7.5 2 2.5-2 2.5\"></path>",
  _tmpl$2736 = "<path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>",
  _tmpl$2737 = "<path d=\"M10 17H7l-4 4v-7\"></path>",
  _tmpl$2738 = "<path d=\"M14 17h1\"></path>",
  _tmpl$2739 = "<path d=\"M14 3h1\"></path>",
  _tmpl$2740 = "<path d=\"M19 3a2 2 0 0 1 2 2\"></path>",
  _tmpl$2741 = "<path d=\"M21 14v1a2 2 0 0 1-2 2\"></path>",
  _tmpl$2742 = "<path d=\"M21 9v1\"></path>",
  _tmpl$2743 = "<path d=\"M3 9v1\"></path>",
  _tmpl$2744 = "<path d=\"M5 3a2 2 0 0 0-2 2\"></path>",
  _tmpl$2745 = "<path d=\"M9 3h1\"></path>",
  _tmpl$2746 = "<path d=\"m5 19-2 2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2\"></path>",
  _tmpl$2747 = "<path d=\"M11.7 3H5a2 2 0 0 0-2 2v16l4-4h12a2 2 0 0 0 2-2v-2.7\"></path>",
  _tmpl$2748 = "<path d=\"M14.8 7.5a1.84 1.84 0 0 0-2.6 0l-.2.3-.3-.3a1.84 1.84 0 1 0-2.4 2.8L12 13l2.7-2.7c.9-.9.8-2.1.1-2.8\"></path>",
  _tmpl$2749 = "<path d=\"M19 15v-2a2 2 0 1 0-4 0v2\"></path>",
  _tmpl$2750 = "<path d=\"M9 17H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v3.5\"></path>",
  _tmpl$2751 = "<rect x=\"13\" y=\"15\" width=\"8\" height=\"5\" rx=\"1\"></rect>",
  _tmpl$2752 = "<path d=\"M3.6 3.6c-.4.3-.6.8-.6 1.4v16l4-4h10\"></path>",
  _tmpl$2753 = "<path d=\"M8 12a2 2 0 0 0 2-2V8H8\"></path>",
  _tmpl$2754 = "<path d=\"M14 12a2 2 0 0 0 2-2V8h-2\"></path>",
  _tmpl$2755 = "<path d=\"m10 7-3 3 3 3\"></path>",
  _tmpl$2756 = "<path d=\"M17 13v-1a2 2 0 0 0-2-2H7\"></path>",
  _tmpl$2757 = "<path d=\"M21 12v3a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h7\"></path>",
  _tmpl$2758 = "<path d=\"m16 8 5-5\"></path>",
  _tmpl$2759 = "<path d=\"M13 8H7\"></path>",
  _tmpl$2760 = "<path d=\"M12 7v2\"></path>",
  _tmpl$2761 = "<path d=\"M14 9a2 2 0 0 1-2 2H6l-4 4V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2z\"></path>",
  _tmpl$2762 = "<path d=\"M18 9h2a2 2 0 0 1 2 2v11l-4-4h-6a2 2 0 0 1-2-2v-1\"></path>",
  _tmpl$2763 = "<path d=\"M18.89 13.23A7.12 7.12 0 0 0 19 12v-2\"></path>",
  _tmpl$2764 = "<path d=\"M5 10v2a7 7 0 0 0 12 5\"></path>",
  _tmpl$2765 = "<path d=\"M15 9.34V5a3 3 0 0 0-5.68-1.33\"></path>",
  _tmpl$2766 = "<path d=\"M9 9v3a3 3 0 0 0 5.12 2.12\"></path>",
  _tmpl$2767 = "<path d=\"m11 7.601-5.994 8.19a1 1 0 0 0 .1 1.298l.817.818a1 1 0 0 0 1.314.087L15.09 12\"></path>",
  _tmpl$2768 = "<path d=\"M16.5 21.174C15.5 20.5 14.372 20 13 20c-2.058 0-3.928 2.356-6 2-2.072-.356-2.775-3.369-1.5-4.5\"></path>",
  _tmpl$2769 = "<circle cx=\"16\" cy=\"7\" r=\"5\"></circle>",
  _tmpl$2770 = "<path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>",
  _tmpl$2771 = "<rect x=\"9\" y=\"2\" width=\"6\" height=\"13\" rx=\"3\"></rect>",
  _tmpl$2772 = "<path d=\"M18 12h2\"></path>",
  _tmpl$2773 = "<path d=\"M18 16h2\"></path>",
  _tmpl$2774 = "<path d=\"M18 20h2\"></path>",
  _tmpl$2775 = "<path d=\"M18 4h2\"></path>",
  _tmpl$2776 = "<path d=\"M18 8h2\"></path>",
  _tmpl$2777 = "<path d=\"M4 12h2\"></path>",
  _tmpl$2778 = "<path d=\"M4 16h2\"></path>",
  _tmpl$2779 = "<path d=\"M4 20h2\"></path>",
  _tmpl$2780 = "<path d=\"M4 4h2\"></path>",
  _tmpl$2781 = "<path d=\"M4 8h2\"></path>",
  _tmpl$2782 = "<path d=\"M8 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-1.5c-.276 0-.494.227-.562.495a2 2 0 0 1-3.876 0C9.994 2.227 9.776 2 9.5 2z\"></path>",
  _tmpl$2783 = "<path d=\"M6 18h8\"></path>",
  _tmpl$2784 = "<path d=\"M14 22a7 7 0 1 0 0-14h-1\"></path>",
  _tmpl$2785 = "<path d=\"M9 14h2\"></path>",
  _tmpl$2786 = "<path d=\"M9 12a2 2 0 0 1-2-2V6h6v4a2 2 0 0 1-2 2Z\"></path>",
  _tmpl$2787 = "<path d=\"M12 6V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3\"></path>",
  _tmpl$2788 = "<rect width=\"20\" height=\"15\" x=\"2\" y=\"4\" rx=\"2\"></rect>",
  _tmpl$2789 = "<rect width=\"8\" height=\"7\" x=\"6\" y=\"8\" rx=\"1\"></rect>",
  _tmpl$2790 = "<path d=\"M18 8v7\"></path>",
  _tmpl$2791 = "<path d=\"M18 19v2\"></path>",
  _tmpl$2792 = "<path d=\"M12 3v3\"></path>",
  _tmpl$2793 = "<path d=\"M4 6a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h13a2 2 0 0 0 1.152-.365l3.424-2.317a1 1 0 0 0 0-1.635l-3.424-2.318A2 2 0 0 0 17 6z\"></path>",
  _tmpl$2794 = "<path d=\"M8 2h8\"></path>",
  _tmpl$2795 = "<path d=\"M9 2v1.343M15 2v2.789a4 4 0 0 0 .672 2.219l.656.984a4 4 0 0 1 .672 2.22v1.131M7.8 7.8l-.128.192A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3\"></path>",
  _tmpl$2796 = "<path d=\"M7 15a6.47 6.47 0 0 1 5 0 6.472 6.472 0 0 0 3.435.435\"></path>",
  _tmpl$2797 = "<path d=\"M9 2v2.789a4 4 0 0 1-.672 2.219l-.656.984A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-9.789a4 4 0 0 0-.672-2.219l-.656-.984A4 4 0 0 1 15 4.788V2\"></path>",
  _tmpl$2798 = "<path d=\"M7 15a6.472 6.472 0 0 1 5 0 6.47 6.47 0 0 0 5 0\"></path>",
  _tmpl$2799 = "<path d=\"m14 10 7-7\"></path>",
  _tmpl$2800 = "<path d=\"M20 10h-6V4\"></path>",
  _tmpl$2801 = "<path d=\"M4 14h6v6\"></path>",
  _tmpl$2802 = "<path d=\"M8 3v3a2 2 0 0 1-2 2H3\"></path>",
  _tmpl$2803 = "<path d=\"M21 8h-3a2 2 0 0 1-2-2V3\"></path>",
  _tmpl$2804 = "<path d=\"M3 16h3a2 2 0 0 1 2 2v3\"></path>",
  _tmpl$2805 = "<path d=\"M16 21v-3a2 2 0 0 1 2-2h3\"></path>",
  _tmpl$2806 = "<rect width=\"20\" height=\"14\" x=\"2\" y=\"3\" rx=\"2\"></rect>",
  _tmpl$2807 = "<path d=\"M12 17v4\"></path>",
  _tmpl$2808 = "<path d=\"M8 21h8\"></path>",
  _tmpl$2809 = "<path d=\"m14.305 7.53.923-.382\"></path>",
  _tmpl$2810 = "<path d=\"m15.228 4.852-.923-.383\"></path>",
  _tmpl$2811 = "<path d=\"m16.852 3.228-.383-.924\"></path>",
  _tmpl$2812 = "<path d=\"m16.852 8.772-.383.923\"></path>",
  _tmpl$2813 = "<path d=\"m19.148 3.228.383-.924\"></path>",
  _tmpl$2814 = "<path d=\"m19.53 9.696-.382-.924\"></path>",
  _tmpl$2815 = "<path d=\"m20.772 4.852.924-.383\"></path>",
  _tmpl$2816 = "<path d=\"m20.772 7.148.924.383\"></path>",
  _tmpl$2817 = "<path d=\"M22 13v2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7\"></path>",
  _tmpl$2818 = "<path d=\"M22 12v3a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h9\"></path>",
  _tmpl$2819 = "<path d=\"m15 10-3 3-3-3\"></path>",
  _tmpl$2820 = "<path d=\"M17 17H4a2 2 0 0 1-2-2V5c0-1.5 1-2 1-2\"></path>",
  _tmpl$2821 = "<path d=\"M22 15V5a2 2 0 0 0-2-2H9\"></path>",
  _tmpl$2822 = "<path d=\"M10 13V7\"></path>",
  _tmpl$2823 = "<path d=\"M14 13V7\"></path>",
  _tmpl$2824 = "<path d=\"M10 7.75a.75.75 0 0 1 1.142-.638l3.664 2.249a.75.75 0 0 1 0 1.278l-3.664 2.25a.75.75 0 0 1-1.142-.64z\"></path>",
  _tmpl$2825 = "<rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\"></rect>",
  _tmpl$2826 = "<path d=\"M18 8V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h8\"></path>",
  _tmpl$2827 = "<path d=\"M10 19v-3.96 3.15\"></path>",
  _tmpl$2828 = "<path d=\"M7 19h5\"></path>",
  _tmpl$2829 = "<rect width=\"6\" height=\"10\" x=\"16\" y=\"12\" rx=\"2\"></rect>",
  _tmpl$2830 = "<path d=\"M5.5 20H8\"></path>",
  _tmpl$2831 = "<path d=\"M17 9h.01\"></path>",
  _tmpl$2832 = "<rect width=\"10\" height=\"16\" x=\"12\" y=\"4\" rx=\"2\"></rect>",
  _tmpl$2833 = "<path d=\"M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4\"></path>",
  _tmpl$2834 = "<circle cx=\"17\" cy=\"15\" r=\"1\"></circle>",
  _tmpl$2835 = "<rect x=\"9\" y=\"7\" width=\"6\" height=\"6\" rx=\"1\"></rect>",
  _tmpl$2836 = "<path d=\"m14.5 12.5-5-5\"></path>",
  _tmpl$2837 = "<path d=\"m9.5 12.5 5-5\"></path>",
  _tmpl$2838 = "<line x1=\"8\" x2=\"16\" y1=\"21\" y2=\"21\"></line>",
  _tmpl$2839 = "<line x1=\"12\" x2=\"12\" y1=\"17\" y2=\"21\"></line>",
  _tmpl$2840 = "<path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9\"></path>",
  _tmpl$2841 = "<path d=\"M20 3v4\"></path>",
  _tmpl$2842 = "<path d=\"M22 5h-4\"></path>",
  _tmpl$2843 = "<path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\"></path>",
  _tmpl$2844 = "<path d=\"m8 3 4 8 5-5 5 15H2L8 3z\"></path>",
  _tmpl$2845 = "<path d=\"M4.14 15.08c2.62-1.57 5.24-1.43 7.86.42 2.74 1.94 5.49 2 8.23.19\"></path>",
  _tmpl$2846 = "<path d=\"M12 6v.343\"></path>",
  _tmpl$2847 = "<path d=\"M18.218 18.218A7 7 0 0 1 5 15V9a7 7 0 0 1 .782-3.218\"></path>",
  _tmpl$2848 = "<path d=\"M19 13.343V9A7 7 0 0 0 8.56 2.902\"></path>",
  _tmpl$2849 = "<path d=\"M4.037 4.688a.495.495 0 0 1 .651-.651l16 6.5a.5.5 0 0 1-.063.947l-6.124 1.58a2 2 0 0 0-1.438 1.435l-1.579 6.126a.5.5 0 0 1-.947.063z\"></path>",
  _tmpl$2850 = "<path d=\"M2.034 2.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.944L8.204 7.545a1 1 0 0 0-.66.66l-1.066 3.443a.5.5 0 0 1-.944.033z\"></path>",
  _tmpl$2851 = "<path d=\"m11.8 11.8 8.4 8.4\"></path>",
  _tmpl$2852 = "<path d=\"M14 4.1 12 6\"></path>",
  _tmpl$2853 = "<path d=\"m5.1 8-2.9-.8\"></path>",
  _tmpl$2854 = "<path d=\"m6 12-1.9 2\"></path>",
  _tmpl$2855 = "<path d=\"M7.2 2.2 8 5.1\"></path>",
  _tmpl$2856 = "<path d=\"M9.037 9.69a.498.498 0 0 1 .653-.653l11 4.5a.5.5 0 0 1-.074.949l-4.349 1.041a1 1 0 0 0-.74.739l-1.04 4.35a.5.5 0 0 1-.95.074z\"></path>",
  _tmpl$2857 = "<path d=\"M12.586 12.586 19 19\"></path>",
  _tmpl$2858 = "<path d=\"M3.688 3.037a.497.497 0 0 0-.651.651l6.5 15.999a.501.501 0 0 0 .947-.062l1.569-6.083a2 2 0 0 1 1.448-1.479l6.124-1.579a.5.5 0 0 0 .063-.947z\"></path>",
  _tmpl$2859 = "<rect x=\"5\" y=\"2\" width=\"14\" height=\"20\" rx=\"7\"></rect>",
  _tmpl$2860 = "<path d=\"M5 3v16h16\"></path>",
  _tmpl$2861 = "<path d=\"m5 19 6-6\"></path>",
  _tmpl$2862 = "<path d=\"m2 6 3-3 3 3\"></path>",
  _tmpl$2863 = "<path d=\"m18 16 3 3-3 3\"></path>",
  _tmpl$2864 = "<path d=\"M19 13v6h-6\"></path>",
  _tmpl$2865 = "<path d=\"M5 11V5h6\"></path>",
  _tmpl$2866 = "<path d=\"M11 19H5v-6\"></path>",
  _tmpl$2867 = "<path d=\"M13 5h6v6\"></path>",
  _tmpl$2868 = "<path d=\"M19 5 5 19\"></path>",
  _tmpl$2869 = "<path d=\"M11 19H5V13\"></path>",
  _tmpl$2870 = "<path d=\"M19 5L5 19\"></path>",
  _tmpl$2871 = "<path d=\"M19 13V19H13\"></path>",
  _tmpl$2872 = "<path d=\"M5 5L19 19\"></path>",
  _tmpl$2873 = "<path d=\"M8 18L12 22L16 18\"></path>",
  _tmpl$2874 = "<path d=\"M12 2V22\"></path>",
  _tmpl$2875 = "<path d=\"m18 8 4 4-4 4\"></path>",
  _tmpl$2876 = "<path d=\"M6 8L2 12L6 16\"></path>",
  _tmpl$2877 = "<path d=\"M2 12H22\"></path>",
  _tmpl$2878 = "<path d=\"M18 8L22 12L18 16\"></path>",
  _tmpl$2879 = "<path d=\"M5 11V5H11\"></path>",
  _tmpl$2880 = "<path d=\"M13 5H19V11\"></path>",
  _tmpl$2881 = "<path d=\"M8 6L12 2L16 6\"></path>",
  _tmpl$2882 = "<path d=\"m8 18 4 4 4-4\"></path>",
  _tmpl$2883 = "<path d=\"m15 19-3 3-3-3\"></path>",
  _tmpl$2884 = "<path d=\"m19 9 3 3-3 3\"></path>",
  _tmpl$2885 = "<path d=\"m5 9-3 3 3 3\"></path>",
  _tmpl$2886 = "<circle cx=\"8\" cy=\"18\" r=\"4\"></circle>",
  _tmpl$2887 = "<path d=\"M12 18V2l7 4\"></path>",
  _tmpl$2888 = "<circle cx=\"12\" cy=\"18\" r=\"4\"></circle>",
  _tmpl$2889 = "<path d=\"M16 18V2\"></path>",
  _tmpl$2890 = "<path d=\"M9 18V5l12-2v13\"></path>",
  _tmpl$2891 = "<path d=\"m9 9 12-2\"></path>",
  _tmpl$2892 = "<circle cx=\"18\" cy=\"16\" r=\"3\"></circle>",
  _tmpl$2893 = "<path d=\"M9.31 9.31 5 21l7-4 7 4-1.17-3.17\"></path>",
  _tmpl$2894 = "<path d=\"M14.53 8.88 12 2l-1.17 3.17\"></path>",
  _tmpl$2895 = "<polygon points=\"12 2 19 21 12 17 5 21 12 2\"></polygon>",
  _tmpl$2896 = "<path d=\"M8.43 8.43 3 11l8 2 2 8 2.57-5.43\"></path>",
  _tmpl$2897 = "<path d=\"M17.39 11.73 22 2l-9.73 4.61\"></path>",
  _tmpl$2898 = "<polygon points=\"3 11 22 2 13 21 11 13 3 11\"></polygon>",
  _tmpl$2899 = "<rect x=\"16\" y=\"16\" width=\"6\" height=\"6\" rx=\"1\"></rect>",
  _tmpl$2900 = "<rect x=\"2\" y=\"16\" width=\"6\" height=\"6\" rx=\"1\"></rect>",
  _tmpl$2901 = "<rect x=\"9\" y=\"2\" width=\"6\" height=\"6\" rx=\"1\"></rect>",
  _tmpl$2902 = "<path d=\"M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3\"></path>",
  _tmpl$2903 = "<path d=\"M12 12V8\"></path>",
  _tmpl$2904 = "<path d=\"M15 18h-5\"></path>",
  _tmpl$2905 = "<path d=\"M18 14h-8\"></path>",
  _tmpl$2906 = "<path d=\"M4 22h16a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16a2 2 0 0 1-4 0v-9a2 2 0 0 1 2-2h2\"></path>",
  _tmpl$2907 = "<rect width=\"8\" height=\"4\" x=\"10\" y=\"6\" rx=\"1\"></rect>",
  _tmpl$2908 = "<path d=\"M6 8.32a7.43 7.43 0 0 1 0 7.36\"></path>",
  _tmpl$2909 = "<path d=\"M9.46 6.21a11.76 11.76 0 0 1 0 11.58\"></path>",
  _tmpl$2910 = "<path d=\"M12.91 4.1a15.91 15.91 0 0 1 .01 15.8\"></path>",
  _tmpl$2911 = "<path d=\"M16.37 2a20.16 20.16 0 0 1 0 20\"></path>",
  _tmpl$2912 = "<path d=\"M12 2v10\"></path>",
  _tmpl$2913 = "<path d=\"m8.5 4 7 4\"></path>",
  _tmpl$2914 = "<path d=\"m8.5 8 7-4\"></path>",
  _tmpl$2915 = "<path d=\"M13.4 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-7.4\"></path>",
  _tmpl$2916 = "<path d=\"M21.378 5.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z\"></path>",
  _tmpl$2917 = "<path d=\"M15 2v20\"></path>",
  _tmpl$2918 = "<path d=\"M15 7h5\"></path>",
  _tmpl$2919 = "<path d=\"M15 12h5\"></path>",
  _tmpl$2920 = "<path d=\"M15 17h5\"></path>",
  _tmpl$2921 = "<path d=\"M9.5 8h5\"></path>",
  _tmpl$2922 = "<path d=\"M9.5 12H16\"></path>",
  _tmpl$2923 = "<path d=\"M9.5 16H14\"></path>",
  _tmpl$2924 = "<path d=\"M16 2v20\"></path>",
  _tmpl$2925 = "<path d=\"M16 4h2a2 2 0 0 1 2 2v2\"></path>",
  _tmpl$2926 = "<path d=\"M20 12v2\"></path>",
  _tmpl$2927 = "<path d=\"M20 18v2a2 2 0 0 1-2 2h-1\"></path>",
  _tmpl$2928 = "<path d=\"M13 22h-2\"></path>",
  _tmpl$2929 = "<path d=\"M7 22H6a2 2 0 0 1-2-2v-2\"></path>",
  _tmpl$2930 = "<path d=\"M4 14v-2\"></path>",
  _tmpl$2931 = "<path d=\"M4 8V6a2 2 0 0 1 2-2h2\"></path>",
  _tmpl$2932 = "<path d=\"M8 10h6\"></path>",
  _tmpl$2933 = "<path d=\"M8 18h5\"></path>",
  _tmpl$2934 = "<rect width=\"16\" height=\"18\" x=\"4\" y=\"4\" rx=\"2\"></rect>",
  _tmpl$2935 = "<path d=\"M12 4V2\"></path>",
  _tmpl$2936 = "<path d=\"M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592a7.01 7.01 0 0 0 4.125-2.939\"></path>",
  _tmpl$2937 = "<path d=\"M19 10v3.343\"></path>",
  _tmpl$2938 = "<path d=\"M12 12c-1.349-.573-1.905-1.005-2.5-2-.546.902-1.048 1.353-2.5 2-1.018-.644-1.46-1.08-2-2-1.028.71-1.69.918-3 1 1.081-1.048 1.757-2.03 2-3 .194-.776.84-1.551 1.79-2.21m11.654 5.997c.887-.457 1.28-.891 1.556-1.787 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4-.74 0-1.461.068-2.15.192\"></path>",
  _tmpl$2939 = "<path d=\"M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592A7.003 7.003 0 0 0 19 14v-4\"></path>",
  _tmpl$2940 = "<path d=\"M12 4C8 4 4.5 6 4 8c-.243.97-.919 1.952-2 3 1.31-.082 1.972-.29 3-1 .54.92.982 1.356 2 2 1.452-.647 1.954-1.098 2.5-2 .595.995 1.151 1.427 2.5 2 1.31-.621 1.862-1.058 2.5-2 .629.977 1.162 1.423 2.5 2 1.209-.548 1.68-.967 2-2 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4Z\"></path>",
  _tmpl$2941 = "<path d=\"M15.312 2a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586l-4.688-4.688A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2z\"></path>",
  _tmpl$2942 = "<path d=\"M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z\"></path>",
  _tmpl$2943 = "<path d=\"M10 15V9\"></path>",
  _tmpl$2944 = "<path d=\"M14 15V9\"></path>",
  _tmpl$2945 = "<path d=\"M3 20h4.5a.5.5 0 0 0 .5-.5v-.282a.52.52 0 0 0-.247-.437 8 8 0 1 1 8.494-.001.52.52 0 0 0-.247.438v.282a.5.5 0 0 0 .5.5H21\"></path>",
  _tmpl$2946 = "<path d=\"M3 3h6l6 18h6\"></path>",
  _tmpl$2947 = "<path d=\"M14 3h7\"></path>",
  _tmpl$2948 = "<path d=\"M20.341 6.484A10 10 0 0 1 10.266 21.85\"></path>",
  _tmpl$2949 = "<path d=\"M3.659 17.516A10 10 0 0 1 13.74 2.152\"></path>",
  _tmpl$2950 = "<circle cx=\"19\" cy=\"5\" r=\"2\"></circle>",
  _tmpl$2951 = "<path d=\"M12 12V4a1 1 0 0 1 1-1h6.297a1 1 0 0 1 .651 1.759l-4.696 4.025\"></path>",
  _tmpl$2952 = "<path d=\"m12 21-7.414-7.414A2 2 0 0 1 4 12.172V6.415a1.002 1.002 0 0 1 1.707-.707L20 20.009\"></path>",
  _tmpl$2953 = "<path d=\"m12.214 3.381 8.414 14.966a1 1 0 0 1-.167 1.199l-1.168 1.163a1 1 0 0 1-.706.291H6.351a1 1 0 0 1-.625-.219L3.25 18.8a1 1 0 0 1 .631-1.781l4.165.027\"></path>",
  _tmpl$2954 = "<path d=\"M16.76 3a2 2 0 0 1 1.8 1.1l2.23 4.479a2 2 0 0 1 .21.891V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9.472a2 2 0 0 1 .211-.894L5.45 4.1A2 2 0 0 1 7.24 3z\"></path>",
  _tmpl$2955 = "<path d=\"M3.054 9.013h17.893\"></path>",
  _tmpl$2956 = "<path d=\"m16 16 2 2 4-4\"></path>",
  _tmpl$2957 = "<path d=\"M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14\"></path>",
  _tmpl$2958 = "<path d=\"m7.5 4.27 9 5.15\"></path>",
  _tmpl$2959 = "<polyline points=\"3.29 7 12 12 20.71 7\"></polyline>",
  _tmpl$2960 = "<line x1=\"12\" x2=\"12\" y1=\"22\" y2=\"12\"></line>",
  _tmpl$2961 = "<path d=\"M16 16h6\"></path>",
  _tmpl$2962 = "<path d=\"M12 22v-9\"></path>",
  _tmpl$2963 = "<path d=\"M15.17 2.21a1.67 1.67 0 0 1 1.63 0L21 4.57a1.93 1.93 0 0 1 0 3.36L8.82 14.79a1.655 1.655 0 0 1-1.64 0L3 12.43a1.93 1.93 0 0 1 0-3.36z\"></path>",
  _tmpl$2964 = "<path d=\"M20 13v3.87a2.06 2.06 0 0 1-1.11 1.83l-6 3.08a1.93 1.93 0 0 1-1.78 0l-6-3.08A2.06 2.06 0 0 1 4 16.87V13\"></path>",
  _tmpl$2965 = "<path d=\"M21 12.43a1.93 1.93 0 0 0 0-3.36L8.83 2.2a1.64 1.64 0 0 0-1.63 0L3 4.57a1.93 1.93 0 0 0 0 3.36l12.18 6.86a1.636 1.636 0 0 0 1.63 0z\"></path>",
  _tmpl$2966 = "<path d=\"M19 13v6\"></path>",
  _tmpl$2967 = "<circle cx=\"18.5\" cy=\"15.5\" r=\"2.5\"></circle>",
  _tmpl$2968 = "<path d=\"M20.27 17.27 22 19\"></path>",
  _tmpl$2969 = "<path d=\"m17 13 5 5m-5 0 5-5\"></path>",
  _tmpl$2970 = "<path d=\"M11 21.73a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73z\"></path>",
  _tmpl$2971 = "<path d=\"m19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z\"></path>",
  _tmpl$2972 = "<path d=\"m5 2 5 5\"></path>",
  _tmpl$2973 = "<path d=\"M2 13h15\"></path>",
  _tmpl$2974 = "<path d=\"M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z\"></path>",
  _tmpl$2975 = "<rect width=\"16\" height=\"6\" x=\"2\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$2976 = "<path d=\"M10 16v-2a2 2 0 0 1 2-2h8a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2\"></path>",
  _tmpl$2977 = "<rect width=\"4\" height=\"6\" x=\"8\" y=\"16\" rx=\"1\"></rect>",
  _tmpl$2978 = "<path d=\"M14 2v4\"></path>",
  _tmpl$2979 = "<path d=\"M17 2a1 1 0 0 1 1 1v9H6V3a1 1 0 0 1 1-1z\"></path>",
  _tmpl$2980 = "<path d=\"M6 12a1 1 0 0 0-1 1v1a2 2 0 0 0 2 2h2a1 1 0 0 1 1 1v2.9a2 2 0 1 0 4 0V17a1 1 0 0 1 1-1h2a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1\"></path>",
  _tmpl$2981 = "<path d=\"m14.622 17.897-10.68-2.913\"></path>",
  _tmpl$2982 = "<path d=\"M18.376 2.622a1 1 0 1 1 3.002 3.002L17.36 9.643a.5.5 0 0 0 0 .707l.944.944a2.41 2.41 0 0 1 0 3.408l-.944.944a.5.5 0 0 1-.707 0L8.354 7.348a.5.5 0 0 1 0-.707l.944-.944a2.41 2.41 0 0 1 3.408 0l.944.944a.5.5 0 0 0 .707 0z\"></path>",
  _tmpl$2983 = "<path d=\"M9 8c-1.804 2.71-3.97 3.46-6.583 3.948a.507.507 0 0 0-.302.819l7.32 8.883a1 1 0 0 0 1.185.204C12.735 20.405 16 16.792 16 15\"></path>",
  _tmpl$2984 = "<path d=\"M12 22a1 1 0 0 1 0-20 10 9 0 0 1 10 9 5 5 0 0 1-5 5h-2.25a1.75 1.75 0 0 0-1.4 2.8l.3.4a1.75 1.75 0 0 1-1.4 2.8z\"></path>",
  _tmpl$2985 = "<circle cx=\"13.5\" cy=\"6.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$2986 = "<circle cx=\"17.5\" cy=\"10.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$2987 = "<circle cx=\"6.5\" cy=\"12.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$2988 = "<circle cx=\"8.5\" cy=\"7.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$2989 = "<path d=\"M11.25 17.25h1.5L12 18z\"></path>",
  _tmpl$2990 = "<path d=\"m15 12 2 2\"></path>",
  _tmpl$2991 = "<path d=\"M18 6.5a.5.5 0 0 0-.5-.5\"></path>",
  _tmpl$2992 = "<path d=\"M20.69 9.67a4.5 4.5 0 1 0-7.04-5.5 8.35 8.35 0 0 0-3.3 0 4.5 4.5 0 1 0-7.04 5.5C2.49 11.2 2 12.88 2 14.5 2 19.47 6.48 22 12 22s10-2.53 10-7.5c0-1.62-.48-3.3-1.3-4.83\"></path>",
  _tmpl$2993 = "<path d=\"M6 6.5a.495.495 0 0 1 .5-.5\"></path>",
  _tmpl$2994 = "<path d=\"m9 12-2 2\"></path>",
  _tmpl$2995 = "<path d=\"m15 8-3 3-3-3\"></path>",
  _tmpl$2996 = "<path d=\"M14 15h1\"></path>",
  _tmpl$2997 = "<path d=\"M19 15h2\"></path>",
  _tmpl$2998 = "<path d=\"M3 15h2\"></path>",
  _tmpl$2999 = "<path d=\"M9 15h1\"></path>",
  _tmpl$3000 = "<path d=\"m16 15-3-3 3-3\"></path>",
  _tmpl$3001 = "<path d=\"M9 14v1\"></path>",
  _tmpl$3002 = "<path d=\"M9 19v2\"></path>",
  _tmpl$3003 = "<path d=\"M9 3v2\"></path>",
  _tmpl$3004 = "<path d=\"M9 9v1\"></path>",
  _tmpl$3005 = "<path d=\"m14 9 3 3-3 3\"></path>",
  _tmpl$3006 = "<path d=\"m8 9 3 3-3 3\"></path>",
  _tmpl$3007 = "<path d=\"M15 14v1\"></path>",
  _tmpl$3008 = "<path d=\"M15 19v2\"></path>",
  _tmpl$3009 = "<path d=\"M15 3v2\"></path>",
  _tmpl$3010 = "<path d=\"M15 9v1\"></path>",
  _tmpl$3011 = "<path d=\"m9 16 3-3 3 3\"></path>",
  _tmpl$3012 = "<path d=\"M14 9h1\"></path>",
  _tmpl$3013 = "<path d=\"M19 9h2\"></path>",
  _tmpl$3014 = "<path d=\"M3 9h2\"></path>",
  _tmpl$3015 = "<path d=\"M9 9h1\"></path>",
  _tmpl$3016 = "<path d=\"m15 14-3 3-3-3\"></path>",
  _tmpl$3017 = "<path d=\"M9 15h12\"></path>",
  _tmpl$3018 = "<path d=\"M3 15h12\"></path>",
  _tmpl$3019 = "<path d=\"M9 21V9\"></path>",
  _tmpl$3020 = "<path d=\"m16 6-8.414 8.586a2 2 0 0 0 2.829 2.829l8.414-8.586a4 4 0 1 0-5.657-5.657l-8.379 8.551a6 6 0 1 0 8.485 8.485l8.379-8.551\"></path>",
  _tmpl$3021 = "<path d=\"M8 21s-4-3-4-9 4-9 4-9\"></path>",
  _tmpl$3022 = "<path d=\"M16 3s4 3 4 9-4 9-4 9\"></path>",
  _tmpl$3023 = "<path d=\"M11 15h2\"></path>",
  _tmpl$3024 = "<path d=\"M15.282 19a1 1 0 0 0 .948-.68l2.37-6.988a7 7 0 1 0-13.2 0l2.37 6.988a1 1 0 0 0 .948.68z\"></path>",
  _tmpl$3025 = "<path d=\"M9 9a3 3 0 1 1 6 0\"></path>",
  _tmpl$3026 = "<path d=\"M5.8 11.3 2 22l10.7-3.79\"></path>",
  _tmpl$3027 = "<path d=\"M4 3h.01\"></path>",
  _tmpl$3028 = "<path d=\"M22 8h.01\"></path>",
  _tmpl$3029 = "<path d=\"M15 2h.01\"></path>",
  _tmpl$3030 = "<path d=\"M22 20h.01\"></path>",
  _tmpl$3031 = "<path d=\"m22 2-2.24.75a2.9 2.9 0 0 0-1.96 3.12c.1.86-.57 1.63-1.45 1.63h-.38c-.86 0-1.6.6-1.76 1.44L14 10\"></path>",
  _tmpl$3032 = "<path d=\"m22 13-.82-.33c-.86-.34-1.82.2-1.98 1.11c-.11.7-.72 1.22-1.43 1.22H17\"></path>",
  _tmpl$3033 = "<path d=\"m11 2 .33.82c.34.86-.2 1.82-1.11 1.98C9.52 4.9 9 5.52 9 6.23V7\"></path>",
  _tmpl$3034 = "<path d=\"M11 13c1.93 1.93 2.83 4.17 2 5-.83.83-3.07-.07-5-2-1.93-1.93-2.83-4.17-2-5 .83-.83 3.07.07 5 2Z\"></path>",
  _tmpl$3035 = "<rect x=\"14\" y=\"4\" width=\"4\" height=\"16\" rx=\"1\"></rect>",
  _tmpl$3036 = "<rect x=\"6\" y=\"4\" width=\"4\" height=\"16\" rx=\"1\"></rect>",
  _tmpl$3037 = "<circle cx=\"11\" cy=\"4\" r=\"2\"></circle>",
  _tmpl$3038 = "<circle cx=\"18\" cy=\"8\" r=\"2\"></circle>",
  _tmpl$3039 = "<path d=\"M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-6.84 1.045Q6.52 17.48 4.46 16.84A3.5 3.5 0 0 1 5.5 10Z\"></path>",
  _tmpl$3040 = "<rect width=\"14\" height=\"20\" x=\"5\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$3041 = "<path d=\"M15 14h.01\"></path>",
  _tmpl$3042 = "<path d=\"M9 6h6\"></path>",
  _tmpl$3043 = "<path d=\"M12 20h9\"></path>",
  _tmpl$3044 = "<path d=\"M16.376 3.622a1 1 0 0 1 3.002 3.002L7.368 18.635a2 2 0 0 1-.855.506l-2.872.838a.5.5 0 0 1-.62-.62l.838-2.872a2 2 0 0 1 .506-.854z\"></path>",
  _tmpl$3045 = "<path d=\"m10 10-6.157 6.162a2 2 0 0 0-.5.833l-1.322 4.36a.5.5 0 0 0 .622.624l4.358-1.323a2 2 0 0 0 .83-.5L14 13.982\"></path>",
  _tmpl$3046 = "<path d=\"m12.829 7.172 4.359-4.346a1 1 0 1 1 3.986 3.986l-4.353 4.353\"></path>",
  _tmpl$3047 = "<path d=\"M15.707 21.293a1 1 0 0 1-1.414 0l-1.586-1.586a1 1 0 0 1 0-1.414l5.586-5.586a1 1 0 0 1 1.414 0l1.586 1.586a1 1 0 0 1 0 1.414z\"></path>",
  _tmpl$3048 = "<path d=\"m18 13-1.375-6.874a1 1 0 0 0-.746-.776L3.235 2.028a1 1 0 0 0-1.207 1.207L5.35 15.879a1 1 0 0 0 .776.746L13 18\"></path>",
  _tmpl$3049 = "<path d=\"m2.3 2.3 7.286 7.286\"></path>",
  _tmpl$3050 = "<circle cx=\"11\" cy=\"11\" r=\"2\"></circle>",
  _tmpl$3051 = "<path d=\"M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z\"></path>",
  _tmpl$3052 = "<path d=\"m15 5 3 3\"></path>",
  _tmpl$3053 = "<path d=\"m15 5 4 4\"></path>",
  _tmpl$3054 = "<path d=\"M13 7 8.7 2.7a2.41 2.41 0 0 0-3.4 0L2.7 5.3a2.41 2.41 0 0 0 0 3.4L7 13\"></path>",
  _tmpl$3055 = "<path d=\"m8 6 2-2\"></path>",
  _tmpl$3056 = "<path d=\"m18 16 2-2\"></path>",
  _tmpl$3057 = "<path d=\"m17 11 4.3 4.3c.94.94.94 2.46 0 3.4l-2.6 2.6c-.94.94-2.46.94-3.4 0L11 17\"></path>",
  _tmpl$3058 = "<path d=\"M10.83 2.38a2 2 0 0 1 2.34 0l8 5.74a2 2 0 0 1 .73 2.25l-3.04 9.26a2 2 0 0 1-1.9 1.37H7.04a2 2 0 0 1-1.9-1.37L2.1 10.37a2 2 0 0 1 .73-2.25z\"></path>",
  _tmpl$3059 = "<circle cx=\"6.5\" cy=\"6.5\" r=\"2.5\"></circle>",
  _tmpl$3060 = "<circle cx=\"17.5\" cy=\"17.5\" r=\"2.5\"></circle>",
  _tmpl$3061 = "<path d=\"m9 20 3-6 3 6\"></path>",
  _tmpl$3062 = "<path d=\"m6 8 6 2 6-2\"></path>",
  _tmpl$3063 = "<path d=\"M12 10v4\"></path>",
  _tmpl$3064 = "<path d=\"M20 11H4\"></path>",
  _tmpl$3065 = "<path d=\"M7 21V4a1 1 0 0 1 1-1h4a1 1 0 0 1 0 12H7\"></path>",
  _tmpl$3066 = "<path d=\"M13 2a9 9 0 0 1 9 9\"></path>",
  _tmpl$3067 = "<path d=\"M13 6a5 5 0 0 1 5 5\"></path>",
  _tmpl$3068 = "<path d=\"M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384\"></path>",
  _tmpl$3069 = "<path d=\"M14 6h8\"></path>",
  _tmpl$3070 = "<path d=\"m18 2 4 4-4 4\"></path>",
  _tmpl$3071 = "<path d=\"M16 2v6h6\"></path>",
  _tmpl$3072 = "<path d=\"m22 2-6 6\"></path>",
  _tmpl$3073 = "<path d=\"m16 2 6 6\"></path>",
  _tmpl$3074 = "<path d=\"M10.1 13.9a14 14 0 0 0 3.732 2.668 1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2 18 18 0 0 1-12.728-5.272\"></path>",
  _tmpl$3075 = "<path d=\"M4.76 13.582A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 .244.473\"></path>",
  _tmpl$3076 = "<path d=\"m16 8 6-6\"></path>",
  _tmpl$3077 = "<path d=\"M22 8V2h-6\"></path>",
  _tmpl$3078 = "<line x1=\"9\" x2=\"9\" y1=\"4\" y2=\"20\"></line>",
  _tmpl$3079 = "<path d=\"M4 7c0-1.7 1.3-3 3-3h13\"></path>",
  _tmpl$3080 = "<path d=\"M18 20c-1.7 0-3-1.3-3-3V4\"></path>",
  _tmpl$3081 = "<path d=\"M18.5 8c-1.4 0-2.6-.8-3.2-2A6.87 6.87 0 0 0 2 9v11a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-8.5C22 9.6 20.4 8 18.5 8\"></path>",
  _tmpl$3082 = "<path d=\"M6 14v4\"></path>",
  _tmpl$3083 = "<path d=\"M10 14v4\"></path>",
  _tmpl$3084 = "<path d=\"M14 14v4\"></path>",
  _tmpl$3085 = "<path d=\"M18 14v4\"></path>",
  _tmpl$3086 = "<path d=\"M14.531 12.469 6.619 20.38a1 1 0 1 1-3-3l7.912-7.912\"></path>",
  _tmpl$3087 = "<path d=\"M15.686 4.314A12.5 12.5 0 0 0 5.461 2.958 1 1 0 0 0 5.58 4.71a22 22 0 0 1 6.318 3.393\"></path>",
  _tmpl$3088 = "<path d=\"M17.7 3.7a1 1 0 0 0-1.4 0l-4.6 4.6a1 1 0 0 0 0 1.4l2.6 2.6a1 1 0 0 0 1.4 0l4.6-4.6a1 1 0 0 0 0-1.4z\"></path>",
  _tmpl$3089 = "<path d=\"M19.686 8.314a12.501 12.501 0 0 1 1.356 10.225 1 1 0 0 1-1.751-.119 22 22 0 0 0-3.393-6.319\"></path>",
  _tmpl$3090 = "<path d=\"M21 9V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10c0 1.1.9 2 2 2h4\"></path>",
  _tmpl$3091 = "<rect width=\"10\" height=\"7\" x=\"12\" y=\"13\" rx=\"2\"></rect>",
  _tmpl$3092 = "<path d=\"M2 10h6V4\"></path>",
  _tmpl$3093 = "<path d=\"m2 4 6 6\"></path>",
  _tmpl$3094 = "<path d=\"M21 10V7a2 2 0 0 0-2-2h-7\"></path>",
  _tmpl$3095 = "<path d=\"M3 14v2a2 2 0 0 0 2 2h3\"></path>",
  _tmpl$3096 = "<rect x=\"12\" y=\"14\" width=\"10\" height=\"7\" rx=\"1\"></rect>",
  _tmpl$3097 = "<path d=\"M11 17h3v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3a3.16 3.16 0 0 0 2-2h1a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1h-1a5 5 0 0 0-2-4V3a4 4 0 0 0-3.2 1.6l-.3.4H11a6 6 0 0 0-6 6v1a5 5 0 0 0 2 4v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1z\"></path>",
  _tmpl$3098 = "<path d=\"M2 8v1a2 2 0 0 0 2 2h1\"></path>",
  _tmpl$3099 = "<path d=\"M14 3v11\"></path>",
  _tmpl$3100 = "<path d=\"M14 9h-3a3 3 0 0 1 0-6h9\"></path>",
  _tmpl$3101 = "<path d=\"M18 3v11\"></path>",
  _tmpl$3102 = "<path d=\"M22 18H2l4-4\"></path>",
  _tmpl$3103 = "<path d=\"m6 22-4-4\"></path>",
  _tmpl$3104 = "<path d=\"M10 3v11\"></path>",
  _tmpl$3105 = "<path d=\"M10 9H7a1 1 0 0 1 0-6h8\"></path>",
  _tmpl$3106 = "<path d=\"m18 14 4 4H2\"></path>",
  _tmpl$3107 = "<path d=\"m22 18-4 4\"></path>",
  _tmpl$3108 = "<path d=\"M13 4v16\"></path>",
  _tmpl$3109 = "<path d=\"M19 4H9.5a4.5 4.5 0 0 0 0 9H13\"></path>",
  _tmpl$3110 = "<path d=\"M18 11h-4a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h4\"></path>",
  _tmpl$3111 = "<path d=\"M6 7v13a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V7\"></path>",
  _tmpl$3112 = "<rect width=\"16\" height=\"5\" x=\"4\" y=\"2\" rx=\"1\"></rect>",
  _tmpl$3113 = "<path d=\"m10.5 20.5 10-10a4.95 4.95 0 1 0-7-7l-10 10a4.95 4.95 0 1 0 7 7Z\"></path>",
  _tmpl$3114 = "<path d=\"m8.5 8.5 7 7\"></path>",
  _tmpl$3115 = "<path d=\"M12 17v5\"></path>",
  _tmpl$3116 = "<path d=\"M15 9.34V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H7.89\"></path>",
  _tmpl$3117 = "<path d=\"M9 9v1.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h11\"></path>",
  _tmpl$3118 = "<path d=\"M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H8a2 2 0 0 0 0 4 1 1 0 0 1 1 1z\"></path>",
  _tmpl$3119 = "<path d=\"m12 9-8.414 8.414A2 2 0 0 0 3 18.828v1.344a2 2 0 0 1-.586 1.414A2 2 0 0 1 3.828 21h1.344a2 2 0 0 0 1.414-.586L15 12\"></path>",
  _tmpl$3120 = "<path d=\"m18 9 .4.4a1 1 0 1 1-3 3l-3.8-3.8a1 1 0 1 1 3-3l.4.4 3.4-3.4a1 1 0 1 1 3 3z\"></path>",
  _tmpl$3121 = "<path d=\"m2 22 .414-.414\"></path>",
  _tmpl$3122 = "<path d=\"m12 14-1 1\"></path>",
  _tmpl$3123 = "<path d=\"m13.75 18.25-1.25 1.42\"></path>",
  _tmpl$3124 = "<path d=\"M17.775 5.654a15.68 15.68 0 0 0-12.121 12.12\"></path>",
  _tmpl$3125 = "<path d=\"M18.8 9.3a1 1 0 0 0 2.1 7.7\"></path>",
  _tmpl$3126 = "<path d=\"M21.964 20.732a1 1 0 0 1-1.232 1.232l-18-5a1 1 0 0 1-.695-1.232A19.68 19.68 0 0 1 15.732 2.037a1 1 0 0 1 1.232.695z\"></path>",
  _tmpl$3127 = "<path d=\"M3.77 10.77 2 9l2-4.5 1.1.55c.55.28.9.84.9 1.45s.35 1.17.9 1.45L8 8.5l3-6 1.05.53a2 2 0 0 1 1.09 1.52l.72 5.4a2 2 0 0 0 1.09 1.52l4.4 2.2c.42.22.78.55 1.01.96l.6 1.03c.49.88-.06 1.98-1.06 2.1l-1.18.15c-.47.06-.95-.02-1.37-.24L4.29 11.15a2 2 0 0 1-.52-.38Z\"></path>",
  _tmpl$3128 = "<path d=\"M6.36 17.4 4 17l-2-4 1.1-.55a2 2 0 0 1 1.8 0l.17.1a2 2 0 0 0 1.8 0L8 12 5 6l.9-.45a2 2 0 0 1 2.09.2l4.02 3a2 2 0 0 0 2.1.2l4.19-2.06a2.41 2.41 0 0 1 1.73-.17L21 7a1.4 1.4 0 0 1 .87 1.99l-.38.76c-.23.46-.6.84-1.07 1.08L7.58 17.2a2 2 0 0 1-1.22.18Z\"></path>",
  _tmpl$3129 = "<path d=\"M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z\"></path>",
  _tmpl$3130 = "<polygon points=\"6 3 20 12 6 21 6 3\"></polygon>",
  _tmpl$3131 = "<path d=\"M9 2v6\"></path>",
  _tmpl$3132 = "<path d=\"M15 2v6\"></path>",
  _tmpl$3133 = "<path d=\"M6 11V8h12v3a6 6 0 1 1-12 0Z\"></path>",
  _tmpl$3134 = "<path d=\"M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z\"></path>",
  _tmpl$3135 = "<path d=\"m2 22 3-3\"></path>",
  _tmpl$3136 = "<path d=\"M7.5 13.5 10 11\"></path>",
  _tmpl$3137 = "<path d=\"M10.5 16.5 13 14\"></path>",
  _tmpl$3138 = "<path d=\"m18 3-4 4h6l-4 4\"></path>",
  _tmpl$3139 = "<path d=\"M12 22v-5\"></path>",
  _tmpl$3140 = "<path d=\"M9 8V2\"></path>",
  _tmpl$3141 = "<path d=\"M15 8V2\"></path>",
  _tmpl$3142 = "<path d=\"M18 8v5a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4V8Z\"></path>",
  _tmpl$3143 = "<path d=\"M3 2v1c0 1 2 1 2 2S3 6 3 7s2 1 2 2-2 1-2 2 2 1 2 2\"></path>",
  _tmpl$3144 = "<path d=\"M20.83 8.83a4 4 0 0 0-5.66-5.66l-12 12a4 4 0 1 0 5.66 5.66Z\"></path>",
  _tmpl$3145 = "<path d=\"M18 11.66V22a4 4 0 0 0 4-4V6\"></path>",
  _tmpl$3146 = "<path d=\"M20 3a2 2 0 0 1 2 2v6a1 1 0 0 1-20 0V5a2 2 0 0 1 2-2z\"></path>",
  _tmpl$3147 = "<path d=\"m8 10 4 4 4-4\"></path>",
  _tmpl$3148 = "<path d=\"M16.85 18.58a9 9 0 1 0-9.7 0\"></path>",
  _tmpl$3149 = "<path d=\"M8 14a5 5 0 1 1 8 0\"></path>",
  _tmpl$3150 = "<circle cx=\"12\" cy=\"11\" r=\"1\"></circle>",
  _tmpl$3151 = "<path d=\"M13 17a1 1 0 1 0-2 0l.5 4.5a.5.5 0 1 0 1 0Z\"></path>",
  _tmpl$3152 = "<path d=\"M10 4.5V4a2 2 0 0 0-2.41-1.957\"></path>",
  _tmpl$3153 = "<path d=\"M13.9 8.4a2 2 0 0 0-1.26-1.295\"></path>",
  _tmpl$3154 = "<path d=\"M21.7 16.2A8 8 0 0 0 22 14v-3a2 2 0 1 0-4 0v-1a2 2 0 0 0-3.63-1.158\"></path>",
  _tmpl$3155 = "<path d=\"m7 15-1.8-1.8a2 2 0 0 0-2.79 2.86L6 19.7a7.74 7.74 0 0 0 6 2.3h2a8 8 0 0 0 5.657-2.343\"></path>",
  _tmpl$3156 = "<path d=\"M6 6v8\"></path>",
  _tmpl$3157 = "<path d=\"M22 14a8 8 0 0 1-8 8\"></path>",
  _tmpl$3158 = "<path d=\"M18 11v-1a2 2 0 0 0-2-2a2 2 0 0 0-2 2\"></path>",
  _tmpl$3159 = "<path d=\"M14 10V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1\"></path>",
  _tmpl$3160 = "<path d=\"M10 9.5V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v10\"></path>",
  _tmpl$3161 = "<path d=\"M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15\"></path>",
  _tmpl$3162 = "<path d=\"M18 8a2 2 0 0 0 0-4 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0 0 4\"></path>",
  _tmpl$3163 = "<path d=\"M10 22 9 8\"></path>",
  _tmpl$3164 = "<path d=\"m14 22 1-14\"></path>",
  _tmpl$3165 = "<path d=\"M20 8c.5 0 .9.4.8 1l-2.6 12c-.1.5-.7 1-1.2 1H7c-.6 0-1.1-.4-1.2-1L3.2 9c-.1-.6.3-1 .8-1Z\"></path>",
  _tmpl$3166 = "<path d=\"M18.6 14.4c.8-.8.8-2 0-2.8l-8.1-8.1a4.95 4.95 0 1 0-7.1 7.1l8.1 8.1c.9.7 2.1.7 2.9-.1Z\"></path>",
  _tmpl$3167 = "<path d=\"m22 22-5.5-5.5\"></path>",
  _tmpl$3168 = "<path d=\"M18 7c0-5.333-8-5.333-8 0\"></path>",
  _tmpl$3169 = "<path d=\"M10 7v14\"></path>",
  _tmpl$3170 = "<path d=\"M6 21h12\"></path>",
  _tmpl$3171 = "<path d=\"M6 13h10\"></path>",
  _tmpl$3172 = "<path d=\"M18.36 6.64A9 9 0 0 1 20.77 15\"></path>",
  _tmpl$3173 = "<path d=\"M6.16 6.16a9 9 0 1 0 12.68 12.68\"></path>",
  _tmpl$3174 = "<path d=\"M18.4 6.6a9 9 0 1 1-12.77.04\"></path>",
  _tmpl$3175 = "<path d=\"M21 3v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V3\"></path>",
  _tmpl$3176 = "<path d=\"m7 21 5-5 5 5\"></path>",
  _tmpl$3177 = "<path d=\"M13.5 22H7a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v.5\"></path>",
  _tmpl$3178 = "<path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v2\"></path>",
  _tmpl$3179 = "<path d=\"M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6\"></path>",
  _tmpl$3180 = "<path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\"></path>",
  _tmpl$3181 = "<rect x=\"6\" y=\"14\" width=\"12\" height=\"8\" rx=\"1\"></rect>",
  _tmpl$3182 = "<path d=\"M5 7 3 5\"></path>",
  _tmpl$3183 = "<path d=\"M9 6V3\"></path>",
  _tmpl$3184 = "<path d=\"m13 7 2-2\"></path>",
  _tmpl$3185 = "<circle cx=\"9\" cy=\"13\" r=\"3\"></circle>",
  _tmpl$3186 = "<path d=\"M11.83 12H20a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2.17\"></path>",
  _tmpl$3187 = "<path d=\"M16 16h2\"></path>",
  _tmpl$3188 = "<path d=\"M12 9v11\"></path>",
  _tmpl$3189 = "<path d=\"M2 9h13a2 2 0 0 1 2 2v9\"></path>",
  _tmpl$3190 = "<path d=\"M15.39 4.39a1 1 0 0 0 1.68-.474 2.5 2.5 0 1 1 3.014 3.015 1 1 0 0 0-.474 1.68l1.683 1.682a2.414 2.414 0 0 1 0 3.414L19.61 15.39a1 1 0 0 1-1.68-.474 2.5 2.5 0 1 0-3.014 3.015 1 1 0 0 1 .474 1.68l-1.683 1.682a2.414 2.414 0 0 1-3.414 0L8.61 19.61a1 1 0 0 0-1.68.474 2.5 2.5 0 1 1-3.014-3.015 1 1 0 0 0 .474-1.68l-1.683-1.682a2.414 2.414 0 0 1 0-3.414L4.39 8.61a1 1 0 0 1 1.68.474 2.5 2.5 0 1 0 3.014-3.015 1 1 0 0 1-.474-1.68l1.683-1.682a2.414 2.414 0 0 1 3.414 0z\"></path>",
  _tmpl$3191 = "<path d=\"M2.5 16.88a1 1 0 0 1-.32-1.43l9-13.02a1 1 0 0 1 1.64 0l9 13.01a1 1 0 0 1-.32 1.44l-8.51 4.86a2 2 0 0 1-1.98 0Z\"></path>",
  _tmpl$3192 = "<rect width=\"5\" height=\"5\" x=\"3\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$3193 = "<rect width=\"5\" height=\"5\" x=\"16\" y=\"3\" rx=\"1\"></rect>",
  _tmpl$3194 = "<rect width=\"5\" height=\"5\" x=\"3\" y=\"16\" rx=\"1\"></rect>",
  _tmpl$3195 = "<path d=\"M21 16h-3a2 2 0 0 0-2 2v3\"></path>",
  _tmpl$3196 = "<path d=\"M21 21v.01\"></path>",
  _tmpl$3197 = "<path d=\"M12 7v3a2 2 0 0 1-2 2H7\"></path>",
  _tmpl$3198 = "<path d=\"M12 3h.01\"></path>",
  _tmpl$3199 = "<path d=\"M12 16v.01\"></path>",
  _tmpl$3200 = "<path d=\"M16 12h1\"></path>",
  _tmpl$3201 = "<path d=\"M21 12v.01\"></path>",
  _tmpl$3202 = "<path d=\"M12 21v-1\"></path>",
  _tmpl$3203 = "<path d=\"M16 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z\"></path>",
  _tmpl$3204 = "<path d=\"M5 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z\"></path>",
  _tmpl$3205 = "<path d=\"M13 16a3 3 0 0 1 2.24 5\"></path>",
  _tmpl$3206 = "<path d=\"M18 21h-8a4 4 0 0 1-4-4 7 7 0 0 1 7-7h.2L9.6 6.4a1 1 0 1 1 2.8-2.8L15.8 7h.2c3.3 0 6 2.7 6 6v1a2 2 0 0 1-2 2h-1a3 3 0 0 0-3 3\"></path>",
  _tmpl$3207 = "<path d=\"M20 8.54V4a2 2 0 1 0-4 0v3\"></path>",
  _tmpl$3208 = "<path d=\"M7.612 12.524a3 3 0 1 0-1.6 4.3\"></path>",
  _tmpl$3209 = "<path d=\"M19.07 4.93A10 10 0 0 0 6.99 3.34\"></path>",
  _tmpl$3210 = "<path d=\"M4 6h.01\"></path>",
  _tmpl$3211 = "<path d=\"M2.29 9.62A10 10 0 1 0 21.31 8.35\"></path>",
  _tmpl$3212 = "<path d=\"M16.24 7.76A6 6 0 1 0 8.23 16.67\"></path>",
  _tmpl$3213 = "<path d=\"M17.99 11.66A6 6 0 0 1 15.77 16.67\"></path>",
  _tmpl$3214 = "<path d=\"m13.41 10.59 5.66-5.66\"></path>",
  _tmpl$3215 = "<path d=\"M14 15.4641a4 4 0 0 1-4 0L7.52786 19.74597 A 1 1 0 0 0 7.99303 21.16211 10 10 0 0 0 16.00697 21.16211 1 1 0 0 0 16.47214 19.74597z\"></path>",
  _tmpl$3216 = "<path d=\"M16 12a4 4 0 0 0-2-3.464l2.472-4.282a1 1 0 0 1 1.46-.305 10 10 0 0 1 4.006 6.94A1 1 0 0 1 21 12z\"></path>",
  _tmpl$3217 = "<path d=\"M8 12a4 4 0 0 1 2-3.464L7.528 4.254a1 1 0 0 0-1.46-.305 10 10 0 0 0-4.006 6.94A1 1 0 0 0 3 12z\"></path>",
  _tmpl$3218 = "<path d=\"M3 12h3.28a1 1 0 0 1 .948.684l2.298 7.934a.5.5 0 0 0 .96-.044L13.82 4.771A1 1 0 0 1 14.792 4H21\"></path>",
  _tmpl$3219 = "<path d=\"M5 16v2\"></path>",
  _tmpl$3220 = "<path d=\"M19 16v2\"></path>",
  _tmpl$3221 = "<rect width=\"20\" height=\"8\" x=\"2\" y=\"8\" rx=\"2\"></rect>",
  _tmpl$3222 = "<path d=\"M4.9 16.1C1 12.2 1 5.8 4.9 1.9\"></path>",
  _tmpl$3223 = "<path d=\"M7.8 4.7a6.14 6.14 0 0 0-.8 7.5\"></path>",
  _tmpl$3224 = "<circle cx=\"12\" cy=\"9\" r=\"2\"></circle>",
  _tmpl$3225 = "<path d=\"M16.2 4.8c2 2 2.26 5.11.8 7.47\"></path>",
  _tmpl$3226 = "<path d=\"M19.1 1.9a9.96 9.96 0 0 1 0 14.1\"></path>",
  _tmpl$3227 = "<path d=\"M9.5 18h5\"></path>",
  _tmpl$3228 = "<path d=\"m8 22 4-11 4 11\"></path>",
  _tmpl$3229 = "<path d=\"M16.247 7.761a6 6 0 0 1 0 8.478\"></path>",
  _tmpl$3230 = "<path d=\"M19.075 4.933a10 10 0 0 1 0 14.134\"></path>",
  _tmpl$3231 = "<path d=\"M4.925 19.067a10 10 0 0 1 0-14.134\"></path>",
  _tmpl$3232 = "<path d=\"M7.753 16.239a6 6 0 0 1 0-8.478\"></path>",
  _tmpl$3233 = "<path d=\"M20.34 17.52a10 10 0 1 0-2.82 2.82\"></path>",
  _tmpl$3234 = "<path d=\"m13.41 13.41 4.18 4.18\"></path>",
  _tmpl$3235 = "<path d=\"M5 9h14\"></path>",
  _tmpl$3236 = "<path d=\"m14 20-5-5 6-6-5-5\"></path>",
  _tmpl$3237 = "<path d=\"M22 17a10 10 0 0 0-20 0\"></path>",
  _tmpl$3238 = "<path d=\"M6 17a6 6 0 0 1 12 0\"></path>",
  _tmpl$3239 = "<path d=\"M10 17a2 2 0 0 1 4 0\"></path>",
  _tmpl$3240 = "<path d=\"M13 22H4a2 2 0 0 1 0-4h12\"></path>",
  _tmpl$3241 = "<path d=\"M13.236 18a3 3 0 0 0-2.2-5\"></path>",
  _tmpl$3242 = "<path d=\"M16 9h.01\"></path>",
  _tmpl$3243 = "<path d=\"M16.82 3.94a3 3 0 1 1 3.237 4.868l1.815 2.587a1.5 1.5 0 0 1-1.5 2.1l-2.872-.453a3 3 0 0 0-3.5 3\"></path>",
  _tmpl$3244 = "<path d=\"M17 4.988a3 3 0 1 0-5.2 2.052A7 7 0 0 0 4 14.015 4 4 0 0 0 8 18\"></path>",
  _tmpl$3245 = "<rect width=\"12\" height=\"20\" x=\"6\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$3246 = "<path d=\"M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z\"></path>",
  _tmpl$3247 = "<path d=\"M12 6.5v11\"></path>",
  _tmpl$3248 = "<path d=\"M8 12h5\"></path>",
  _tmpl$3249 = "<path d=\"M16 9.5a4 4 0 1 0 0 5.2\"></path>",
  _tmpl$3250 = "<path d=\"M12 17.5 8 15h1a4 4 0 0 0 0-8\"></path>",
  _tmpl$3251 = "<path d=\"m12 10 3-3\"></path>",
  _tmpl$3252 = "<path d=\"m9 7 3 3v7.5\"></path>",
  _tmpl$3253 = "<path d=\"M9 11h6\"></path>",
  _tmpl$3254 = "<path d=\"M8 13h5\"></path>",
  _tmpl$3255 = "<path d=\"M10 17V9.5a2.5 2.5 0 0 1 5 0\"></path>",
  _tmpl$3256 = "<path d=\"M8 17h7\"></path>",
  _tmpl$3257 = "<path d=\"M8 15h5\"></path>",
  _tmpl$3258 = "<path d=\"M8 11h5a2 2 0 1 0 0-4h-3v10\"></path>",
  _tmpl$3259 = "<path d=\"M10 17V7h5\"></path>",
  _tmpl$3260 = "<path d=\"M10 11h4\"></path>",
  _tmpl$3261 = "<path d=\"M14 8H8\"></path>",
  _tmpl$3262 = "<path d=\"M13 16H8\"></path>",
  _tmpl$3263 = "<path d=\"M12 17.5v-11\"></path>",
  _tmpl$3264 = "<path d=\"M14 4v16H3a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1z\"></path>",
  _tmpl$3265 = "<circle cx=\"14\" cy=\"12\" r=\"8\"></circle>",
  _tmpl$3266 = "<path d=\"M20 6a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-4a2 2 0 0 1-1.6-.8l-1.6-2.13a1 1 0 0 0-1.6 0L9.6 17.2A2 2 0 0 1 8 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2z\"></path>",
  _tmpl$3267 = "<path d=\"M7 19H4.815a1.83 1.83 0 0 1-1.57-.881 1.785 1.785 0 0 1-.004-1.784L7.196 9.5\"></path>",
  _tmpl$3268 = "<path d=\"M11 19h8.203a1.83 1.83 0 0 0 1.556-.89 1.784 1.784 0 0 0 0-1.775l-1.226-2.12\"></path>",
  _tmpl$3269 = "<path d=\"m14 16-3 3 3 3\"></path>",
  _tmpl$3270 = "<path d=\"M8.293 13.596 7.196 9.5 3.1 10.598\"></path>",
  _tmpl$3271 = "<path d=\"m9.344 5.811 1.093-1.892A1.83 1.83 0 0 1 11.985 3a1.784 1.784 0 0 1 1.546.888l3.943 6.843\"></path>",
  _tmpl$3272 = "<path d=\"m13.378 9.633 4.096 1.098 1.097-4.096\"></path>",
  _tmpl$3273 = "<path d=\"M20 9H9.5A5.5 5.5 0 0 0 4 14.5A5.5 5.5 0 0 0 9.5 20H13\"></path>",
  _tmpl$3274 = "<circle cx=\"12\" cy=\"17\" r=\"1\"></circle>",
  _tmpl$3275 = "<path d=\"M21 7v6h-6\"></path>",
  _tmpl$3276 = "<path d=\"M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7\"></path>",
  _tmpl$3277 = "<path d=\"M3 2v6h6\"></path>",
  _tmpl$3278 = "<path d=\"M21 12A9 9 0 0 0 6 5.3L3 8\"></path>",
  _tmpl$3279 = "<path d=\"M21 22v-6h-6\"></path>",
  _tmpl$3280 = "<path d=\"M3 12a9 9 0 0 0 15 6.7l3-2.7\"></path>",
  _tmpl$3281 = "<path d=\"M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\"></path>",
  _tmpl$3282 = "<path d=\"M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16\"></path>",
  _tmpl$3283 = "<path d=\"M16 16h5v5\"></path>",
  _tmpl$3284 = "<path d=\"M21 8L18.74 5.74A9.75 9.75 0 0 0 12 3C11 3 10.03 3.16 9.13 3.47\"></path>",
  _tmpl$3285 = "<path d=\"M8 16H3v5\"></path>",
  _tmpl$3286 = "<path d=\"M3 12C3 9.51 4 7.26 5.64 5.64\"></path>",
  _tmpl$3287 = "<path d=\"m3 16 2.26 2.26A9.75 9.75 0 0 0 12 21c2.49 0 4.74-1 6.36-2.64\"></path>",
  _tmpl$3288 = "<path d=\"M21 12c0 1-.16 1.97-.47 2.87\"></path>",
  _tmpl$3289 = "<path d=\"M21 3v5h-5\"></path>",
  _tmpl$3290 = "<path d=\"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\"></path>",
  _tmpl$3291 = "<path d=\"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\"></path>",
  _tmpl$3292 = "<path d=\"M5 6a4 4 0 0 1 4-4h6a4 4 0 0 1 4 4v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6Z\"></path>",
  _tmpl$3293 = "<path d=\"M15 7v6\"></path>",
  _tmpl$3294 = "<path d=\"M17 3v10\"></path>",
  _tmpl$3295 = "<path d=\"m12.67 5.5 8.66 5\"></path>",
  _tmpl$3296 = "<path d=\"m12.67 10.5 8.66-5\"></path>",
  _tmpl$3297 = "<path d=\"M9 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2z\"></path>",
  _tmpl$3298 = "<path d=\"M4 7V4h16v3\"></path>",
  _tmpl$3299 = "<path d=\"M5 20h6\"></path>",
  _tmpl$3300 = "<path d=\"M13 4 8 20\"></path>",
  _tmpl$3301 = "<path d=\"m15 15 5 5\"></path>",
  _tmpl$3302 = "<path d=\"m20 15-5 5\"></path>",
  _tmpl$3303 = "<path d=\"m17 2 4 4-4 4\"></path>",
  _tmpl$3304 = "<path d=\"M3 11v-1a4 4 0 0 1 4-4h14\"></path>",
  _tmpl$3305 = "<path d=\"m7 22-4-4 4-4\"></path>",
  _tmpl$3306 = "<path d=\"M21 13v1a4 4 0 0 1-4 4H3\"></path>",
  _tmpl$3307 = "<path d=\"M11 10h1v4\"></path>",
  _tmpl$3308 = "<path d=\"m2 9 3-3 3 3\"></path>",
  _tmpl$3309 = "<path d=\"M13 18H7a2 2 0 0 1-2-2V6\"></path>",
  _tmpl$3310 = "<path d=\"m22 15-3 3-3-3\"></path>",
  _tmpl$3311 = "<path d=\"M11 6h6a2 2 0 0 1 2 2v10\"></path>",
  _tmpl$3312 = "<path d=\"M14 14a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2\"></path>",
  _tmpl$3313 = "<path d=\"M14 4a2 2 0 0 1 2-2\"></path>",
  _tmpl$3314 = "<path d=\"M16 10a2 2 0 0 1-2-2\"></path>",
  _tmpl$3315 = "<path d=\"M20 14a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2\"></path>",
  _tmpl$3316 = "<path d=\"M20 2a2 2 0 0 1 2 2\"></path>",
  _tmpl$3317 = "<path d=\"M22 8a2 2 0 0 1-2 2\"></path>",
  _tmpl$3318 = "<path d=\"m3 7 3 3 3-3\"></path>",
  _tmpl$3319 = "<path d=\"M6 10V5a 3 3 0 0 1 3-3h1\"></path>",
  _tmpl$3320 = "<rect x=\"2\" y=\"14\" width=\"8\" height=\"8\" rx=\"2\"></rect>",
  _tmpl$3321 = "<path d=\"M6 10V5a3 3 0 0 1 3-3h1\"></path>",
  _tmpl$3322 = "<path d=\"m12 17-5-5 5-5\"></path>",
  _tmpl$3323 = "<path d=\"M22 18v-2a4 4 0 0 0-4-4H7\"></path>",
  _tmpl$3324 = "<path d=\"m7 17-5-5 5-5\"></path>",
  _tmpl$3325 = "<path d=\"M20 18v-2a4 4 0 0 0-4-4H4\"></path>",
  _tmpl$3326 = "<path d=\"m9 17-5-5 5-5\"></path>",
  _tmpl$3327 = "<polygon points=\"11 19 2 12 11 5 11 19\"></polygon>",
  _tmpl$3328 = "<polygon points=\"22 19 13 12 22 5 22 19\"></polygon>",
  _tmpl$3329 = "<path d=\"M12 11.22C11 9.997 10 9 10 8a2 2 0 0 1 4 0c0 1-.998 2.002-2.01 3.22\"></path>",
  _tmpl$3330 = "<path d=\"m12 18 2.57-3.5\"></path>",
  _tmpl$3331 = "<path d=\"M6.243 9.016a7 7 0 0 1 11.507-.009\"></path>",
  _tmpl$3332 = "<path d=\"M9.35 14.53 12 11.22\"></path>",
  _tmpl$3333 = "<path d=\"M9.35 14.53C7.728 12.246 6 10.221 6 7a6 5 0 0 1 12 0c-.005 3.22-1.778 5.235-3.43 7.5l3.557 4.527a1 1 0 0 1-.203 1.43l-1.894 1.36a1 1 0 0 1-1.384-.215L12 18l-2.679 3.593a1 1 0 0 1-1.39.213l-1.865-1.353a1 1 0 0 1-.203-1.422z\"></path>",
  _tmpl$3334 = "<path d=\"M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z\"></path>",
  _tmpl$3335 = "<path d=\"m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z\"></path>",
  _tmpl$3336 = "<path d=\"M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0\"></path>",
  _tmpl$3337 = "<path d=\"M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5\"></path>",
  _tmpl$3338 = "<polyline points=\"3.5 2 6.5 12.5 18 12.5\"></polyline>",
  _tmpl$3339 = "<line x1=\"9.5\" x2=\"5.5\" y1=\"12.5\" y2=\"20\"></line>",
  _tmpl$3340 = "<line x1=\"15\" x2=\"18.5\" y1=\"12.5\" y2=\"20\"></line>",
  _tmpl$3341 = "<path d=\"M2.75 18a13 13 0 0 0 18.5 0\"></path>",
  _tmpl$3342 = "<path d=\"M6 19V5\"></path>",
  _tmpl$3343 = "<path d=\"M10 19V6.8\"></path>",
  _tmpl$3344 = "<path d=\"M14 19v-7.8\"></path>",
  _tmpl$3345 = "<path d=\"M18 5v4\"></path>",
  _tmpl$3346 = "<path d=\"M18 19v-6\"></path>",
  _tmpl$3347 = "<path d=\"M22 19V9\"></path>",
  _tmpl$3348 = "<path d=\"M2 19V9a4 4 0 0 1 4-4c2 0 4 1.33 6 4s4 4 6 4a4 4 0 1 0-3-6.65\"></path>",
  _tmpl$3349 = "<path d=\"M16.466 7.5C15.643 4.237 13.952 2 12 2 9.239 2 7 6.477 7 12s2.239 10 5 10c.342 0 .677-.069 1-.2\"></path>",
  _tmpl$3350 = "<path d=\"m15.194 13.707 3.814 1.86-1.86 3.814\"></path>",
  _tmpl$3351 = "<path d=\"M19 15.57c-1.804.885-4.274 1.43-7 1.43-5.523 0-10-2.239-10-5s4.477-5 10-5c4.838 0 8.873 1.718 9.8 4\"></path>",
  _tmpl$3352 = "<path d=\"m14.5 9.5 1 1\"></path>",
  _tmpl$3353 = "<path d=\"m15.5 8.5-4 4\"></path>",
  _tmpl$3354 = "<path d=\"M3 12a9 9 0 1 0 9-9 9.74 9.74 0 0 0-6.74 2.74L3 8\"></path>",
  _tmpl$3355 = "<circle cx=\"10\" cy=\"14\" r=\"2\"></circle>",
  _tmpl$3356 = "<path d=\"M20 9V7a2 2 0 0 0-2-2h-6\"></path>",
  _tmpl$3357 = "<path d=\"m15 2-3 3 3 3\"></path>",
  _tmpl$3358 = "<path d=\"M20 13v5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2\"></path>",
  _tmpl$3359 = "<path d=\"M12 5H6a2 2 0 0 0-2 2v3\"></path>",
  _tmpl$3360 = "<path d=\"m9 8 3-3-3-3\"></path>",
  _tmpl$3361 = "<path d=\"M4 14v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2\"></path>",
  _tmpl$3362 = "<path d=\"M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8\"></path>",
  _tmpl$3363 = "<circle cx=\"6\" cy=\"19\" r=\"3\"></circle>",
  _tmpl$3364 = "<path d=\"M9 19h8.5c.4 0 .9-.1 1.3-.2\"></path>",
  _tmpl$3365 = "<path d=\"M5.2 5.2A3.5 3.53 0 0 0 6.5 12H12\"></path>",
  _tmpl$3366 = "<path d=\"M21 15.3a3.5 3.5 0 0 0-3.3-3.3\"></path>",
  _tmpl$3367 = "<path d=\"M15 5h-4.3\"></path>",
  _tmpl$3368 = "<circle cx=\"18\" cy=\"5\" r=\"3\"></circle>",
  _tmpl$3369 = "<path d=\"M9 19h8.5a3.5 3.5 0 0 0 0-7h-11a3.5 3.5 0 0 1 0-7H15\"></path>",
  _tmpl$3370 = "<path d=\"M6.01 18H6\"></path>",
  _tmpl$3371 = "<path d=\"M10.01 18H10\"></path>",
  _tmpl$3372 = "<path d=\"M15 10v4\"></path>",
  _tmpl$3373 = "<path d=\"M17.84 7.17a4 4 0 0 0-5.66 0\"></path>",
  _tmpl$3374 = "<path d=\"M20.66 4.34a8 8 0 0 0-11.31 0\"></path>",
  _tmpl$3375 = "<path d=\"M21 9H3\"></path>",
  _tmpl$3376 = "<path d=\"M21 15H3\"></path>",
  _tmpl$3377 = "<path d=\"M21 7.5H3\"></path>",
  _tmpl$3378 = "<path d=\"M21 12H3\"></path>",
  _tmpl$3379 = "<path d=\"M21 16.5H3\"></path>",
  _tmpl$3380 = "<path d=\"M4 11a9 9 0 0 1 9 9\"></path>",
  _tmpl$3381 = "<path d=\"M4 4a16 16 0 0 1 16 16\"></path>",
  _tmpl$3382 = "<path d=\"M12 15v-3.014\"></path>",
  _tmpl$3383 = "<path d=\"M16 15v-3.014\"></path>",
  _tmpl$3384 = "<path d=\"M20 6H4\"></path>",
  _tmpl$3385 = "<path d=\"M20 8V4\"></path>",
  _tmpl$3386 = "<path d=\"M4 8V4\"></path>",
  _tmpl$3387 = "<path d=\"M8 15v-3.014\"></path>",
  _tmpl$3388 = "<rect x=\"3\" y=\"12\" width=\"18\" height=\"7\" rx=\"1\"></rect>",
  _tmpl$3389 = "<path d=\"M21.3 15.3a2.4 2.4 0 0 1 0 3.4l-2.6 2.6a2.4 2.4 0 0 1-3.4 0L2.7 8.7a2.41 2.41 0 0 1 0-3.4l2.6-2.6a2.41 2.41 0 0 1 3.4 0Z\"></path>",
  _tmpl$3390 = "<path d=\"m14.5 12.5 2-2\"></path>",
  _tmpl$3391 = "<path d=\"m11.5 9.5 2-2\"></path>",
  _tmpl$3392 = "<path d=\"m8.5 6.5 2-2\"></path>",
  _tmpl$3393 = "<path d=\"m17.5 15.5 2-2\"></path>",
  _tmpl$3394 = "<path d=\"M6 11h8a4 4 0 0 0 0-8H9v18\"></path>",
  _tmpl$3395 = "<path d=\"M6 15h8\"></path>",
  _tmpl$3396 = "<path d=\"M22 18H2a4 4 0 0 0 4 4h12a4 4 0 0 0 4-4Z\"></path>",
  _tmpl$3397 = "<path d=\"M21 14 10 2 3 14h18Z\"></path>",
  _tmpl$3398 = "<path d=\"M10 2v16\"></path>",
  _tmpl$3399 = "<path d=\"M7 21h10\"></path>",
  _tmpl$3400 = "<path d=\"M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z\"></path>",
  _tmpl$3401 = "<path d=\"M11.38 12a2.4 2.4 0 0 1-.4-4.77 2.4 2.4 0 0 1 3.2-2.77 2.4 2.4 0 0 1 3.47-.63 2.4 2.4 0 0 1 3.37 3.37 2.4 2.4 0 0 1-1.1 3.7 2.51 2.51 0 0 1 .03 1.1\"></path>",
  _tmpl$3402 = "<path d=\"m13 12 4-4\"></path>",
  _tmpl$3403 = "<path d=\"M10.9 7.25A3.99 3.99 0 0 0 4 10c0 .73.2 1.41.54 2\"></path>",
  _tmpl$3404 = "<path d=\"m2.37 11.223 8.372-6.777a2 2 0 0 1 2.516 0l8.371 6.777\"></path>",
  _tmpl$3405 = "<path d=\"M21 15a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-5.25\"></path>",
  _tmpl$3406 = "<path d=\"M3 15a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h9\"></path>",
  _tmpl$3407 = "<path d=\"m6.67 15 6.13 4.6a2 2 0 0 0 2.8-.4l3.15-4.2\"></path>",
  _tmpl$3408 = "<rect width=\"20\" height=\"4\" x=\"2\" y=\"11\" rx=\"1\"></rect>",
  _tmpl$3409 = "<path d=\"M4 10a7.31 7.31 0 0 0 10 10Z\"></path>",
  _tmpl$3410 = "<path d=\"m9 15 3-3\"></path>",
  _tmpl$3411 = "<path d=\"M17 13a6 6 0 0 0-6-6\"></path>",
  _tmpl$3412 = "<path d=\"M21 13A10 10 0 0 0 11 3\"></path>",
  _tmpl$3413 = "<path d=\"m13.5 6.5-3.148-3.148a1.205 1.205 0 0 0-1.704 0L6.352 5.648a1.205 1.205 0 0 0 0 1.704L9.5 10.5\"></path>",
  _tmpl$3414 = "<path d=\"M16.5 7.5 19 5\"></path>",
  _tmpl$3415 = "<path d=\"m17.5 10.5 3.148 3.148a1.205 1.205 0 0 1 0 1.704l-2.296 2.296a1.205 1.205 0 0 1-1.704 0L13.5 14.5\"></path>",
  _tmpl$3416 = "<path d=\"M9 21a6 6 0 0 0-6-6\"></path>",
  _tmpl$3417 = "<path d=\"M9.352 10.648a1.205 1.205 0 0 0 0 1.704l2.296 2.296a1.205 1.205 0 0 0 1.704 0l4.296-4.296a1.205 1.205 0 0 0 0-1.704l-2.296-2.296a1.205 1.205 0 0 0-1.704 0z\"></path>",
  _tmpl$3418 = "<path d=\"m20 19.5-5.5 1.2\"></path>",
  _tmpl$3419 = "<path d=\"M14.5 4v11.22a1 1 0 0 0 1.242.97L20 15.2\"></path>",
  _tmpl$3420 = "<path d=\"m2.978 19.351 5.549-1.363A2 2 0 0 0 10 16V2\"></path>",
  _tmpl$3421 = "<path d=\"M20 10 4 13.5\"></path>",
  _tmpl$3422 = "<path d=\"M10 2v3a1 1 0 0 0 1 1h5\"></path>",
  _tmpl$3423 = "<path d=\"M18 18v-6a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v6\"></path>",
  _tmpl$3424 = "<path d=\"M8 18a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9.172a2 2 0 0 1 1.414.586l2.828 2.828A2 2 0 0 1 22 6.828V16a2 2 0 0 1-2.01 2z\"></path>",
  _tmpl$3425 = "<path d=\"M13 13H8a1 1 0 0 0-1 1v7\"></path>",
  _tmpl$3426 = "<path d=\"M14 8h1\"></path>",
  _tmpl$3427 = "<path d=\"M17 21v-4\"></path>",
  _tmpl$3428 = "<path d=\"M20.41 20.41A2 2 0 0 1 19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 .59-1.41\"></path>",
  _tmpl$3429 = "<path d=\"M29.5 11.5s5 5 4 5\"></path>",
  _tmpl$3430 = "<path d=\"M9 3h6.2a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V15\"></path>",
  _tmpl$3431 = "<path d=\"M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z\"></path>",
  _tmpl$3432 = "<path d=\"M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7\"></path>",
  _tmpl$3433 = "<path d=\"M7 3v4a1 1 0 0 0 1 1h7\"></path>",
  _tmpl$3434 = "<path d=\"M5 7v11a1 1 0 0 0 1 1h11\"></path>",
  _tmpl$3435 = "<path d=\"M5.293 18.707 11 13\"></path>",
  _tmpl$3436 = "<path d=\"m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z\"></path>",
  _tmpl$3437 = "<path d=\"m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z\"></path>",
  _tmpl$3438 = "<path d=\"M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2\"></path>",
  _tmpl$3439 = "<path d=\"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>",
  _tmpl$3440 = "<path d=\"M14 15H9v-5\"></path>",
  _tmpl$3441 = "<path d=\"M21 3 9 15\"></path>",
  _tmpl$3442 = "<path d=\"M8 7v10\"></path>",
  _tmpl$3443 = "<path d=\"M17 7v10\"></path>",
  _tmpl$3444 = "<path d=\"M18.944 12.33a1 1 0 0 0 0-.66 7.5 7.5 0 0 0-13.888 0 1 1 0 0 0 0 .66 7.5 7.5 0 0 0 13.888 0\"></path>",
  _tmpl$3445 = "<path d=\"M8 14s1.5 2 4 2 4-2 4-2\"></path>",
  _tmpl$3446 = "<path d=\"M11.246 16.657a1 1 0 0 0 1.508 0l3.57-4.101A2.75 2.75 0 1 0 12 9.168a2.75 2.75 0 1 0-4.324 3.388z\"></path>",
  _tmpl$3447 = "<path d=\"M17 12v4a1 1 0 0 1-1 1h-4\"></path>",
  _tmpl$3448 = "<path d=\"M17 8V7\"></path>",
  _tmpl$3449 = "<rect x=\"7\" y=\"7\" width=\"5\" height=\"5\" rx=\"1\"></rect>",
  _tmpl$3450 = "<path d=\"m16 16-1.9-1.9\"></path>",
  _tmpl$3451 = "<path d=\"M7 8h8\"></path>",
  _tmpl$3452 = "<path d=\"M7 16h6\"></path>",
  _tmpl$3453 = "<path d=\"M14 22v-4a2 2 0 1 0-4 0v4\"></path>",
  _tmpl$3454 = "<path d=\"m18 10 3.447 1.724a1 1 0 0 1 .553.894V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-7.382a1 1 0 0 1 .553-.894L6 10\"></path>",
  _tmpl$3455 = "<path d=\"M18 5v17\"></path>",
  _tmpl$3456 = "<path d=\"m4 6 7.106-3.553a2 2 0 0 1 1.788 0L20 6\"></path>",
  _tmpl$3457 = "<path d=\"M6 5v17\"></path>",
  _tmpl$3458 = "<path d=\"M5.42 9.42 8 12\"></path>",
  _tmpl$3459 = "<circle cx=\"4\" cy=\"8\" r=\"2\"></circle>",
  _tmpl$3460 = "<path d=\"m14 6-8.58 8.58\"></path>",
  _tmpl$3461 = "<path d=\"M10.8 14.8 14 18\"></path>",
  _tmpl$3462 = "<path d=\"M8.12 8.12 12 12\"></path>",
  _tmpl$3463 = "<path d=\"M20 4 8.12 15.88\"></path>",
  _tmpl$3464 = "<path d=\"M14.8 14.8 20 20\"></path>",
  _tmpl$3465 = "<path d=\"M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3\"></path>",
  _tmpl$3466 = "<path d=\"m22 3-5 5\"></path>",
  _tmpl$3467 = "<path d=\"m17 3 5 5\"></path>",
  _tmpl$3468 = "<path d=\"m17 8 5-5\"></path>",
  _tmpl$3469 = "<path d=\"M17 3h5v5\"></path>",
  _tmpl$3470 = "<path d=\"M15 12h-5\"></path>",
  _tmpl$3471 = "<path d=\"M15 8h-5\"></path>",
  _tmpl$3472 = "<path d=\"M19 17V5a2 2 0 0 0-2-2H4\"></path>",
  _tmpl$3473 = "<path d=\"M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3\"></path>",
  _tmpl$3474 = "<path d=\"m8 11 2 2 4-4\"></path>",
  _tmpl$3475 = "<path d=\"m13 13.5 2-2.5-2-2.5\"></path>",
  _tmpl$3476 = "<path d=\"M9 8.5 7 11l2 2.5\"></path>",
  _tmpl$3477 = "<path d=\"m13.5 8.5-5 5\"></path>",
  _tmpl$3478 = "<path d=\"m8.5 8.5 5 5\"></path>",
  _tmpl$3479 = "<path d=\"m21 21-4.34-4.34\"></path>",
  _tmpl$3480 = "<path d=\"M16 5a4 3 0 0 0-8 0c0 4 8 3 8 7a4 3 0 0 1-8 0\"></path>",
  _tmpl$3481 = "<path d=\"M8 19a4 3 0 0 0 8 0c0-4-8-3-8-7a4 3 0 0 1 8 0\"></path>",
  _tmpl$3482 = "<path d=\"M3.714 3.048a.498.498 0 0 0-.683.627l2.843 7.627a2 2 0 0 1 0 1.396l-2.842 7.627a.498.498 0 0 0 .682.627l18-8.5a.5.5 0 0 0 0-.904z\"></path>",
  _tmpl$3483 = "<path d=\"M6 12h16\"></path>",
  _tmpl$3484 = "<path d=\"M7 14v1a2 2 0 0 0 2 2h1\"></path>",
  _tmpl$3485 = "<path d=\"M14 7h1a2 2 0 0 1 2 2v1\"></path>",
  _tmpl$3486 = "<path d=\"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z\"></path>",
  _tmpl$3487 = "<path d=\"m21.854 2.147-10.94 10.939\"></path>",
  _tmpl$3488 = "<path d=\"m16 16-4 4-4-4\"></path>",
  _tmpl$3489 = "<path d=\"m8 8 4-4 4 4\"></path>",
  _tmpl$3490 = "<path d=\"m16 16 4-4-4-4\"></path>",
  _tmpl$3491 = "<path d=\"m8 8-4 4 4 4\"></path>",
  _tmpl$3492 = "<path d=\"M13.148 14.772a3 3 0 1 0-2.296-5.544l-.383-.923\"></path>",
  _tmpl$3493 = "<path d=\"m13.148 9.228.383-.923\"></path>",
  _tmpl$3494 = "<path d=\"m13.53 15.696-.382-.924a3 3 0 1 1-2.296-5.544\"></path>",
  _tmpl$3495 = "<path d=\"M4.5 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-.5\"></path>",
  _tmpl$3496 = "<path d=\"M4.5 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-.5\"></path>",
  _tmpl$3497 = "<path d=\"M6 6h.01\"></path>",
  _tmpl$3498 = "<path d=\"M6 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2\"></path>",
  _tmpl$3499 = "<path d=\"M6 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-2\"></path>",
  _tmpl$3500 = "<path d=\"m13 6-4 6h6l-4 6\"></path>",
  _tmpl$3501 = "<path d=\"M7 2h13a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-5\"></path>",
  _tmpl$3502 = "<path d=\"M10 10 2.5 2.5C2 2 2 2.5 2 5v3a2 2 0 0 0 2 2h6z\"></path>",
  _tmpl$3503 = "<path d=\"M22 17v-1a2 2 0 0 0-2-2h-1\"></path>",
  _tmpl$3504 = "<path d=\"M4 14a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16.5l1-.5.5.5-8-8H4z\"></path>",
  _tmpl$3505 = "<rect width=\"20\" height=\"8\" x=\"2\" y=\"2\" rx=\"2\" ry=\"2\"></rect>",
  _tmpl$3506 = "<rect width=\"20\" height=\"8\" x=\"2\" y=\"14\" rx=\"2\" ry=\"2\"></rect>",
  _tmpl$3507 = "<line x1=\"6\" x2=\"6.01\" y1=\"6\" y2=\"6\"></line>",
  _tmpl$3508 = "<line x1=\"6\" x2=\"6.01\" y1=\"18\" y2=\"18\"></line>",
  _tmpl$3509 = "<path d=\"M14 17H5\"></path>",
  _tmpl$3510 = "<path d=\"M19 7h-9\"></path>",
  _tmpl$3511 = "<circle cx=\"7\" cy=\"7\" r=\"3\"></circle>",
  _tmpl$3512 = "<path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"></path>",
  _tmpl$3513 = "<path d=\"M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z\"></path>",
  _tmpl$3514 = "<rect x=\"3\" y=\"14\" width=\"7\" height=\"7\" rx=\"1\"></rect>",
  _tmpl$3515 = "<circle cx=\"17.5\" cy=\"17.5\" r=\"3.5\"></circle>",
  _tmpl$3516 = "<circle cx=\"6\" cy=\"12\" r=\"3\"></circle>",
  _tmpl$3517 = "<circle cx=\"18\" cy=\"19\" r=\"3\"></circle>",
  _tmpl$3518 = "<line x1=\"8.59\" x2=\"15.42\" y1=\"13.51\" y2=\"17.49\"></line>",
  _tmpl$3519 = "<line x1=\"15.41\" x2=\"8.59\" y1=\"6.51\" y2=\"10.49\"></line>",
  _tmpl$3520 = "<path d=\"M12 2v13\"></path>",
  _tmpl$3521 = "<path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path>",
  _tmpl$3522 = "<line x1=\"3\" x2=\"21\" y1=\"9\" y2=\"9\"></line>",
  _tmpl$3523 = "<line x1=\"3\" x2=\"21\" y1=\"15\" y2=\"15\"></line>",
  _tmpl$3524 = "<line x1=\"9\" x2=\"9\" y1=\"9\" y2=\"21\"></line>",
  _tmpl$3525 = "<line x1=\"15\" x2=\"15\" y1=\"9\" y2=\"21\"></line>",
  _tmpl$3526 = "<path d=\"M14 11a2 2 0 1 1-4 0 4 4 0 0 1 8 0 6 6 0 0 1-12 0 8 8 0 0 1 16 0 10 10 0 1 1-20 0 11.93 11.93 0 0 1 2.42-7.22 2 2 0 1 1 3.16 2.44\"></path>",
  _tmpl$3527 = "<path d=\"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z\"></path>",
  _tmpl$3528 = "<path d=\"m4.243 5.21 14.39 12.472\"></path>",
  _tmpl$3529 = "<path d=\"M12 22V2\"></path>",
  _tmpl$3530 = "<path d=\"M5 5a1 1 0 0 0-1 1v7c0 5 3.5 7.5 7.67 8.94a1 1 0 0 0 .67.01c2.35-.82 4.48-1.97 5.9-3.71\"></path>",
  _tmpl$3531 = "<path d=\"M9.309 3.652A12.252 12.252 0 0 0 11.24 2.28a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1v7a9.784 9.784 0 0 1-.08 1.264\"></path>",
  _tmpl$3532 = "<path d=\"M6.376 18.91a6 6 0 0 1 11.249.003\"></path>",
  _tmpl$3533 = "<circle cx=\"12\" cy=\"11\" r=\"4\"></circle>",
  _tmpl$3534 = "<path d=\"m9.5 9.5 5 5\"></path>",
  _tmpl$3535 = "<path d=\"M12 2v7.5\"></path>",
  _tmpl$3536 = "<path d=\"m19 5-5.23 5.23\"></path>",
  _tmpl$3537 = "<path d=\"M22 12h-7.5\"></path>",
  _tmpl$3538 = "<path d=\"m19 19-5.23-5.23\"></path>",
  _tmpl$3539 = "<path d=\"M12 14.5V22\"></path>",
  _tmpl$3540 = "<path d=\"M10.23 13.77 5 19\"></path>",
  _tmpl$3541 = "<path d=\"M9.5 12H2\"></path>",
  _tmpl$3542 = "<path d=\"M10.23 10.23 5 5\"></path>",
  _tmpl$3543 = "<circle cx=\"12\" cy=\"12\" r=\"2.5\"></circle>",
  _tmpl$3544 = "<path d=\"M12 10.189V14\"></path>",
  _tmpl$3545 = "<path d=\"M19 13V7a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v6\"></path>",
  _tmpl$3546 = "<path d=\"M19.38 20A11.6 11.6 0 0 0 21 14l-8.188-3.639a2 2 0 0 0-1.624 0L3 14a11.6 11.6 0 0 0 2.81 7.76\"></path>",
  _tmpl$3547 = "<path d=\"M2 21c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1s1.2 1 2.5 1c2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\"></path>",
  _tmpl$3548 = "<path d=\"M20.38 3.46 16 2a4 4 0 0 1-8 0L3.62 3.46a2 2 0 0 0-1.34 2.23l.58 3.47a1 1 0 0 0 .99.84H6v10c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V10h2.15a1 1 0 0 0 .99-.84l.58-3.47a2 2 0 0 0-1.34-2.23z\"></path>",
  _tmpl$3549 = "<path d=\"M16 10a4 4 0 0 1-8 0\"></path>",
  _tmpl$3550 = "<path d=\"M3.103 6.034h17.794\"></path>",
  _tmpl$3551 = "<path d=\"M3.4 5.467a2 2 0 0 0-.4 1.2V20a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6.667a2 2 0 0 0-.4-1.2l-2-2.667A2 2 0 0 0 17 2H7a2 2 0 0 0-1.6.8z\"></path>",
  _tmpl$3552 = "<path d=\"m15 11-1 9\"></path>",
  _tmpl$3553 = "<path d=\"m19 11-4-7\"></path>",
  _tmpl$3554 = "<path d=\"M2 11h20\"></path>",
  _tmpl$3555 = "<path d=\"m3.5 11 1.6 7.4a2 2 0 0 0 2 1.6h9.8a2 2 0 0 0 2-1.6l1.7-7.4\"></path>",
  _tmpl$3556 = "<path d=\"M4.5 15.5h15\"></path>",
  _tmpl$3557 = "<path d=\"m5 11 4-7\"></path>",
  _tmpl$3558 = "<path d=\"m9 11 1 9\"></path>",
  _tmpl$3559 = "<circle cx=\"8\" cy=\"21\" r=\"1\"></circle>",
  _tmpl$3560 = "<circle cx=\"19\" cy=\"21\" r=\"1\"></circle>",
  _tmpl$3561 = "<path d=\"M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12\"></path>",
  _tmpl$3562 = "<path d=\"M2 22v-5l5-5 5 5-5 5z\"></path>",
  _tmpl$3563 = "<path d=\"M9.5 14.5 16 8\"></path>",
  _tmpl$3564 = "<path d=\"m17 2 5 5-.5.5a3.53 3.53 0 0 1-5 0s0 0 0 0a3.53 3.53 0 0 1 0-5L17 2\"></path>",
  _tmpl$3565 = "<path d=\"m4 4 2.5 2.5\"></path>",
  _tmpl$3566 = "<path d=\"M13.5 6.5a4.95 4.95 0 0 0-7 7\"></path>",
  _tmpl$3567 = "<path d=\"M15 5 5 15\"></path>",
  _tmpl$3568 = "<path d=\"M14 17v.01\"></path>",
  _tmpl$3569 = "<path d=\"M10 16v.01\"></path>",
  _tmpl$3570 = "<path d=\"M13 13v.01\"></path>",
  _tmpl$3571 = "<path d=\"M16 10v.01\"></path>",
  _tmpl$3572 = "<path d=\"M11 20v.01\"></path>",
  _tmpl$3573 = "<path d=\"M17 14v.01\"></path>",
  _tmpl$3574 = "<path d=\"M20 11v.01\"></path>",
  _tmpl$3575 = "<path d=\"M10 22v-5\"></path>",
  _tmpl$3576 = "<path d=\"M14 19v-2\"></path>",
  _tmpl$3577 = "<path d=\"M18 20v-3\"></path>",
  _tmpl$3578 = "<path d=\"M2 13h20\"></path>",
  _tmpl$3579 = "<path d=\"M20 13V7l-5-5H6a2 2 0 0 0-2 2v9\"></path>",
  _tmpl$3580 = "<path d=\"M6 20v-3\"></path>",
  _tmpl$3581 = "<path d=\"M11 12h.01\"></path>",
  _tmpl$3582 = "<path d=\"M13 22c.5-.5 1.12-1 2.5-1-1.38 0-2-.5-2.5-1\"></path>",
  _tmpl$3583 = "<path d=\"M14 2a3.28 3.28 0 0 1-3.227 1.798l-6.17-.561A2.387 2.387 0 1 0 4.387 8H15.5a1 1 0 0 1 0 13 1 1 0 0 0 0-5H12a7 7 0 0 1-7-7V8\"></path>",
  _tmpl$3584 = "<path d=\"M14 8a8.5 8.5 0 0 1 0 8\"></path>",
  _tmpl$3585 = "<path d=\"M16 16c2 0 4.5-4 4-6\"></path>",
  _tmpl$3586 = "<path d=\"m15 15 6 6m-6-6v4.8m0-4.8h4.8\"></path>",
  _tmpl$3587 = "<path d=\"M9 19.8V15m0 0H4.2M9 15l-6 6\"></path>",
  _tmpl$3588 = "<path d=\"M15 4.2V9m0 0h4.8M15 9l6-6\"></path>",
  _tmpl$3589 = "<path d=\"M9 4.2V9m0 0H4.2M9 9 3 3\"></path>",
  _tmpl$3590 = "<path d=\"M12 22v-5.172a2 2 0 0 0-.586-1.414L9.5 13.5\"></path>",
  _tmpl$3591 = "<path d=\"M14.5 14.5 12 17\"></path>",
  _tmpl$3592 = "<path d=\"M17 8.8A6 6 0 0 1 13.8 20H10A6.5 6.5 0 0 1 7 8a5 5 0 0 1 10 0z\"></path>",
  _tmpl$3593 = "<path d=\"m18 14 4 4-4 4\"></path>",
  _tmpl$3594 = "<path d=\"M2 18h1.973a4 4 0 0 0 3.3-1.7l5.454-8.6a4 4 0 0 1 3.3-1.7H22\"></path>",
  _tmpl$3595 = "<path d=\"M2 6h1.972a4 4 0 0 1 3.6 2.2\"></path>",
  _tmpl$3596 = "<path d=\"M22 18h-6.041a4 4 0 0 1-3.3-1.8l-.359-.45\"></path>",
  _tmpl$3597 = "<path d=\"M18 7V5a1 1 0 0 0-1-1H6.5a.5.5 0 0 0-.4.8l4.5 6a2 2 0 0 1 0 2.4l-4.5 6a.5.5 0 0 0 .4.8H17a1 1 0 0 0 1-1v-2\"></path>",
  _tmpl$3598 = "<path d=\"M2 20h.01\"></path>",
  _tmpl$3599 = "<path d=\"M7 20v-4\"></path>",
  _tmpl$3600 = "<path d=\"M17 20V8\"></path>",
  _tmpl$3601 = "<path d=\"M22 4v16\"></path>",
  _tmpl$3602 = "<path d=\"m21 17-2.156-1.868A.5.5 0 0 0 18 15.5v.5a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1c0-2.545-3.991-3.97-8.5-4a1 1 0 0 0 0 5c4.153 0 4.745-11.295 5.708-13.5a2.5 2.5 0 1 1 3.31 3.284\"></path>",
  _tmpl$3603 = "<path d=\"M3 21h18\"></path>",
  _tmpl$3604 = "<path d=\"M10 9H4L2 7l2-2h6\"></path>",
  _tmpl$3605 = "<path d=\"M14 5h6l2 2-2 2h-6\"></path>",
  _tmpl$3606 = "<path d=\"M10 22V4a2 2 0 1 1 4 0v18\"></path>",
  _tmpl$3607 = "<path d=\"M18 6a2 2 0 0 1 1.387.56l2.307 2.22a1 1 0 0 1 0 1.44l-2.307 2.22A2 2 0 0 1 18 13H6a2 2 0 0 1-1.387-.56l-2.306-2.22a1 1 0 0 1 0-1.44l2.306-2.22A2 2 0 0 1 6 6z\"></path>",
  _tmpl$3608 = "<path d=\"M7 18v-6a5 5 0 1 1 10 0v6\"></path>",
  _tmpl$3609 = "<path d=\"M5 21a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-1a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2z\"></path>",
  _tmpl$3610 = "<path d=\"M21 12h1\"></path>",
  _tmpl$3611 = "<path d=\"M18.5 4.5 18 5\"></path>",
  _tmpl$3612 = "<path d=\"M2 12h1\"></path>",
  _tmpl$3613 = "<path d=\"M12 2v1\"></path>",
  _tmpl$3614 = "<path d=\"m4.929 4.929.707.707\"></path>",
  _tmpl$3615 = "<polygon points=\"19 20 9 12 19 4 19 20\"></polygon>",
  _tmpl$3616 = "<line x1=\"5\" x2=\"5\" y1=\"19\" y2=\"5\"></line>",
  _tmpl$3617 = "<polygon points=\"5 4 15 12 5 20 5 4\"></polygon>",
  _tmpl$3618 = "<line x1=\"19\" x2=\"19\" y1=\"5\" y2=\"19\"></line>",
  _tmpl$3619 = "<path d=\"m12.5 17-.5-1-.5 1h1z\"></path>",
  _tmpl$3620 = "<path d=\"M15 22a1 1 0 0 0 1-1v-1a2 2 0 0 0 1.56-3.25 8 8 0 1 0-11.12 0A2 2 0 0 0 8 20v1a1 1 0 0 0 1 1z\"></path>",
  _tmpl$3621 = "<rect width=\"3\" height=\"8\" x=\"13\" y=\"2\" rx=\"1.5\"></rect>",
  _tmpl$3622 = "<path d=\"M19 8.5V10h1.5A1.5 1.5 0 1 0 19 8.5\"></path>",
  _tmpl$3623 = "<rect width=\"3\" height=\"8\" x=\"8\" y=\"14\" rx=\"1.5\"></rect>",
  _tmpl$3624 = "<path d=\"M5 15.5V14H3.5A1.5 1.5 0 1 0 5 15.5\"></path>",
  _tmpl$3625 = "<rect width=\"8\" height=\"3\" x=\"14\" y=\"13\" rx=\"1.5\"></rect>",
  _tmpl$3626 = "<path d=\"M15.5 19H14v1.5a1.5 1.5 0 1 0 1.5-1.5\"></path>",
  _tmpl$3627 = "<rect width=\"8\" height=\"3\" x=\"2\" y=\"8\" rx=\"1.5\"></rect>",
  _tmpl$3628 = "<path d=\"M8.5 5H10V3.5A1.5 1.5 0 1 0 8.5 5\"></path>",
  _tmpl$3629 = "<path d=\"M11 16.586V19a1 1 0 0 1-1 1H2L18.37 3.63a1 1 0 1 1 3 3l-9.663 9.663a1 1 0 0 1-1.414 0L8 14\"></path>",
  _tmpl$3630 = "<line x1=\"21\" x2=\"14\" y1=\"4\" y2=\"4\"></line>",
  _tmpl$3631 = "<line x1=\"10\" x2=\"3\" y1=\"4\" y2=\"4\"></line>",
  _tmpl$3632 = "<line x1=\"21\" x2=\"12\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$3633 = "<line x1=\"8\" x2=\"3\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$3634 = "<line x1=\"21\" x2=\"16\" y1=\"20\" y2=\"20\"></line>",
  _tmpl$3635 = "<line x1=\"12\" x2=\"3\" y1=\"20\" y2=\"20\"></line>",
  _tmpl$3636 = "<line x1=\"14\" x2=\"14\" y1=\"2\" y2=\"6\"></line>",
  _tmpl$3637 = "<line x1=\"16\" x2=\"16\" y1=\"18\" y2=\"22\"></line>",
  _tmpl$3638 = "<line x1=\"4\" x2=\"4\" y1=\"21\" y2=\"14\"></line>",
  _tmpl$3639 = "<line x1=\"4\" x2=\"4\" y1=\"10\" y2=\"3\"></line>",
  _tmpl$3640 = "<line x1=\"12\" x2=\"12\" y1=\"21\" y2=\"12\"></line>",
  _tmpl$3641 = "<line x1=\"12\" x2=\"12\" y1=\"8\" y2=\"3\"></line>",
  _tmpl$3642 = "<line x1=\"20\" x2=\"20\" y1=\"21\" y2=\"16\"></line>",
  _tmpl$3643 = "<line x1=\"20\" x2=\"20\" y1=\"12\" y2=\"3\"></line>",
  _tmpl$3644 = "<line x1=\"2\" x2=\"6\" y1=\"14\" y2=\"14\"></line>",
  _tmpl$3645 = "<line x1=\"10\" x2=\"14\" y1=\"8\" y2=\"8\"></line>",
  _tmpl$3646 = "<line x1=\"18\" x2=\"22\" y1=\"16\" y2=\"16\"></line>",
  _tmpl$3647 = "<rect width=\"14\" height=\"20\" x=\"5\" y=\"2\" rx=\"2\" ry=\"2\"></rect>",
  _tmpl$3648 = "<path d=\"M12.667 8 10 12h4l-2.667 4\"></path>",
  _tmpl$3649 = "<rect width=\"7\" height=\"12\" x=\"2\" y=\"6\" rx=\"1\"></rect>",
  _tmpl$3650 = "<path d=\"M13 8.32a7.43 7.43 0 0 1 0 7.36\"></path>",
  _tmpl$3651 = "<path d=\"M16.46 6.21a11.76 11.76 0 0 1 0 11.58\"></path>",
  _tmpl$3652 = "<path d=\"M19.91 4.1a15.91 15.91 0 0 1 .01 15.8\"></path>",
  _tmpl$3653 = "<path d=\"M22 11v1a10 10 0 1 1-9-10\"></path>",
  _tmpl$3654 = "<path d=\"M2 13a6 6 0 1 0 12 0 4 4 0 1 0-8 0 2 2 0 0 0 4 0\"></path>",
  _tmpl$3655 = "<circle cx=\"10\" cy=\"13\" r=\"8\"></circle>",
  _tmpl$3656 = "<path d=\"M2 21h12c4.4 0 8-3.6 8-8V7a2 2 0 1 0-4 0v6\"></path>",
  _tmpl$3657 = "<path d=\"M18 3 19.1 5.2\"></path>",
  _tmpl$3658 = "<path d=\"M22 3 20.9 5.2\"></path>",
  _tmpl$3659 = "<path d=\"m10 20-1.25-2.5L6 18\"></path>",
  _tmpl$3660 = "<path d=\"M10 4 8.75 6.5 6 6\"></path>",
  _tmpl$3661 = "<path d=\"m14 20 1.25-2.5L18 18\"></path>",
  _tmpl$3662 = "<path d=\"m14 4 1.25 2.5L18 6\"></path>",
  _tmpl$3663 = "<path d=\"m17 21-3-6h-4\"></path>",
  _tmpl$3664 = "<path d=\"m17 3-3 6 1.5 3\"></path>",
  _tmpl$3665 = "<path d=\"M2 12h6.5L10 9\"></path>",
  _tmpl$3666 = "<path d=\"m20 10-1.5 2 1.5 2\"></path>",
  _tmpl$3667 = "<path d=\"M22 12h-6.5L14 15\"></path>",
  _tmpl$3668 = "<path d=\"m4 10 1.5 2L4 14\"></path>",
  _tmpl$3669 = "<path d=\"m7 21 3-6-1.5-3\"></path>",
  _tmpl$3670 = "<path d=\"m7 3 3 6h4\"></path>",
  _tmpl$3671 = "<path d=\"M10.5 2v4\"></path>",
  _tmpl$3672 = "<path d=\"M14 2H7a2 2 0 0 0-2 2\"></path>",
  _tmpl$3673 = "<path d=\"M19.29 14.76A6.67 6.67 0 0 1 17 11a6.6 6.6 0 0 1-2.29 3.76c-1.15.92-1.71 2.04-1.71 3.19 0 2.22 1.8 4.05 4 4.05s4-1.83 4-4.05c0-1.16-.57-2.26-1.71-3.19\"></path>",
  _tmpl$3674 = "<path d=\"M9.607 21H6a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h7V7a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3\"></path>",
  _tmpl$3675 = "<path d=\"M20 9V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v3\"></path>",
  _tmpl$3676 = "<path d=\"M2 16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v1.5a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5V11a2 2 0 0 0-4 0z\"></path>",
  _tmpl$3677 = "<path d=\"M4 18v2\"></path>",
  _tmpl$3678 = "<path d=\"M20 18v2\"></path>",
  _tmpl$3679 = "<path d=\"M12 4v9\"></path>",
  _tmpl$3680 = "<path d=\"M19.5 12 22 6\"></path>",
  _tmpl$3681 = "<path d=\"M16.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.73 1.62\"></path>",
  _tmpl$3682 = "<path d=\"M11.25 3c.27.1.8.53.74 1.36-.05.83-.93 1.2-.98 2.02-.06.78.33 1.24.72 1.62\"></path>",
  _tmpl$3683 = "<path d=\"M6.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.74 1.62\"></path>",
  _tmpl$3684 = "<path d=\"M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1\"></path>",
  _tmpl$3685 = "<path d=\"M5 9c-1.5 1.5-3 3.2-3 5.5A5.5 5.5 0 0 0 7.5 20c1.8 0 3-.5 4.5-2 1.5 1.5 2.7 2 4.5 2a5.5 5.5 0 0 0 5.5-5.5c0-2.3-1.5-4-3-5.5l-7-7-7 7Z\"></path>",
  _tmpl$3686 = "<path d=\"M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z\"></path>",
  _tmpl$3687 = "<path d=\"M4 17v2\"></path>",
  _tmpl$3688 = "<path d=\"M5 18H3\"></path>",
  _tmpl$3689 = "<circle cx=\"12\" cy=\"14\" r=\"4\"></circle>",
  _tmpl$3690 = "<path d=\"M8.8 20v-4.1l1.9.2a2.3 2.3 0 0 0 2.164-2.1V8.3A5.37 5.37 0 0 0 2 8.25c0 2.8.656 3.054 1 4.55a5.77 5.77 0 0 1 .029 2.758L2 20\"></path>",
  _tmpl$3691 = "<path d=\"M19.8 17.8a7.5 7.5 0 0 0 .003-10.603\"></path>",
  _tmpl$3692 = "<path d=\"M17 15a3.5 3.5 0 0 0-.025-4.975\"></path>",
  _tmpl$3693 = "<path d=\"M4 21c1.1 0 1.1-1 2.3-1s1.1 1 2.3 1c1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1\"></path>",
  _tmpl$3694 = "<path d=\"M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z\"></path>",
  _tmpl$3695 = "<path d=\"M5 17A12 12 0 0 1 17 5\"></path>",
  _tmpl$3696 = "<path d=\"M8 3H3v5\"></path>",
  _tmpl$3697 = "<path d=\"M12 22v-8.3a4 4 0 0 0-1.172-2.872L3 3\"></path>",
  _tmpl$3698 = "<path d=\"M17 13.44 4.442 17.082A2 2 0 0 0 4.982 21H19a2 2 0 0 0 .558-3.921l-1.115-.32A2 2 0 0 1 17 14.837V7.66\"></path>",
  _tmpl$3699 = "<path d=\"m7 10.56 12.558-3.642A2 2 0 0 0 19.018 3H5a2 2 0 0 0-.558 3.921l1.115.32A2 2 0 0 1 7 9.163v7.178\"></path>",
  _tmpl$3700 = "<path d=\"M3 3h.01\"></path>",
  _tmpl$3701 = "<path d=\"M7 5h.01\"></path>",
  _tmpl$3702 = "<path d=\"M11 7h.01\"></path>",
  _tmpl$3703 = "<path d=\"M3 7h.01\"></path>",
  _tmpl$3704 = "<rect width=\"4\" height=\"4\" x=\"15\" y=\"5\"></rect>",
  _tmpl$3705 = "<path d=\"m19 9 2 2v10c0 .6-.4 1-1 1h-6c-.6 0-1-.4-1-1V11l2-2\"></path>",
  _tmpl$3706 = "<path d=\"m13 14 8-2\"></path>",
  _tmpl$3707 = "<path d=\"m13 19 8-2\"></path>",
  _tmpl$3708 = "<path d=\"M7 20h10\"></path>",
  _tmpl$3709 = "<path d=\"M10 20c5.5-2.5.8-6.4 3-10\"></path>",
  _tmpl$3710 = "<path d=\"M9.5 9.4c1.1.8 1.8 2.2 2.3 3.7-2 .4-3.5.4-4.8-.3-1.2-.6-2.3-1.9-3-4.2 2.8-.5 4.4 0 5.5.8z\"></path>",
  _tmpl$3711 = "<path d=\"M14.1 6a7 7 0 0 0-1.1 4c1.9-.1 3.3-.6 4.3-1.4 1-1 1.6-2.3 1.7-4.6-2.7.1-4 1-4.9 2z\"></path>",
  _tmpl$3712 = "<path d=\"M17 12h-2l-2 5-2-10-2 5H7\"></path>",
  _tmpl$3713 = "<path d=\"m16 8-8 8\"></path>",
  _tmpl$3714 = "<path d=\"M16 16H8V8\"></path>",
  _tmpl$3715 = "<path d=\"m8 8 8 8\"></path>",
  _tmpl$3716 = "<path d=\"M16 8v8H8\"></path>",
  _tmpl$3717 = "<path d=\"M13 21h6a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v6\"></path>",
  _tmpl$3718 = "<path d=\"m3 21 9-9\"></path>",
  _tmpl$3719 = "<path d=\"M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6\"></path>",
  _tmpl$3720 = "<path d=\"m21 21-9-9\"></path>",
  _tmpl$3721 = "<path d=\"M21 15v6h-6\"></path>",
  _tmpl$3722 = "<path d=\"M13 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-6\"></path>",
  _tmpl$3723 = "<path d=\"m3 3 9 9\"></path>",
  _tmpl$3724 = "<path d=\"M3 9V3h6\"></path>",
  _tmpl$3725 = "<path d=\"M21 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h6\"></path>",
  _tmpl$3726 = "<path d=\"m21 3-9 9\"></path>",
  _tmpl$3727 = "<path d=\"M8 16V8h8\"></path>",
  _tmpl$3728 = "<path d=\"M16 16 8 8\"></path>",
  _tmpl$3729 = "<path d=\"M8 8h8v8\"></path>",
  _tmpl$3730 = "<path d=\"m8 16 8-8\"></path>",
  _tmpl$3731 = "<path d=\"m8.5 14 7-4\"></path>",
  _tmpl$3732 = "<path d=\"m8.5 10 7 4\"></path>",
  _tmpl$3733 = "<path d=\"M4 22a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2\"></path>",
  _tmpl$3734 = "<path d=\"M10 22H8\"></path>",
  _tmpl$3735 = "<path d=\"M16 22h-2\"></path>",
  _tmpl$3736 = "<circle cx=\"8\" cy=\"8\" r=\"2\"></circle>",
  _tmpl$3737 = "<path d=\"M9.414 9.414 12 12\"></path>",
  _tmpl$3738 = "<path d=\"M14.8 14.8 18 18\"></path>",
  _tmpl$3739 = "<circle cx=\"8\" cy=\"16\" r=\"2\"></circle>",
  _tmpl$3740 = "<path d=\"m18 6-8.586 8.586\"></path>",
  _tmpl$3741 = "<path d=\"M9 8h7\"></path>",
  _tmpl$3742 = "<path d=\"M8 12h6\"></path>",
  _tmpl$3743 = "<path d=\"M11 16h5\"></path>",
  _tmpl$3744 = "<path d=\"M21 10.656V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h12.344\"></path>",
  _tmpl$3745 = "<path d=\"m10 9-3 3 3 3\"></path>",
  _tmpl$3746 = "<path d=\"m14 15 3-3-3-3\"></path>",
  _tmpl$3747 = "<path d=\"M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2\"></path>",
  _tmpl$3748 = "<path d=\"M8 7v7\"></path>",
  _tmpl$3749 = "<path d=\"M16 7v9\"></path>",
  _tmpl$3750 = "<path d=\"M21 14v1\"></path>",
  _tmpl$3751 = "<path d=\"M21 19a2 2 0 0 1-2 2\"></path>",
  _tmpl$3752 = "<path d=\"M5 21a2 2 0 0 1-2-2\"></path>",
  _tmpl$3753 = "<path d=\"M3 14v1\"></path>",
  _tmpl$3754 = "<path d=\"M9 21h2\"></path>",
  _tmpl$3755 = "<path d=\"M21 9v2\"></path>",
  _tmpl$3756 = "<path d=\"M3 5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2\"></path>",
  _tmpl$3757 = "<path d=\"M9 17c2 0 2.8-1 2.8-2.8V10c0-2 1-3.3 3.2-3\"></path>",
  _tmpl$3758 = "<path d=\"M9 11.2h5.7\"></path>",
  _tmpl$3759 = "<path d=\"M7 7v10\"></path>",
  _tmpl$3760 = "<path d=\"M11 7v10\"></path>",
  _tmpl$3761 = "<path d=\"m15 7 2 10\"></path>",
  _tmpl$3762 = "<path d=\"M8 16V8l4 4 4-4v8\"></path>",
  _tmpl$3763 = "<path d=\"M7 8h10\"></path>",
  _tmpl$3764 = "<path d=\"M3.6 3.6A2 2 0 0 1 5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-.59 1.41\"></path>",
  _tmpl$3765 = "<path d=\"M3 8.7V19a2 2 0 0 0 2 2h10.3\"></path>",
  _tmpl$3766 = "<path d=\"M9 17v-2.3\"></path>",
  _tmpl$3767 = "<path d=\"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z\"></path>",
  _tmpl$3768 = "<path d=\"M7 7h10\"></path>",
  _tmpl$3769 = "<path d=\"M10 7v10\"></path>",
  _tmpl$3770 = "<path d=\"M16 17a2 2 0 0 1-2-2V7\"></path>",
  _tmpl$3771 = "<path d=\"M12 12H9.5a2.5 2.5 0 0 1 0-5H17\"></path>",
  _tmpl$3772 = "<path d=\"M16 7v10\"></path>",
  _tmpl$3773 = "<path d=\"m9 8 6 4-6 4Z\"></path>",
  _tmpl$3774 = "<path d=\"M7 12h2l2 5 2-10h4\"></path>",
  _tmpl$3775 = "<path d=\"M21 11a8 8 0 0 0-8-8\"></path>",
  _tmpl$3776 = "<path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path>",
  _tmpl$3777 = "<rect width=\"20\" height=\"20\" x=\"2\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$3778 = "<path d=\"M16 8.9V7H8l4 5-4 5h8v-1.9\"></path>",
  _tmpl$3779 = "<path d=\"M8 19H5c-1 0-2-1-2-2V7c0-1 1-2 2-2h3\"></path>",
  _tmpl$3780 = "<path d=\"M16 5h3c1 0 2 1 2 2v10c0 1-1 2-2 2h-3\"></path>",
  _tmpl$3781 = "<line x1=\"12\" x2=\"12\" y1=\"4\" y2=\"20\"></line>",
  _tmpl$3782 = "<path d=\"M5 8V5c0-1 1-2 2-2h10c1 0 2 1 2 2v3\"></path>",
  _tmpl$3783 = "<path d=\"M19 16v3c0 1-1 2-2 2H7c-1 0-2-1-2-2v-3\"></path>",
  _tmpl$3784 = "<line x1=\"4\" x2=\"20\" y1=\"12\" y2=\"12\"></line>",
  _tmpl$3785 = "<path d=\"M4 10c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2\"></path>",
  _tmpl$3786 = "<path d=\"M10 16c-1.1 0-2-.9-2-2v-4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2\"></path>",
  _tmpl$3787 = "<rect width=\"8\" height=\"8\" x=\"14\" y=\"14\" rx=\"2\"></rect>",
  _tmpl$3788 = "<path d=\"m7 11 2-2-2-2\"></path>",
  _tmpl$3789 = "<path d=\"M11 13h4\"></path>",
  _tmpl$3790 = "<path d=\"M18 21a6 6 0 0 0-12 0\"></path>",
  _tmpl$3791 = "<path d=\"M7 21v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2\"></path>",
  _tmpl$3792 = "<path d=\"M16 12v2a2 2 0 0 1-2 2H9a1 1 0 0 0-1 1v3a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2h0\"></path>",
  _tmpl$3793 = "<path d=\"M4 16a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v3a1 1 0 0 1-1 1h-5a2 2 0 0 0-2 2v2\"></path>",
  _tmpl$3794 = "<path d=\"M10 22a2 2 0 0 1-2-2\"></path>",
  _tmpl$3795 = "<path d=\"M14 2a2 2 0 0 1 2 2\"></path>",
  _tmpl$3796 = "<path d=\"M2 10V8\"></path>",
  _tmpl$3797 = "<path d=\"M2 4a2 2 0 0 1 2-2\"></path>",
  _tmpl$3798 = "<path d=\"M20 8a2 2 0 0 1 2 2\"></path>",
  _tmpl$3799 = "<path d=\"M22 14v2\"></path>",
  _tmpl$3800 = "<path d=\"M22 20a2 2 0 0 1-2 2\"></path>",
  _tmpl$3801 = "<path d=\"M4 16a2 2 0 0 1-2-2\"></path>",
  _tmpl$3802 = "<path d=\"M8 10a2 2 0 0 1 2-2h5a1 1 0 0 1 1 1v5a2 2 0 0 1-2 2H9a1 1 0 0 1-1-1z\"></path>",
  _tmpl$3803 = "<path d=\"M8 2h2\"></path>",
  _tmpl$3804 = "<path d=\"M16 4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-5a2 2 0 0 1 2-2h5a1 1 0 0 0 1-1z\"></path>",
  _tmpl$3805 = "<path d=\"M4 16a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v3a1 1 0 0 0 1 1h3a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2v-3a1 1 0 0 0-1-1z\"></path>",
  _tmpl$3806 = "<path d=\"M13.77 3.043a34 34 0 0 0-3.54 0\"></path>",
  _tmpl$3807 = "<path d=\"M13.771 20.956a33 33 0 0 1-3.541.001\"></path>",
  _tmpl$3808 = "<path d=\"M20.18 17.74c-.51 1.15-1.29 1.93-2.439 2.44\"></path>",
  _tmpl$3809 = "<path d=\"M20.18 6.259c-.51-1.148-1.291-1.929-2.44-2.438\"></path>",
  _tmpl$3810 = "<path d=\"M20.957 10.23a33 33 0 0 1 0 3.54\"></path>",
  _tmpl$3811 = "<path d=\"M3.043 10.23a34 34 0 0 0 .001 3.541\"></path>",
  _tmpl$3812 = "<path d=\"M6.26 20.179c-1.15-.508-1.93-1.29-2.44-2.438\"></path>",
  _tmpl$3813 = "<path d=\"M6.26 3.82c-1.149.51-1.93 1.291-2.44 2.44\"></path>",
  _tmpl$3814 = "<path d=\"M12 3c7.2 0 9 1.8 9 9s-1.8 9-9 9-9-1.8-9-9 1.8-9 9-9\"></path>",
  _tmpl$3815 = "<path d=\"M15.236 22a3 3 0 0 0-2.2-5\"></path>",
  _tmpl$3816 = "<path d=\"M16 20a3 3 0 0 1 3-3h1a2 2 0 0 0 2-2v-2a4 4 0 0 0-4-4V4\"></path>",
  _tmpl$3817 = "<path d=\"M18 13h.01\"></path>",
  _tmpl$3818 = "<path d=\"M18 6a4 4 0 0 0-4 4 7 7 0 0 0-7 7c0-5 4-5 4-10.5a4.5 4.5 0 1 0-9 0 2.5 2.5 0 0 0 5 0C7 10 3 11 3 17c0 2.8 2.2 5 5 5h10\"></path>",
  _tmpl$3819 = "<path d=\"M14 13V8.5C14 7 15 7 15 5a3 3 0 0 0-6 0c0 2 1 2 1 3.5V13\"></path>",
  _tmpl$3820 = "<path d=\"M20 15.5a2.5 2.5 0 0 0-2.5-2.5h-11A2.5 2.5 0 0 0 4 15.5V17a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1z\"></path>",
  _tmpl$3821 = "<path d=\"M12 18.338a2.1 2.1 0 0 0-.987.244L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.12 2.12 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.12 2.12 0 0 0 1.597-1.16l2.309-4.679A.53.53 0 0 1 12 2\"></path>",
  _tmpl$3822 = "<path d=\"M8.34 8.34 2 9.27l5 4.87L5.82 21 12 17.77 18.18 21l-.59-3.43\"></path>",
  _tmpl$3823 = "<path d=\"M18.42 12.76 22 9.27l-6.91-1L12 2l-1.44 2.91\"></path>",
  _tmpl$3824 = "<path d=\"M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z\"></path>",
  _tmpl$3825 = "<polygon points=\"14,20 4,12 14,4\"></polygon>",
  _tmpl$3826 = "<line x1=\"6\" x2=\"6\" y1=\"4\" y2=\"20\"></line>",
  _tmpl$3827 = "<polygon points=\"10,4 20,12 10,20\"></polygon>",
  _tmpl$3828 = "<path d=\"M11 2v2\"></path>",
  _tmpl$3829 = "<path d=\"M5 2v2\"></path>",
  _tmpl$3830 = "<path d=\"M5 3H4a2 2 0 0 0-2 2v4a6 6 0 0 0 12 0V5a2 2 0 0 0-2-2h-1\"></path>",
  _tmpl$3831 = "<path d=\"M8 15a6 6 0 0 0 12 0v-3\"></path>",
  _tmpl$3832 = "<circle cx=\"20\" cy=\"10\" r=\"2\"></circle>",
  _tmpl$3833 = "<path d=\"M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z\"></path>",
  _tmpl$3834 = "<path d=\"M14 3v4a2 2 0 0 0 2 2h4\"></path>",
  _tmpl$3835 = "<path d=\"M8 13h.01\"></path>",
  _tmpl$3836 = "<path d=\"M16 13h.01\"></path>",
  _tmpl$3837 = "<path d=\"M10 16s.8 1 2 1c1.3 0 2-1 2-1\"></path>",
  _tmpl$3838 = "<path d=\"M16 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8Z\"></path>",
  _tmpl$3839 = "<path d=\"M15 3v4a2 2 0 0 0 2 2h4\"></path>",
  _tmpl$3840 = "<path d=\"m2 7 4.41-4.41A2 2 0 0 1 7.83 2h8.34a2 2 0 0 1 1.42.59L22 7\"></path>",
  _tmpl$3841 = "<path d=\"M15 22v-4a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4\"></path>",
  _tmpl$3842 = "<path d=\"M2 7h20\"></path>",
  _tmpl$3843 = "<path d=\"M22 7v3a2 2 0 0 1-2 2a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 16 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 12 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 8 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 4 12a2 2 0 0 1-2-2V7\"></path>",
  _tmpl$3844 = "<rect width=\"20\" height=\"6\" x=\"2\" y=\"4\" rx=\"2\"></rect>",
  _tmpl$3845 = "<rect width=\"20\" height=\"6\" x=\"2\" y=\"14\" rx=\"2\"></rect>",
  _tmpl$3846 = "<rect width=\"6\" height=\"20\" x=\"4\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$3847 = "<rect width=\"6\" height=\"20\" x=\"14\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$3848 = "<path d=\"M16 4H9a3 3 0 0 0-2.83 4\"></path>",
  _tmpl$3849 = "<path d=\"M14 12a4 4 0 0 1 0 8H6\"></path>",
  _tmpl$3850 = "<path d=\"m4 5 8 8\"></path>",
  _tmpl$3851 = "<path d=\"m12 5-8 8\"></path>",
  _tmpl$3852 = "<path d=\"M20 19h-4c0-1.5.44-2 1.5-2.5S20 15.33 20 14c0-.47-.17-.93-.48-1.29a2.11 2.11 0 0 0-2.62-.44c-.42.24-.74.62-.9 1.07\"></path>",
  _tmpl$3853 = "<path d=\"M20 12h.01\"></path>",
  _tmpl$3854 = "<path d=\"M4 12h.01\"></path>",
  _tmpl$3855 = "<path d=\"M17.657 6.343h.01\"></path>",
  _tmpl$3856 = "<path d=\"M17.657 17.657h.01\"></path>",
  _tmpl$3857 = "<path d=\"M6.343 17.657h.01\"></path>",
  _tmpl$3858 = "<path d=\"M6.343 6.343h.01\"></path>",
  _tmpl$3859 = "<path d=\"M12 3v1\"></path>",
  _tmpl$3860 = "<path d=\"M12 20v1\"></path>",
  _tmpl$3861 = "<path d=\"M20 12h1\"></path>",
  _tmpl$3862 = "<path d=\"m18.364 5.636-.707.707\"></path>",
  _tmpl$3863 = "<path d=\"m6.343 17.657-.707.707\"></path>",
  _tmpl$3864 = "<path d=\"m5.636 5.636.707.707\"></path>",
  _tmpl$3865 = "<path d=\"m17.657 17.657.707.707\"></path>",
  _tmpl$3866 = "<path d=\"M13 8.129A4 4 0 0 1 15.873 11\"></path>",
  _tmpl$3867 = "<path d=\"m19 5-1.256 1.256\"></path>",
  _tmpl$3868 = "<path d=\"M9 8a5 5 0 1 0 7 7 7 7 0 1 1-7-7\"></path>",
  _tmpl$3869 = "<path d=\"M10 21v-1\"></path>",
  _tmpl$3870 = "<path d=\"M10 4V3\"></path>",
  _tmpl$3871 = "<path d=\"M10 9a3 3 0 0 0 0 6\"></path>",
  _tmpl$3872 = "<path d=\"m17 21-3-6 1.5-3H22\"></path>",
  _tmpl$3873 = "<path d=\"m3.64 18.36.7-.7\"></path>",
  _tmpl$3874 = "<path d=\"m4.34 6.34-.7-.7\"></path>",
  _tmpl$3875 = "<path d=\"m17.66 17.66 1.41 1.41\"></path>",
  _tmpl$3876 = "<path d=\"m6.34 17.66-1.41 1.41\"></path>",
  _tmpl$3877 = "<path d=\"m4.93 10.93 1.41 1.41\"></path>",
  _tmpl$3878 = "<path d=\"M2 18h2\"></path>",
  _tmpl$3879 = "<path d=\"M20 18h2\"></path>",
  _tmpl$3880 = "<path d=\"m19.07 10.93-1.41 1.41\"></path>",
  _tmpl$3881 = "<path d=\"M16 18a4 4 0 0 0-8 0\"></path>",
  _tmpl$3882 = "<path d=\"M12 10V2\"></path>",
  _tmpl$3883 = "<path d=\"m4 19 8-8\"></path>",
  _tmpl$3884 = "<path d=\"m12 19-8-8\"></path>",
  _tmpl$3885 = "<path d=\"M20 12h-4c0-1.5.442-2 1.5-2.5S20 8.334 20 7.002c0-.472-.17-.93-.484-1.29a2.105 2.105 0 0 0-2.617-.436c-.42.239-.738.614-.899 1.06\"></path>",
  _tmpl$3886 = "<path d=\"M11 17a4 4 0 0 1-8 0V5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2Z\"></path>",
  _tmpl$3887 = "<path d=\"M16.7 13H19a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H7\"></path>",
  _tmpl$3888 = "<path d=\"M 7 17h.01\"></path>",
  _tmpl$3889 = "<path d=\"m11 8 2.3-2.3a2.4 2.4 0 0 1 3.404.004L18.6 7.6a2.4 2.4 0 0 1 .026 3.434L9.9 19.8\"></path>",
  _tmpl$3890 = "<path d=\"M10 21V3h8\"></path>",
  _tmpl$3891 = "<path d=\"M6 16h9\"></path>",
  _tmpl$3892 = "<path d=\"M10 9.5h7\"></path>",
  _tmpl$3893 = "<path d=\"M11 19H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h5\"></path>",
  _tmpl$3894 = "<path d=\"M13 5h7a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-5\"></path>",
  _tmpl$3895 = "<path d=\"m18 22-3-3 3-3\"></path>",
  _tmpl$3896 = "<path d=\"m6 2 3 3-3 3\"></path>",
  _tmpl$3897 = "<polyline points=\"14.5 17.5 3 6 3 3 6 3 17.5 14.5\"></polyline>",
  _tmpl$3898 = "<line x1=\"13\" x2=\"19\" y1=\"19\" y2=\"13\"></line>",
  _tmpl$3899 = "<line x1=\"16\" x2=\"20\" y1=\"16\" y2=\"20\"></line>",
  _tmpl$3900 = "<line x1=\"19\" x2=\"21\" y1=\"21\" y2=\"19\"></line>",
  _tmpl$3901 = "<polyline points=\"14.5 6.5 18 3 21 3 21 6 17.5 9.5\"></polyline>",
  _tmpl$3902 = "<line x1=\"5\" x2=\"9\" y1=\"14\" y2=\"18\"></line>",
  _tmpl$3903 = "<line x1=\"7\" x2=\"4\" y1=\"17\" y2=\"20\"></line>",
  _tmpl$3904 = "<line x1=\"3\" x2=\"5\" y1=\"19\" y2=\"21\"></line>",
  _tmpl$3905 = "<path d=\"m18 2 4 4\"></path>",
  _tmpl$3906 = "<path d=\"m17 7 3-3\"></path>",
  _tmpl$3907 = "<path d=\"M19 9 8.7 19.3c-1 1-2.5 1-3.4 0l-.6-.6c-1-1-1-2.5 0-3.4L15 5\"></path>",
  _tmpl$3908 = "<path d=\"m9 11 4 4\"></path>",
  _tmpl$3909 = "<path d=\"m5 19-3 3\"></path>",
  _tmpl$3910 = "<path d=\"m14 4 6 6\"></path>",
  _tmpl$3911 = "<path d=\"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\"></path>",
  _tmpl$3912 = "<path d=\"M12 21v-6\"></path>",
  _tmpl$3913 = "<path d=\"M12 9V3\"></path>",
  _tmpl$3914 = "<path d=\"M14 14v2\"></path>",
  _tmpl$3915 = "<path d=\"M14 8v2\"></path>",
  _tmpl$3916 = "<path d=\"M2 15h8\"></path>",
  _tmpl$3917 = "<path d=\"M2 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2\"></path>",
  _tmpl$3918 = "<path d=\"M2 9h8\"></path>",
  _tmpl$3919 = "<path d=\"M22 15h-4\"></path>",
  _tmpl$3920 = "<path d=\"M22 3h-2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h2\"></path>",
  _tmpl$3921 = "<path d=\"M22 9h-4\"></path>",
  _tmpl$3922 = "<path d=\"M5 3v18\"></path>",
  _tmpl$3923 = "<path d=\"M21 12h.01\"></path>",
  _tmpl$3924 = "<path d=\"M21 18h.01\"></path>",
  _tmpl$3925 = "<path d=\"M21 6h.01\"></path>",
  _tmpl$3926 = "<path d=\"M14 10h2\"></path>",
  _tmpl$3927 = "<path d=\"M15 22v-8\"></path>",
  _tmpl$3928 = "<path d=\"M15 2v4\"></path>",
  _tmpl$3929 = "<path d=\"M2 10h2\"></path>",
  _tmpl$3930 = "<path d=\"M20 10h2\"></path>",
  _tmpl$3931 = "<path d=\"M3 19h18\"></path>",
  _tmpl$3932 = "<path d=\"M3 22v-6a2 2 135 0 1 2-2h14a2 2 45 0 1 2 2v6\"></path>",
  _tmpl$3933 = "<path d=\"M3 2v2a2 2 45 0 0 2 2h14a2 2 135 0 0 2-2V2\"></path>",
  _tmpl$3934 = "<path d=\"M8 10h2\"></path>",
  _tmpl$3935 = "<path d=\"M9 22v-8\"></path>",
  _tmpl$3936 = "<path d=\"M9 2v4\"></path>",
  _tmpl$3937 = "<rect width=\"10\" height=\"14\" x=\"3\" y=\"8\" rx=\"2\"></rect>",
  _tmpl$3938 = "<path d=\"M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4\"></path>",
  _tmpl$3939 = "<line x1=\"12\" x2=\"12.01\" y1=\"18\" y2=\"18\"></line>",
  _tmpl$3940 = "<circle cx=\"7\" cy=\"7\" r=\"5\"></circle>",
  _tmpl$3941 = "<circle cx=\"17\" cy=\"17\" r=\"5\"></circle>",
  _tmpl$3942 = "<path d=\"M12 17h10\"></path>",
  _tmpl$3943 = "<path d=\"m3.46 10.54 7.08-7.08\"></path>",
  _tmpl$3944 = "<path d=\"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z\"></path>",
  _tmpl$3945 = "<path d=\"m15 5 6.3 6.3a2.4 2.4 0 0 1 0 3.4L17 19\"></path>",
  _tmpl$3946 = "<path d=\"M9.586 5.586A2 2 0 0 0 8.172 5H3a1 1 0 0 0-1 1v5.172a2 2 0 0 0 .586 1.414L8.29 18.29a2.426 2.426 0 0 0 3.42 0l3.58-3.58a2.426 2.426 0 0 0 0-3.42z\"></path>",
  _tmpl$3947 = "<circle cx=\"6.5\" cy=\"9.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$3948 = "<path d=\"M9 4v16\"></path>",
  _tmpl$3949 = "<path d=\"M14 4v16\"></path>",
  _tmpl$3950 = "<path d=\"M19 4v16\"></path>",
  _tmpl$3951 = "<path d=\"M22 6 2 18\"></path>",
  _tmpl$3952 = "<circle cx=\"17\" cy=\"4\" r=\"2\"></circle>",
  _tmpl$3953 = "<path d=\"M15.59 5.41 5.41 15.59\"></path>",
  _tmpl$3954 = "<circle cx=\"4\" cy=\"17\" r=\"2\"></circle>",
  _tmpl$3955 = "<path d=\"M12 22s-4-9-1.5-11.5S22 12 22 12\"></path>",
  _tmpl$3956 = "<path d=\"m10.065 12.493-6.18 1.318a.934.934 0 0 1-1.108-.702l-.537-2.15a1.07 1.07 0 0 1 .691-1.265l13.504-4.44\"></path>",
  _tmpl$3957 = "<path d=\"m13.56 11.747 4.332-.924\"></path>",
  _tmpl$3958 = "<path d=\"m16 21-3.105-6.21\"></path>",
  _tmpl$3959 = "<path d=\"M16.485 5.94a2 2 0 0 1 1.455-2.425l1.09-.272a1 1 0 0 1 1.212.727l1.515 6.06a1 1 0 0 1-.727 1.213l-1.09.272a2 2 0 0 1-2.425-1.455z\"></path>",
  _tmpl$3960 = "<path d=\"m6.158 8.633 1.114 4.456\"></path>",
  _tmpl$3961 = "<path d=\"m8 21 3.105-6.21\"></path>",
  _tmpl$3962 = "<path d=\"m14 5 3-3 3 3\"></path>",
  _tmpl$3963 = "<path d=\"m14 10 3-3 3 3\"></path>",
  _tmpl$3964 = "<path d=\"M17 14V2\"></path>",
  _tmpl$3965 = "<path d=\"M17 14H7l-5 8h20Z\"></path>",
  _tmpl$3966 = "<path d=\"M8 14v8\"></path>",
  _tmpl$3967 = "<path d=\"m9 14 5 8\"></path>",
  _tmpl$3968 = "<path d=\"M3.5 21 14 3\"></path>",
  _tmpl$3969 = "<path d=\"M20.5 21 10 3\"></path>",
  _tmpl$3970 = "<path d=\"M15.5 21 12 15l-3.5 6\"></path>",
  _tmpl$3971 = "<path d=\"M12 19h8\"></path>",
  _tmpl$3972 = "<path d=\"m4 17 6-6-6-6\"></path>",
  _tmpl$3973 = "<path d=\"M21 7 6.82 21.18a2.83 2.83 0 0 1-3.99-.01a2.83 2.83 0 0 1 0-4L17 3\"></path>",
  _tmpl$3974 = "<path d=\"M12 16H4\"></path>",
  _tmpl$3975 = "<path d=\"M14.5 2v17.5c0 1.4-1.1 2.5-2.5 2.5c-1.4 0-2.5-1.1-2.5-2.5V2\"></path>",
  _tmpl$3976 = "<path d=\"M14.5 16h-5\"></path>",
  _tmpl$3977 = "<path d=\"M9 2v17.5A2.5 2.5 0 0 1 6.5 22A2.5 2.5 0 0 1 4 19.5V2\"></path>",
  _tmpl$3978 = "<path d=\"M20 2v17.5a2.5 2.5 0 0 1-2.5 2.5a2.5 2.5 0 0 1-2.5-2.5V2\"></path>",
  _tmpl$3979 = "<path d=\"M3 2h7\"></path>",
  _tmpl$3980 = "<path d=\"M14 2h7\"></path>",
  _tmpl$3981 = "<path d=\"M9 16H4\"></path>",
  _tmpl$3982 = "<path d=\"M20 16h-5\"></path>",
  _tmpl$3983 = "<path d=\"M12 20h-1a2 2 0 0 1-2-2 2 2 0 0 1-2 2H6\"></path>",
  _tmpl$3984 = "<path d=\"M13 8h7a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-7\"></path>",
  _tmpl$3985 = "<path d=\"M5 16H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h1\"></path>",
  _tmpl$3986 = "<path d=\"M6 4h1a2 2 0 0 1 2 2 2 2 0 0 1 2-2h1\"></path>",
  _tmpl$3987 = "<path d=\"M9 6v12\"></path>",
  _tmpl$3988 = "<path d=\"M17 22h-1a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h1\"></path>",
  _tmpl$3989 = "<path d=\"M7 22h1a4 4 0 0 0 4-4v-1\"></path>",
  _tmpl$3990 = "<path d=\"M7 2h1a4 4 0 0 1 4 4v1\"></path>",
  _tmpl$3991 = "<path d=\"M17 6H3\"></path>",
  _tmpl$3992 = "<path d=\"M21 12H8\"></path>",
  _tmpl$3993 = "<path d=\"M21 18H8\"></path>",
  _tmpl$3994 = "<path d=\"M3 12v6\"></path>",
  _tmpl$3995 = "<path d=\"M10 12H3\"></path>",
  _tmpl$3996 = "<circle cx=\"17\" cy=\"15\" r=\"3\"></circle>",
  _tmpl$3997 = "<path d=\"m21 19-1.9-1.9\"></path>",
  _tmpl$3998 = "<path d=\"M15 18H3\"></path>",
  _tmpl$3999 = "<path d=\"M2 10s3-3 3-8\"></path>",
  _tmpl$4000 = "<path d=\"M22 10s-3-3-3-8\"></path>",
  _tmpl$4001 = "<path d=\"M10 2c0 4.4-3.6 8-8 8\"></path>",
  _tmpl$4002 = "<path d=\"M14 2c0 4.4 3.6 8 8 8\"></path>",
  _tmpl$4003 = "<path d=\"M2 10s2 2 2 5\"></path>",
  _tmpl$4004 = "<path d=\"M22 10s-2 2-2 5\"></path>",
  _tmpl$4005 = "<path d=\"M2 22v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1\"></path>",
  _tmpl$4006 = "<path d=\"M14 22v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1\"></path>",
  _tmpl$4007 = "<path d=\"M10.585 15H10\"></path>",
  _tmpl$4008 = "<path d=\"M20 14.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0z\"></path>",
  _tmpl$4009 = "<path d=\"m7 3 3 6h2\"></path>",
  _tmpl$4010 = "<path d=\"M12 9a4 4 0 0 0-2 7.5\"></path>",
  _tmpl$4011 = "<path d=\"M12 3v2\"></path>",
  _tmpl$4012 = "<path d=\"m6.6 18.4-1.4 1.4\"></path>",
  _tmpl$4013 = "<path d=\"M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z\"></path>",
  _tmpl$4014 = "<path d=\"M4 13H2\"></path>",
  _tmpl$4015 = "<path d=\"M6.34 7.34 4.93 5.93\"></path>",
  _tmpl$4016 = "<path d=\"M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z\"></path>",
  _tmpl$4017 = "<path d=\"M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88Z\"></path>",
  _tmpl$4018 = "<path d=\"M7 10v12\"></path>",
  _tmpl$4019 = "<path d=\"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z\"></path>",
  _tmpl$4020 = "<path d=\"M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z\"></path>",
  _tmpl$4021 = "<path d=\"M2 9a3 3 0 1 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 1 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z\"></path>",
  _tmpl$4022 = "<path d=\"m9.5 14.5 5-5\"></path>",
  _tmpl$4023 = "<path d=\"M13 5v2\"></path>",
  _tmpl$4024 = "<path d=\"M13 17v2\"></path>",
  _tmpl$4025 = "<path d=\"M13 11v2\"></path>",
  _tmpl$4026 = "<path d=\"M10.5 17h1.227a2 2 0 0 0 1.345-.52L18 12\"></path>",
  _tmpl$4027 = "<path d=\"m12 13.5 3.75.5\"></path>",
  _tmpl$4028 = "<path d=\"m4.5 8 10.58-5.06a1 1 0 0 1 1.342.488L18.5 8\"></path>",
  _tmpl$4029 = "<path d=\"M6 10V8\"></path>",
  _tmpl$4030 = "<path d=\"M6 14v1\"></path>",
  _tmpl$4031 = "<rect x=\"2\" y=\"8\" width=\"20\" height=\"13\" rx=\"2\"></rect>",
  _tmpl$4032 = "<path d=\"M4.6 11a8 8 0 0 0 1.7 8.7 8 8 0 0 0 8.7 1.7\"></path>",
  _tmpl$4033 = "<path d=\"M7.4 7.4a8 8 0 0 1 10.3 1 8 8 0 0 1 .9 10.2\"></path>",
  _tmpl$4034 = "<path d=\"M12 12v-2\"></path>",
  _tmpl$4035 = "<path d=\"M12 14v-4\"></path>",
  _tmpl$4036 = "<path d=\"M4 13a8 8 0 0 1 8-7 8 8 0 1 1-5.3 14L4 17.6\"></path>",
  _tmpl$4037 = "<path d=\"M9 17H4v5\"></path>",
  _tmpl$4038 = "<line x1=\"10\" x2=\"14\" y1=\"2\" y2=\"2\"></line>",
  _tmpl$4039 = "<line x1=\"12\" x2=\"15\" y1=\"14\" y2=\"11\"></line>",
  _tmpl$4040 = "<circle cx=\"12\" cy=\"14\" r=\"8\"></circle>",
  _tmpl$4041 = "<circle cx=\"9\" cy=\"12\" r=\"3\"></circle>",
  _tmpl$4042 = "<rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"7\"></rect>",
  _tmpl$4043 = "<circle cx=\"15\" cy=\"12\" r=\"3\"></circle>",
  _tmpl$4044 = "<path d=\"M7 12h13a1 1 0 0 1 1 1 5 5 0 0 1-5 5h-.598a.5.5 0 0 0-.424.765l1.544 2.47a.5.5 0 0 1-.424.765H5.402a.5.5 0 0 1-.424-.765L7 18\"></path>",
  _tmpl$4045 = "<path d=\"M8 18a5 5 0 0 1-5-5V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8\"></path>",
  _tmpl$4046 = "<path d=\"M10 15h4\"></path>",
  _tmpl$4047 = "<path d=\"m14.817 10.995-.971-1.45 1.034-1.232a2 2 0 0 0-2.025-3.238l-1.82.364L9.91 3.885a2 2 0 0 0-3.625.748L6.141 6.55l-1.725.426a2 2 0 0 0-.19 3.756l.657.27\"></path>",
  _tmpl$4048 = "<path d=\"m18.822 10.995 2.26-5.38a1 1 0 0 0-.557-1.318L16.954 2.9a1 1 0 0 0-1.281.533l-.924 2.122\"></path>",
  _tmpl$4049 = "<path d=\"M4 12.006A1 1 0 0 1 4.994 11H19a1 1 0 0 1 1 1v7a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z\"></path>",
  _tmpl$4050 = "<path d=\"M21 4H3\"></path>",
  _tmpl$4051 = "<path d=\"M18 8H6\"></path>",
  _tmpl$4052 = "<path d=\"M19 12H9\"></path>",
  _tmpl$4053 = "<path d=\"M16 16h-6\"></path>",
  _tmpl$4054 = "<path d=\"M11 20H9\"></path>",
  _tmpl$4055 = "<ellipse cx=\"12\" cy=\"11\" rx=\"3\" ry=\"2\"></ellipse>",
  _tmpl$4056 = "<ellipse cx=\"12\" cy=\"12.5\" rx=\"10\" ry=\"8.5\"></ellipse>",
  _tmpl$4057 = "<path d=\"M12 20v-6\"></path>",
  _tmpl$4058 = "<path d=\"M19.656 14H22\"></path>",
  _tmpl$4059 = "<path d=\"M2 14h12\"></path>",
  _tmpl$4060 = "<path d=\"M9.656 4H20a2 2 0 0 1 2 2v10.344\"></path>",
  _tmpl$4061 = "<path d=\"M18.2 12.27 20 6H4l1.8 6.27a1 1 0 0 0 .95.73h10.5a1 1 0 0 0 .96-.73Z\"></path>",
  _tmpl$4062 = "<path d=\"M8 13v9\"></path>",
  _tmpl$4063 = "<path d=\"M16 22v-9\"></path>",
  _tmpl$4064 = "<path d=\"m9 6 1 7\"></path>",
  _tmpl$4065 = "<path d=\"m15 6-1 7\"></path>",
  _tmpl$4066 = "<path d=\"M12 6V2\"></path>",
  _tmpl$4067 = "<path d=\"M13 2h-2\"></path>",
  _tmpl$4068 = "<rect width=\"18\" height=\"12\" x=\"3\" y=\"8\" rx=\"1\"></rect>",
  _tmpl$4069 = "<path d=\"M10 8V5c0-.6-.4-1-1-1H6a1 1 0 0 0-1 1v3\"></path>",
  _tmpl$4070 = "<path d=\"M19 8V5c0-.6-.4-1-1-1h-3a1 1 0 0 0-1 1v3\"></path>",
  _tmpl$4071 = "<path d=\"m10 11 11 .9a1 1 0 0 1 .8 1.1l-.665 4.158a1 1 0 0 1-.988.842H20\"></path>",
  _tmpl$4072 = "<path d=\"M16 18h-5\"></path>",
  _tmpl$4073 = "<path d=\"M18 5a1 1 0 0 0-1 1v5.573\"></path>",
  _tmpl$4074 = "<path d=\"M3 4h8.129a1 1 0 0 1 .99.863L13 11.246\"></path>",
  _tmpl$4075 = "<path d=\"M4 11V4\"></path>",
  _tmpl$4076 = "<path d=\"M7 15h.01\"></path>",
  _tmpl$4077 = "<path d=\"M8 10.1V4\"></path>",
  _tmpl$4078 = "<circle cx=\"18\" cy=\"18\" r=\"2\"></circle>",
  _tmpl$4079 = "<circle cx=\"7\" cy=\"15\" r=\"5\"></circle>",
  _tmpl$4080 = "<path d=\"M16.05 10.966a5 2.5 0 0 1-8.1 0\"></path>",
  _tmpl$4081 = "<path d=\"m16.923 14.049 4.48 2.04a1 1 0 0 1 .001 1.831l-8.574 3.9a2 2 0 0 1-1.66 0l-8.574-3.91a1 1 0 0 1 0-1.83l4.484-2.04\"></path>",
  _tmpl$4082 = "<path d=\"M16.949 14.14a5 2.5 0 1 1-9.9 0L10.063 3.5a2 2 0 0 1 3.874 0z\"></path>",
  _tmpl$4083 = "<path d=\"M9.194 6.57a5 2.5 0 0 0 5.61 0\"></path>",
  _tmpl$4084 = "<path d=\"M2 22V12a10 10 0 1 1 20 0v10\"></path>",
  _tmpl$4085 = "<path d=\"M15 6.8v1.4a3 2.8 0 1 1-6 0V6.8\"></path>",
  _tmpl$4086 = "<path d=\"M10 15h.01\"></path>",
  _tmpl$4087 = "<path d=\"M14 15h.01\"></path>",
  _tmpl$4088 = "<path d=\"M10 19a4 4 0 0 1-4-4v-3a6 6 0 1 1 12 0v3a4 4 0 0 1-4 4Z\"></path>",
  _tmpl$4089 = "<path d=\"m9 19-2 3\"></path>",
  _tmpl$4090 = "<path d=\"m15 19 2 3\"></path>",
  _tmpl$4091 = "<path d=\"M8 3.1V7a4 4 0 0 0 8 0V3.1\"></path>",
  _tmpl$4092 = "<path d=\"m9 15-1-1\"></path>",
  _tmpl$4093 = "<path d=\"m15 15 1-1\"></path>",
  _tmpl$4094 = "<path d=\"M9 19c-2.8 0-5-2.2-5-5v-4a8 8 0 0 1 16 0v4c0 2.8-2.2 5-5 5Z\"></path>",
  _tmpl$4095 = "<path d=\"m8 19-2 3\"></path>",
  _tmpl$4096 = "<path d=\"m16 19 2 3\"></path>",
  _tmpl$4097 = "<path d=\"M2 17 17 2\"></path>",
  _tmpl$4098 = "<path d=\"m2 14 8 8\"></path>",
  _tmpl$4099 = "<path d=\"m5 11 8 8\"></path>",
  _tmpl$4100 = "<path d=\"m11 5 8 8\"></path>",
  _tmpl$4101 = "<path d=\"m14 2 8 8\"></path>",
  _tmpl$4102 = "<path d=\"M7 22 22 7\"></path>",
  _tmpl$4103 = "<path d=\"M12 3v8\"></path>",
  _tmpl$4104 = "<path d=\"m18 22-2-3\"></path>",
  _tmpl$4105 = "<path d=\"M14 20h-4\"></path>",
  _tmpl$4106 = "<path d=\"M18 2h4v4\"></path>",
  _tmpl$4107 = "<path d=\"m2 2 7.17 7.17\"></path>",
  _tmpl$4108 = "<path d=\"M2 5.355V2h3.357\"></path>",
  _tmpl$4109 = "<path d=\"m22 2-7.17 7.17\"></path>",
  _tmpl$4110 = "<path d=\"M8 5 5 8\"></path>",
  _tmpl$4111 = "<path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>",
  _tmpl$4112 = "<path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>",
  _tmpl$4113 = "<line x1=\"10\" x2=\"10\" y1=\"11\" y2=\"17\"></line>",
  _tmpl$4114 = "<line x1=\"14\" x2=\"14\" y1=\"11\" y2=\"17\"></line>",
  _tmpl$4115 = "<path d=\"M8 19a4 4 0 0 1-2.24-7.32A3.5 3.5 0 0 1 9 6.03V6a3 3 0 1 1 6 0v.04a3.5 3.5 0 0 1 3.24 5.65A4 4 0 0 1 16 19Z\"></path>",
  _tmpl$4116 = "<path d=\"M13 8c0-2.76-2.46-5-5.5-5S2 5.24 2 8h2l1-1 1 1h4\"></path>",
  _tmpl$4117 = "<path d=\"M13 7.14A5.82 5.82 0 0 1 16.5 6c3.04 0 5.5 2.24 5.5 5h-3l-1-1-1 1h-3\"></path>",
  _tmpl$4118 = "<path d=\"M5.89 9.71c-2.15 2.15-2.3 5.47-.35 7.43l4.24-4.25.7-.7.71-.71 2.12-2.12c-1.95-1.96-5.27-1.8-7.42.35\"></path>",
  _tmpl$4119 = "<path d=\"M11 15.5c.5 2.5-.17 4.5-1 6.5h4c2-5.5-.5-12-1-14\"></path>",
  _tmpl$4120 = "<path d=\"m17 14 3 3.3a1 1 0 0 1-.7 1.7H4.7a1 1 0 0 1-.7-1.7L7 14h-.3a1 1 0 0 1-.7-1.7L9 9h-.2A1 1 0 0 1 8 7.3L12 3l4 4.3a1 1 0 0 1-.8 1.7H15l3 3.3a1 1 0 0 1-.7 1.7H17Z\"></path>",
  _tmpl$4121 = "<path d=\"M12 22v-3\"></path>",
  _tmpl$4122 = "<path d=\"M10 10v.2A3 3 0 0 1 8.9 16H5a3 3 0 0 1-1-5.8V10a3 3 0 0 1 6 0Z\"></path>",
  _tmpl$4123 = "<path d=\"M7 16v6\"></path>",
  _tmpl$4124 = "<path d=\"M13 19v3\"></path>",
  _tmpl$4125 = "<path d=\"M12 19h8.3a1 1 0 0 0 .7-1.7L18 14h.3a1 1 0 0 0 .7-1.7L16 9h.2a1 1 0 0 0 .8-1.7L13 3l-1.4 1.5\"></path>",
  _tmpl$4126 = "<rect width=\"3\" height=\"9\" x=\"7\" y=\"7\"></rect>",
  _tmpl$4127 = "<rect width=\"3\" height=\"5\" x=\"14\" y=\"7\"></rect>",
  _tmpl$4128 = "<path d=\"M16 17h6v-6\"></path>",
  _tmpl$4129 = "<path d=\"m22 17-8.5-8.5-5 5L2 7\"></path>",
  _tmpl$4130 = "<path d=\"M14.828 14.828 21 21\"></path>",
  _tmpl$4131 = "<path d=\"m21 3-9 9-4-4-6 6\"></path>",
  _tmpl$4132 = "<path d=\"M16 7h6v6\"></path>",
  _tmpl$4133 = "<path d=\"m22 7-8.5 8.5-5-5L2 17\"></path>",
  _tmpl$4134 = "<path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\"></path>",
  _tmpl$4135 = "<path d=\"M10.17 4.193a2 2 0 0 1 3.666.013\"></path>",
  _tmpl$4136 = "<path d=\"M14 21h2\"></path>",
  _tmpl$4137 = "<path d=\"m15.874 7.743 1 1.732\"></path>",
  _tmpl$4138 = "<path d=\"m18.849 12.952 1 1.732\"></path>",
  _tmpl$4139 = "<path d=\"M21.824 18.18a2 2 0 0 1-1.835 2.824\"></path>",
  _tmpl$4140 = "<path d=\"M4.024 21a2 2 0 0 1-1.839-2.839\"></path>",
  _tmpl$4141 = "<path d=\"m5.136 12.952-1 1.732\"></path>",
  _tmpl$4142 = "<path d=\"M8 21h2\"></path>",
  _tmpl$4143 = "<path d=\"m8.102 7.743-1 1.732\"></path>",
  _tmpl$4144 = "<path d=\"M22 18a2 2 0 0 1-2 2H3c-1.1 0-1.3-.6-.4-1.3L20.4 4.3c.9-.7 1.6-.4 1.6.7Z\"></path>",
  _tmpl$4145 = "<path d=\"M13.73 4a2 2 0 0 0-3.46 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"></path>",
  _tmpl$4146 = "<path d=\"M10 14.66v1.626a2 2 0 0 1-.976 1.696A5 5 0 0 0 7 21.978\"></path>",
  _tmpl$4147 = "<path d=\"M14 14.66v1.626a2 2 0 0 0 .976 1.696A5 5 0 0 1 17 21.978\"></path>",
  _tmpl$4148 = "<path d=\"M18 9h1.5a1 1 0 0 0 0-5H18\"></path>",
  _tmpl$4149 = "<path d=\"M4 22h16\"></path>",
  _tmpl$4150 = "<path d=\"M6 9a6 6 0 0 0 12 0V3a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1z\"></path>",
  _tmpl$4151 = "<path d=\"M6 9H4.5a1 1 0 0 1 0-5H6\"></path>",
  _tmpl$4152 = "<path d=\"M14 19V7a2 2 0 0 0-2-2H9\"></path>",
  _tmpl$4153 = "<path d=\"M15 19H9\"></path>",
  _tmpl$4154 = "<path d=\"M19 19h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.62L18.3 9.38a1 1 0 0 0-.78-.38H14\"></path>",
  _tmpl$4155 = "<path d=\"M2 13v5a1 1 0 0 0 1 1h2\"></path>",
  _tmpl$4156 = "<path d=\"M4 3 2.15 5.15a.495.495 0 0 0 .35.86h2.15a.47.47 0 0 1 .35.86L3 9.02\"></path>",
  _tmpl$4157 = "<circle cx=\"17\" cy=\"19\" r=\"2\"></circle>",
  _tmpl$4158 = "<circle cx=\"7\" cy=\"19\" r=\"2\"></circle>",
  _tmpl$4159 = "<path d=\"M15 18H9\"></path>",
  _tmpl$4160 = "<path d=\"M19 18h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.624l-3.48-4.35A1 1 0 0 0 17.52 8H14\"></path>",
  _tmpl$4161 = "<path d=\"m12 10 2 4v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3a8 8 0 1 0-16 0v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3l2-4h4Z\"></path>",
  _tmpl$4162 = "<path d=\"M4.82 7.9 8 10\"></path>",
  _tmpl$4163 = "<path d=\"M15.18 7.9 12 10\"></path>",
  _tmpl$4164 = "<path d=\"M16.93 10H20a2 2 0 0 1 0 4H2\"></path>",
  _tmpl$4165 = "<path d=\"m17 2-5 5-5-5\"></path>",
  _tmpl$4166 = "<rect width=\"20\" height=\"15\" x=\"2\" y=\"7\" rx=\"2\"></rect>",
  _tmpl$4167 = "<path d=\"M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7\"></path>",
  _tmpl$4168 = "<path d=\"M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z\"></path>",
  _tmpl$4169 = "<path d=\"M14 16.5a.5.5 0 0 0 .5.5h.5a2 2 0 0 1 0 4H9a2 2 0 0 1 0-4h.5a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V8a2 2 0 0 1-4 0V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v3a2 2 0 0 1-4 0v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5Z\"></path>",
  _tmpl$4170 = "<path d=\"M12 4v16\"></path>",
  _tmpl$4171 = "<path d=\"M4 7V5a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2\"></path>",
  _tmpl$4172 = "<path d=\"M9 20h6\"></path>",
  _tmpl$4173 = "<path d=\"M15.5 21a1.85 1.85 0 0 1-3.5-1v-8H2a10 10 0 0 1 3.428-6.575\"></path>",
  _tmpl$4174 = "<path d=\"M17.5 12H22A10 10 0 0 0 9.004 3.455\"></path>",
  _tmpl$4175 = "<path d=\"M22 12a10.06 10.06 1 0 0-20 0Z\"></path>",
  _tmpl$4176 = "<path d=\"M12 12v8a2 2 0 0 0 4 0\"></path>",
  _tmpl$4177 = "<path d=\"M6 4v6a6 6 0 0 0 12 0V4\"></path>",
  _tmpl$4178 = "<line x1=\"4\" x2=\"20\" y1=\"20\" y2=\"20\"></line>",
  _tmpl$4179 = "<path d=\"M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5a5.5 5.5 0 0 1-5.5 5.5H11\"></path>",
  _tmpl$4180 = "<path d=\"M21 17a9 9 0 0 0-15-6.7L3 13\"></path>",
  _tmpl$4181 = "<path d=\"M3 7v6h6\"></path>",
  _tmpl$4182 = "<path d=\"M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13\"></path>",
  _tmpl$4183 = "<path d=\"M16 12h6\"></path>",
  _tmpl$4184 = "<path d=\"M8 12H2\"></path>",
  _tmpl$4185 = "<path d=\"m19 15 3-3-3-3\"></path>",
  _tmpl$4186 = "<path d=\"m15 5-3-3-3 3\"></path>",
  _tmpl$4187 = "<rect width=\"8\" height=\"6\" x=\"5\" y=\"4\" rx=\"1\"></rect>",
  _tmpl$4188 = "<rect width=\"8\" height=\"6\" x=\"11\" y=\"14\" rx=\"1\"></rect>",
  _tmpl$4189 = "<path d=\"M14 21v-3a2 2 0 0 0-4 0v3\"></path>",
  _tmpl$4190 = "<path d=\"M18 16h.01\"></path>",
  _tmpl$4191 = "<path d=\"M22 7a1 1 0 0 0-1-1h-2a2 2 0 0 1-1.143-.359L13.143 2.36a2 2 0 0 0-2.286-.001L6.143 5.64A2 2 0 0 1 5 6H3a1 1 0 0 0-1 1v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2z\"></path>",
  _tmpl$4192 = "<path d=\"M6 16h.01\"></path>",
  _tmpl$4193 = "<circle cx=\"12\" cy=\"10\" r=\"2\"></circle>",
  _tmpl$4194 = "<path d=\"M15 7h2a5 5 0 0 1 0 10h-2m-6 0H7A5 5 0 0 1 7 7h2\"></path>",
  _tmpl$4195 = "<path d=\"m18.84 12.25 1.72-1.71h-.02a5.004 5.004 0 0 0-.12-7.07 5.006 5.006 0 0 0-6.95 0l-1.72 1.71\"></path>",
  _tmpl$4196 = "<path d=\"m5.17 11.75-1.71 1.71a5.004 5.004 0 0 0 .12 7.07 5.006 5.006 0 0 0 6.95 0l1.71-1.71\"></path>",
  _tmpl$4197 = "<line x1=\"8\" x2=\"8\" y1=\"2\" y2=\"5\"></line>",
  _tmpl$4198 = "<line x1=\"2\" x2=\"5\" y1=\"8\" y2=\"8\"></line>",
  _tmpl$4199 = "<line x1=\"16\" x2=\"16\" y1=\"19\" y2=\"22\"></line>",
  _tmpl$4200 = "<line x1=\"19\" x2=\"22\" y1=\"16\" y2=\"16\"></line>",
  _tmpl$4201 = "<path d=\"m19 5 3-3\"></path>",
  _tmpl$4202 = "<path d=\"m12 6 6 6 2.3-2.3a2.4 2.4 0 0 0 0-3.4l-2.6-2.6a2.4 2.4 0 0 0-3.4 0Z\"></path>",
  _tmpl$4203 = "<path d=\"m17 8-5-5-5 5\"></path>",
  _tmpl$4204 = "<circle cx=\"10\" cy=\"7\" r=\"1\"></circle>",
  _tmpl$4205 = "<circle cx=\"4\" cy=\"20\" r=\"1\"></circle>",
  _tmpl$4206 = "<path d=\"M4.7 19.3 19 5\"></path>",
  _tmpl$4207 = "<path d=\"m21 3-3 1 2 2Z\"></path>",
  _tmpl$4208 = "<path d=\"M9.26 7.68 5 12l2 5\"></path>",
  _tmpl$4209 = "<path d=\"m10 14 5 2 3.5-3.5\"></path>",
  _tmpl$4210 = "<path d=\"m18 12 1-1 1 1-1 1Z\"></path>",
  _tmpl$4211 = "<path d=\"m16 11 2 2 4-4\"></path>",
  _tmpl$4212 = "<path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\"></path>",
  _tmpl$4213 = "<circle cx=\"9\" cy=\"7\" r=\"4\"></circle>",
  _tmpl$4214 = "<path d=\"M10 15H6a4 4 0 0 0-4 4v2\"></path>",
  _tmpl$4215 = "<path d=\"m14.305 16.53.923-.382\"></path>",
  _tmpl$4216 = "<path d=\"m15.228 13.852-.923-.383\"></path>",
  _tmpl$4217 = "<path d=\"m16.852 12.228-.383-.923\"></path>",
  _tmpl$4218 = "<path d=\"m16.852 17.772-.383.924\"></path>",
  _tmpl$4219 = "<path d=\"m19.148 12.228.383-.923\"></path>",
  _tmpl$4220 = "<path d=\"m19.53 18.696-.382-.924\"></path>",
  _tmpl$4221 = "<path d=\"m20.772 13.852.924-.383\"></path>",
  _tmpl$4222 = "<path d=\"m20.772 16.148.924.383\"></path>",
  _tmpl$4223 = "<circle cx=\"18\" cy=\"15\" r=\"3\"></circle>",
  _tmpl$4224 = "<circle cx=\"10\" cy=\"7\" r=\"4\"></circle>",
  _tmpl$4225 = "<path d=\"M10.3 15H7a4 4 0 0 0-4 4v2\"></path>",
  _tmpl$4226 = "<path d=\"M15 15.5V14a2 2 0 0 1 4 0v1.5\"></path>",
  _tmpl$4227 = "<rect width=\"8\" height=\"5\" x=\"13\" y=\"16\" rx=\".899\"></rect>",
  _tmpl$4228 = "<line x1=\"22\" x2=\"16\" y1=\"11\" y2=\"11\"></line>",
  _tmpl$4229 = "<path d=\"M11.5 15H7a4 4 0 0 0-4 4v2\"></path>",
  _tmpl$4230 = "<line x1=\"19\" x2=\"19\" y1=\"8\" y2=\"14\"></line>",
  _tmpl$4231 = "<path d=\"M2 21a8 8 0 0 1 13.292-6\"></path>",
  _tmpl$4232 = "<circle cx=\"10\" cy=\"8\" r=\"5\"></circle>",
  _tmpl$4233 = "<path d=\"M2 21a8 8 0 0 1 10.434-7.62\"></path>",
  _tmpl$4234 = "<path d=\"M22 19h-6\"></path>",
  _tmpl$4235 = "<path d=\"M2 21a8 8 0 0 1 10.821-7.487\"></path>",
  _tmpl$4236 = "<path d=\"m22 22-1.9-1.9\"></path>",
  _tmpl$4237 = "<path d=\"M2 21a8 8 0 0 1 11.873-7\"></path>",
  _tmpl$4238 = "<circle cx=\"12\" cy=\"8\" r=\"5\"></circle>",
  _tmpl$4239 = "<path d=\"M20 21a8 8 0 0 0-16 0\"></path>",
  _tmpl$4240 = "<line x1=\"17\" x2=\"22\" y1=\"8\" y2=\"13\"></line>",
  _tmpl$4241 = "<line x1=\"22\" x2=\"17\" y1=\"8\" y2=\"13\"></line>",
  _tmpl$4242 = "<path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path>",
  _tmpl$4243 = "<circle cx=\"12\" cy=\"7\" r=\"4\"></circle>",
  _tmpl$4244 = "<path d=\"M18 21a8 8 0 0 0-16 0\"></path>",
  _tmpl$4245 = "<path d=\"M22 20c0-3.37-2-6.5-4-8a5 5 0 0 0-.45-8.3\"></path>",
  _tmpl$4246 = "<path d=\"M16 3.128a4 4 0 0 1 0 7.744\"></path>",
  _tmpl$4247 = "<path d=\"M22 21v-2a4 4 0 0 0-3-3.87\"></path>",
  _tmpl$4248 = "<path d=\"m16 2-2.3 2.3a3 3 0 0 0 0 4.2l1.8 1.8a3 3 0 0 0 4.2 0L22 8\"></path>",
  _tmpl$4249 = "<path d=\"M15 15 3.3 3.3a4.2 4.2 0 0 0 0 6l7.3 7.3c.7.7 2 .7 2.8 0L15 15Zm0 0 7 7\"></path>",
  _tmpl$4250 = "<path d=\"m2.1 21.8 6.4-6.3\"></path>",
  _tmpl$4251 = "<path d=\"m19 5-7 7\"></path>",
  _tmpl$4252 = "<path d=\"M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2\"></path>",
  _tmpl$4253 = "<path d=\"M7 2v20\"></path>",
  _tmpl$4254 = "<path d=\"M21 15V2a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7\"></path>",
  _tmpl$4255 = "<path d=\"M2 5h20\"></path>",
  _tmpl$4256 = "<path d=\"M3 3v2\"></path>",
  _tmpl$4257 = "<path d=\"M7 3v2\"></path>",
  _tmpl$4258 = "<path d=\"M21 3v2\"></path>",
  _tmpl$4259 = "<path d=\"m19 5-7 7-7-7\"></path>",
  _tmpl$4260 = "<path d=\"m7.9 7.9 2.7 2.7\"></path>",
  _tmpl$4261 = "<path d=\"m13.4 10.6 2.7-2.7\"></path>",
  _tmpl$4262 = "<path d=\"m7.9 16.1 2.7-2.7\"></path>",
  _tmpl$4263 = "<circle cx=\"16.5\" cy=\"16.5\" r=\".5\" fill=\"currentColor\"></circle>",
  _tmpl$4264 = "<path d=\"m13.4 13.4 2.7 2.7\"></path>",
  _tmpl$4265 = "<path d=\"M19.5 7a24 24 0 0 1 0 10\"></path>",
  _tmpl$4266 = "<path d=\"M4.5 7a24 24 0 0 0 0 10\"></path>",
  _tmpl$4267 = "<path d=\"M7 19.5a24 24 0 0 0 10 0\"></path>",
  _tmpl$4268 = "<path d=\"M7 4.5a24 24 0 0 1 10 0\"></path>",
  _tmpl$4269 = "<rect x=\"17\" y=\"17\" width=\"5\" height=\"5\" rx=\"1\"></rect>",
  _tmpl$4270 = "<rect x=\"17\" y=\"2\" width=\"5\" height=\"5\" rx=\"1\"></rect>",
  _tmpl$4271 = "<rect x=\"2\" y=\"17\" width=\"5\" height=\"5\" rx=\"1\"></rect>",
  _tmpl$4272 = "<rect x=\"2\" y=\"2\" width=\"5\" height=\"5\" rx=\"1\"></rect>",
  _tmpl$4273 = "<path d=\"M16 8q6 0 6-6-6 0-6 6\"></path>",
  _tmpl$4274 = "<path d=\"M17.41 3.59a10 10 0 1 0 3 3\"></path>",
  _tmpl$4275 = "<path d=\"M2 2a26.6 26.6 0 0 1 10 20c.9-6.82 1.5-9.5 4-14\"></path>",
  _tmpl$4276 = "<path d=\"M18 11c-1.5 0-2.5.5-3 2\"></path>",
  _tmpl$4277 = "<path d=\"M4 6a2 2 0 0 0-2 2v4a5 5 0 0 0 5 5 8 8 0 0 1 5 2 8 8 0 0 1 5-2 5 5 0 0 0 5-5V8a2 2 0 0 0-2-2h-3a8 8 0 0 0-5 2 8 8 0 0 0-5-2z\"></path>",
  _tmpl$4278 = "<path d=\"M6 11c1.5 0 2.5.5 3 2\"></path>",
  _tmpl$4279 = "<path d=\"M17 2h4v4\"></path>",
  _tmpl$4280 = "<path d=\"m21 2-5.46 5.46\"></path>",
  _tmpl$4281 = "<circle cx=\"12\" cy=\"11\" r=\"5\"></circle>",
  _tmpl$4282 = "<path d=\"M12 15v7\"></path>",
  _tmpl$4283 = "<circle cx=\"12\" cy=\"9\" r=\"6\"></circle>",
  _tmpl$4284 = "<path d=\"m2 8 2 2-2 2 2 2-2 2\"></path>",
  _tmpl$4285 = "<path d=\"m22 8-2 2 2 2-2 2 2 2\"></path>",
  _tmpl$4286 = "<path d=\"M8 8v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2\"></path>",
  _tmpl$4287 = "<path d=\"M16 10.34V6c0-.55-.45-1-1-1h-4.34\"></path>",
  _tmpl$4288 = "<rect width=\"8\" height=\"14\" x=\"8\" y=\"5\" rx=\"1\"></rect>",
  _tmpl$4289 = "<path d=\"M10.66 6H14a2 2 0 0 1 2 2v2.5l5.248-3.062A.5.5 0 0 1 22 7.87v8.196\"></path>",
  _tmpl$4290 = "<path d=\"M16 16a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2\"></path>",
  _tmpl$4291 = "<path d=\"m16 13 5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5\"></path>",
  _tmpl$4292 = "<rect x=\"2\" y=\"6\" width=\"14\" height=\"12\" rx=\"2\"></rect>",
  _tmpl$4293 = "<circle cx=\"8\" cy=\"14\" r=\"2\"></circle>",
  _tmpl$4294 = "<circle cx=\"16\" cy=\"14\" r=\"2\"></circle>",
  _tmpl$4295 = "<path d=\"M21 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2\"></path>",
  _tmpl$4296 = "<path d=\"M21 7V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2\"></path>",
  _tmpl$4297 = "<circle cx=\"6\" cy=\"12\" r=\"4\"></circle>",
  _tmpl$4298 = "<circle cx=\"18\" cy=\"12\" r=\"4\"></circle>",
  _tmpl$4299 = "<line x1=\"6\" x2=\"18\" y1=\"16\" y2=\"16\"></line>",
  _tmpl$4300 = "<path d=\"M11.1 7.1a16.55 16.55 0 0 1 10.9 4\"></path>",
  _tmpl$4301 = "<path d=\"M12 12a12.6 12.6 0 0 1-8.7 5\"></path>",
  _tmpl$4302 = "<path d=\"M16.8 13.6a16.55 16.55 0 0 1-9 7.5\"></path>",
  _tmpl$4303 = "<path d=\"M20.7 17a12.8 12.8 0 0 0-8.7-5 13.3 13.3 0 0 1 0-10\"></path>",
  _tmpl$4304 = "<path d=\"M6.3 3.8a16.55 16.55 0 0 0 1.9 11.5\"></path>",
  _tmpl$4305 = "<path d=\"M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z\"></path>",
  _tmpl$4306 = "<path d=\"M16 9a5 5 0 0 1 0 6\"></path>",
  _tmpl$4307 = "<path d=\"M19.364 18.364a9 9 0 0 0 0-12.728\"></path>",
  _tmpl$4308 = "<path d=\"M16 9a5 5 0 0 1 .95 2.293\"></path>",
  _tmpl$4309 = "<path d=\"M19.364 5.636a9 9 0 0 1 1.889 9.96\"></path>",
  _tmpl$4310 = "<path d=\"m7 7-.587.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298V11\"></path>",
  _tmpl$4311 = "<path d=\"M9.828 4.172A.686.686 0 0 1 11 4.657v.686\"></path>",
  _tmpl$4312 = "<line x1=\"22\" x2=\"16\" y1=\"9\" y2=\"15\"></line>",
  _tmpl$4313 = "<line x1=\"16\" x2=\"22\" y1=\"9\" y2=\"15\"></line>",
  _tmpl$4314 = "<path d=\"M5 7c0-1.1.9-2 2-2h10a2 2 0 0 1 2 2v12H5V7Z\"></path>",
  _tmpl$4315 = "<path d=\"M22 19H2\"></path>",
  _tmpl$4316 = "<path d=\"M3 9a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2\"></path>",
  _tmpl$4317 = "<path d=\"M3 11h3c.8 0 1.6.3 2.1.9l1.1.9c1.6 1.6 4.1 1.6 5.7 0l1.1-.9c.5-.5 1.3-.9 2.1-.9H21\"></path>",
  _tmpl$4318 = "<path d=\"M7 7h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14\"></path>",
  _tmpl$4319 = "<path d=\"M19 7V4a1 1 0 0 0-1-1H5a2 2 0 0 0 0 4h15a1 1 0 0 1 1 1v4h-3a2 2 0 0 0 0 4h3a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1\"></path>",
  _tmpl$4320 = "<path d=\"M3 5v14a2 2 0 0 0 2 2h15a1 1 0 0 0 1-1v-4\"></path>",
  _tmpl$4321 = "<circle cx=\"8\" cy=\"9\" r=\"2\"></circle>",
  _tmpl$4322 = "<path d=\"m9 17 6.1-6.1a2 2 0 0 1 2.81.01L22 15V5a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2\"></path>",
  _tmpl$4323 = "<path d=\"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72\"></path>",
  _tmpl$4324 = "<path d=\"M5 6v4\"></path>",
  _tmpl$4325 = "<path d=\"M19 14v4\"></path>",
  _tmpl$4326 = "<path d=\"M7 8H3\"></path>",
  _tmpl$4327 = "<path d=\"M21 16h-4\"></path>",
  _tmpl$4328 = "<path d=\"M11 3H9\"></path>",
  _tmpl$4329 = "<path d=\"M15 4V2\"></path>",
  _tmpl$4330 = "<path d=\"M15 16v-2\"></path>",
  _tmpl$4331 = "<path d=\"M20 9h2\"></path>",
  _tmpl$4332 = "<path d=\"M17.8 11.8 19 13\"></path>",
  _tmpl$4333 = "<path d=\"M17.8 6.2 19 5\"></path>",
  _tmpl$4334 = "<path d=\"M12.2 6.2 11 5\"></path>",
  _tmpl$4335 = "<path d=\"M18 21V10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v11\"></path>",
  _tmpl$4336 = "<path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 1.132-1.803l7.95-3.974a2 2 0 0 1 1.837 0l7.948 3.974A2 2 0 0 1 22 8z\"></path>",
  _tmpl$4337 = "<path d=\"M6 13h12\"></path>",
  _tmpl$4338 = "<path d=\"M3 6h3\"></path>",
  _tmpl$4339 = "<path d=\"M17 6h.01\"></path>",
  _tmpl$4340 = "<rect width=\"18\" height=\"20\" x=\"3\" y=\"2\" rx=\"2\"></rect>",
  _tmpl$4341 = "<circle cx=\"12\" cy=\"13\" r=\"5\"></circle>",
  _tmpl$4342 = "<path d=\"M12 18a2.5 2.5 0 0 0 0-5 2.5 2.5 0 0 1 0-5\"></path>",
  _tmpl$4343 = "<path d=\"M12 10v2.2l1.6 1\"></path>",
  _tmpl$4344 = "<path d=\"m16.13 7.66-.81-4.05a2 2 0 0 0-2-1.61h-2.68a2 2 0 0 0-2 1.61l-.78 4.05\"></path>",
  _tmpl$4345 = "<path d=\"m7.88 16.36.8 4a2 2 0 0 0 2 1.61h2.72a2 2 0 0 0 2-1.61l.81-4.05\"></path>",
  _tmpl$4346 = "<path d=\"M19 5a2 2 0 0 0-2 2v11\"></path>",
  _tmpl$4347 = "<path d=\"M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\"></path>",
  _tmpl$4348 = "<path d=\"M7 13h10\"></path>",
  _tmpl$4349 = "<path d=\"M7 9h10\"></path>",
  _tmpl$4350 = "<path d=\"M9 5a2 2 0 0 0-2 2v11\"></path>",
  _tmpl$4351 = "<path d=\"M2 6c.6.5 1.2 1 2.5 1C7 7 7 5 9.5 5c2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\"></path>",
  _tmpl$4352 = "<path d=\"M2 12c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\"></path>",
  _tmpl$4353 = "<circle cx=\"12\" cy=\"4.5\" r=\"2.5\"></circle>",
  _tmpl$4354 = "<path d=\"m10.2 6.3-3.9 3.9\"></path>",
  _tmpl$4355 = "<circle cx=\"4.5\" cy=\"12\" r=\"2.5\"></circle>",
  _tmpl$4356 = "<circle cx=\"19.5\" cy=\"12\" r=\"2.5\"></circle>",
  _tmpl$4357 = "<path d=\"m13.8 17.7 3.9-3.9\"></path>",
  _tmpl$4358 = "<circle cx=\"12\" cy=\"19.5\" r=\"2.5\"></circle>",
  _tmpl$4359 = "<circle cx=\"12\" cy=\"10\" r=\"8\"></circle>",
  _tmpl$4360 = "<path d=\"M7 22h10\"></path>",
  _tmpl$4361 = "<path d=\"M17 17h-5c-1.09-.02-1.94.92-2.5 1.9A3 3 0 1 1 2.57 15\"></path>",
  _tmpl$4362 = "<path d=\"M9 3.4a4 4 0 0 1 6.52.66\"></path>",
  _tmpl$4363 = "<path d=\"m6 17 3.1-5.8a2.5 2.5 0 0 0 .057-2.05\"></path>",
  _tmpl$4364 = "<path d=\"M20.3 20.3a4 4 0 0 1-2.3.7\"></path>",
  _tmpl$4365 = "<path d=\"M18.6 13a4 4 0 0 1 3.357 3.414\"></path>",
  _tmpl$4366 = "<path d=\"m12 6 .6 1\"></path>",
  _tmpl$4367 = "<path d=\"M18 16.98h-5.99c-1.1 0-1.95.94-2.48 1.9A4 4 0 0 1 2 17c.01-.7.2-1.4.57-2\"></path>",
  _tmpl$4368 = "<path d=\"m6 17 3.13-5.78c.53-.97.1-2.18-.5-3.1a4 4 0 1 1 6.89-4.06\"></path>",
  _tmpl$4369 = "<path d=\"m12 6 3.13 5.73C15.66 12.7 16.9 13 18 13a4 4 0 0 1 0 8\"></path>",
  _tmpl$4370 = "<path d=\"M6.5 8a2 2 0 0 0-1.905 1.46L2.1 18.5A2 2 0 0 0 4 21h16a2 2 0 0 0 1.925-2.54L19.4 9.5A2 2 0 0 0 17.48 8Z\"></path>",
  _tmpl$4371 = "<path d=\"m16 8-1.17 1.17\"></path>",
  _tmpl$4372 = "<path d=\"M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z\"></path>",
  _tmpl$4373 = "<path d=\"m8 8-.53.53a3.5 3.5 0 0 0 0 4.94L9 15l1.53-1.53c.55-.55.88-1.25.98-1.97\"></path>",
  _tmpl$4374 = "<path d=\"M10.91 5.26c.15-.26.34-.51.56-.73L13 3l1.53 1.53a3.5 3.5 0 0 1 .28 4.62\"></path>",
  _tmpl$4375 = "<path d=\"M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z\"></path>",
  _tmpl$4376 = "<path d=\"M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z\"></path>",
  _tmpl$4377 = "<path d=\"m16 16-.53.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.49 3.49 0 0 1 1.97-.98\"></path>",
  _tmpl$4378 = "<path d=\"M18.74 13.09c.26-.15.51-.34.73-.56L21 11l-1.53-1.53a3.5 3.5 0 0 0-4.62-.28\"></path>",
  _tmpl$4379 = "<path d=\"M2 22 16 8\"></path>",
  _tmpl$4380 = "<path d=\"M7.47 8.53 9 7l1.53 1.53a3.5 3.5 0 0 1 0 4.94L9 15l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z\"></path>",
  _tmpl$4381 = "<path d=\"M11.47 4.53 13 3l1.53 1.53a3.5 3.5 0 0 1 0 4.94L13 11l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z\"></path>",
  _tmpl$4382 = "<path d=\"M15.47 13.47 17 15l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z\"></path>",
  _tmpl$4383 = "<path d=\"M19.47 9.47 21 11l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L13 11l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z\"></path>",
  _tmpl$4384 = "<path d=\"M2 7.82a15 15 0 0 1 20 0\"></path>",
  _tmpl$4385 = "<path d=\"M5 11.858a10 10 0 0 1 11.5-1.785\"></path>",
  _tmpl$4386 = "<path d=\"M8.5 15.429a5 5 0 0 1 2.413-1.31\"></path>",
  _tmpl$4387 = "<path d=\"M5 12.859a10 10 0 0 1 14 0\"></path>",
  _tmpl$4388 = "<path d=\"M8.5 16.429a5 5 0 0 1 7 0\"></path>",
  _tmpl$4389 = "<path d=\"M5 12.859a10 10 0 0 1 5.17-2.69\"></path>",
  _tmpl$4390 = "<path d=\"M19 12.859a10 10 0 0 0-2.007-1.523\"></path>",
  _tmpl$4391 = "<path d=\"M2 8.82a15 15 0 0 1 4.177-2.643\"></path>",
  _tmpl$4392 = "<path d=\"M22 8.82a15 15 0 0 0-11.288-3.764\"></path>",
  _tmpl$4393 = "<path d=\"M2 8.82a15 15 0 0 1 20 0\"></path>",
  _tmpl$4394 = "<path d=\"M5 12.859a10 10 0 0 1 10.5-2.222\"></path>",
  _tmpl$4395 = "<path d=\"M8.5 16.429a5 5 0 0 1 3-1.406\"></path>",
  _tmpl$4396 = "<path d=\"M10 2v8\"></path>",
  _tmpl$4397 = "<path d=\"M12.8 21.6A2 2 0 1 0 14 18H2\"></path>",
  _tmpl$4398 = "<path d=\"M17.5 10a2.5 2.5 0 1 1 2 4H2\"></path>",
  _tmpl$4399 = "<path d=\"m6 6 4 4 4-4\"></path>",
  _tmpl$4400 = "<path d=\"M12.8 19.6A2 2 0 1 0 14 16H2\"></path>",
  _tmpl$4401 = "<path d=\"M17.5 8a2.5 2.5 0 1 1 2 4H2\"></path>",
  _tmpl$4402 = "<path d=\"M9.8 4.4A2 2 0 1 1 11 8H2\"></path>",
  _tmpl$4403 = "<path d=\"M7 10h3m7 0h-1.343\"></path>",
  _tmpl$4404 = "<path d=\"M7.307 7.307A12.33 12.33 0 0 0 7 10a5 5 0 0 0 7.391 4.391M8.638 2.981C8.75 2.668 8.872 2.34 9 2h6c1.5 4 2 6 2 8 0 .407-.05.809-.145 1.198\"></path>",
  _tmpl$4405 = "<path d=\"M12 15a5 5 0 0 0 5-5c0-2-.5-4-2-8H9c-1.5 4-2 6-2 8a5 5 0 0 0 5 5Z\"></path>",
  _tmpl$4406 = "<rect width=\"8\" height=\"8\" x=\"3\" y=\"3\" rx=\"2\"></rect>",
  _tmpl$4407 = "<path d=\"M7 11v4a2 2 0 0 0 2 2h4\"></path>",
  _tmpl$4408 = "<rect width=\"8\" height=\"8\" x=\"13\" y=\"13\" rx=\"2\"></rect>",
  _tmpl$4409 = "<path d=\"m19 12-1.5 3\"></path>",
  _tmpl$4410 = "<path d=\"M19.63 18.81 22 20\"></path>",
  _tmpl$4411 = "<path d=\"M6.47 8.23a1.68 1.68 0 0 1 2.44 1.93l-.64 2.08a6.76 6.76 0 0 0 10.16 7.67l.42-.27a1 1 0 1 0-2.73-4.21l-.42.27a1.76 1.76 0 0 1-2.63-1.99l.64-2.08A6.66 6.66 0 0 0 3.94 3.9l-.7.4a1 1 0 1 0 2.55 4.34z\"></path>",
  _tmpl$4412 = "<path d=\"M3 12h15a3 3 0 1 1 0 6h-4\"></path>",
  _tmpl$4413 = "<path d=\"M3 18h7\"></path>",
  _tmpl$4414 = "<path d=\"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"></path>",
  _tmpl$4415 = "<path d=\"M18 6 6 18\"></path>",
  _tmpl$4416 = "<path d=\"m6 6 12 12\"></path>",
  _tmpl$4417 = "<path d=\"M2.5 17a24.12 24.12 0 0 1 0-10 2 2 0 0 1 1.4-1.4 49.56 49.56 0 0 1 16.2 0A2 2 0 0 1 21.5 7a24.12 24.12 0 0 1 0 10 2 2 0 0 1-1.4 1.4 49.55 49.55 0 0 1-16.2 0A2 2 0 0 1 2.5 17\"></path>",
  _tmpl$4418 = "<path d=\"m10 15 5-3-5-3z\"></path>",
  _tmpl$4419 = "<path d=\"M10.513 4.856 13.12 2.17a.5.5 0 0 1 .86.46l-1.377 4.317\"></path>",
  _tmpl$4420 = "<path d=\"M15.656 10H20a1 1 0 0 1 .78 1.63l-1.72 1.773\"></path>",
  _tmpl$4421 = "<path d=\"M16.273 16.273 10.88 21.83a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14H4a1 1 0 0 1-.78-1.63l4.507-4.643\"></path>",
  _tmpl$4422 = "<path d=\"M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z\"></path>",
  _tmpl$4423 = "<line x1=\"21\" x2=\"16.65\" y1=\"21\" y2=\"16.65\"></line>",
  _tmpl$4424 = "<line x1=\"11\" x2=\"11\" y1=\"8\" y2=\"14\"></line>",
  _tmpl$4425 = "<line x1=\"8\" x2=\"14\" y1=\"11\" y2=\"11\"></line>";
// AUTO-GENERATED FILE. DO NOT EDIT BY HAND.
// Icon set: lucide | License: ISC (ISC_URL)
import { mergeProps } from 'solid-js';
import { lucideDefaultProps } from './lucidedefaultProps';
export function LucideAArrowDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$), _$ssr(_tmpl$2), _$ssr(_tmpl$3), _$ssr(_tmpl$4)], true);
}
export function LucideAArrowUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$), _$ssr(_tmpl$2), _$ssr(_tmpl$5), _$ssr(_tmpl$6)], true);
}
export function LucideALargeSmall(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$7), _$ssr(_tmpl$8), _$ssr(_tmpl$9), _$ssr(_tmpl$0)], true);
}
export function LucideAccessibility(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1), _$ssr(_tmpl$10), _$ssr(_tmpl$11), _$ssr(_tmpl$12), _$ssr(_tmpl$13)], true);
}
export function LucideActivity(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$14), true);
}
export function LucideAirVent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$15), _$ssr(_tmpl$16), _$ssr(_tmpl$17), _$ssr(_tmpl$18)], true);
}
export function LucideAirplay(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$19), _$ssr(_tmpl$20)], true);
}
export function LucideAlarmClockCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$21), _$ssr(_tmpl$22), _$ssr(_tmpl$23), _$ssr(_tmpl$24), _$ssr(_tmpl$25), _$ssr(_tmpl$26)], true);
}
export function LucideAlarmClockMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$21), _$ssr(_tmpl$22), _$ssr(_tmpl$23), _$ssr(_tmpl$24), _$ssr(_tmpl$25), _$ssr(_tmpl$27)], true);
}
export function LucideAlarmClockOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$28), _$ssr(_tmpl$29), _$ssr(_tmpl$23), _$ssr(_tmpl$30), _$ssr(_tmpl$31), _$ssr(_tmpl$32)], true);
}
export function LucideAlarmClockPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$21), _$ssr(_tmpl$22), _$ssr(_tmpl$23), _$ssr(_tmpl$24), _$ssr(_tmpl$25), _$ssr(_tmpl$33), _$ssr(_tmpl$27)], true);
}
export function LucideAlarmClock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$21), _$ssr(_tmpl$34), _$ssr(_tmpl$22), _$ssr(_tmpl$23), _$ssr(_tmpl$24), _$ssr(_tmpl$25)], true);
}
export function LucideAlarmSmoke(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$35), _$ssr(_tmpl$36), _$ssr(_tmpl$37), _$ssr(_tmpl$38), _$ssr(_tmpl$39)], true);
}
export function LucideAlbum(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$41)], true);
}
export function LucideAlignCenterHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$42), _$ssr(_tmpl$43), _$ssr(_tmpl$44), _$ssr(_tmpl$45), _$ssr(_tmpl$46)], true);
}
export function LucideAlignCenterVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$47), _$ssr(_tmpl$48), _$ssr(_tmpl$49), _$ssr(_tmpl$50), _$ssr(_tmpl$51)], true);
}
export function LucideAlignCenter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$52), _$ssr(_tmpl$53), _$ssr(_tmpl$54)], true);
}
export function LucideAlignEndHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$55), _$ssr(_tmpl$56), _$ssr(_tmpl$57)], true);
}
export function LucideAlignEndVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$58), _$ssr(_tmpl$59), _$ssr(_tmpl$60)], true);
}
export function LucideAlignHorizontalDistributeCenter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$61), _$ssr(_tmpl$62), _$ssr(_tmpl$63), _$ssr(_tmpl$64), _$ssr(_tmpl$65), _$ssr(_tmpl$66)], true);
}
export function LucideAlignHorizontalDistributeEnd(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$61), _$ssr(_tmpl$62), _$ssr(_tmpl$67), _$ssr(_tmpl$68)], true);
}
export function LucideAlignHorizontalDistributeStart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$61), _$ssr(_tmpl$62), _$ssr(_tmpl$69), _$ssr(_tmpl$70)], true);
}
export function LucideAlignHorizontalJustifyCenter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$71), _$ssr(_tmpl$72), _$ssr(_tmpl$47)], true);
}
export function LucideAlignHorizontalJustifyEnd(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$71), _$ssr(_tmpl$73), _$ssr(_tmpl$74)], true);
}
export function LucideAlignHorizontalJustifyStart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$75), _$ssr(_tmpl$72), _$ssr(_tmpl$76)], true);
}
export function LucideAlignHorizontalSpaceAround(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$77), _$ssr(_tmpl$78), _$ssr(_tmpl$79)], true);
}
export function LucideAlignHorizontalSpaceBetween(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$80), _$ssr(_tmpl$81), _$ssr(_tmpl$82), _$ssr(_tmpl$83)], true);
}
export function LucideAlignJustify(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$84), _$ssr(_tmpl$85), _$ssr(_tmpl$86)], true);
}
export function LucideAlignLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$87), _$ssr(_tmpl$88), _$ssr(_tmpl$54)], true);
}
export function LucideAlignRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$89), _$ssr(_tmpl$90), _$ssr(_tmpl$54)], true);
}
export function LucideAlignStartHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$91), _$ssr(_tmpl$92), _$ssr(_tmpl$93)], true);
}
export function LucideAlignStartVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$94), _$ssr(_tmpl$95), _$ssr(_tmpl$76)], true);
}
export function LucideAlignVerticalDistributeCenter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$96), _$ssr(_tmpl$97), _$ssr(_tmpl$98), _$ssr(_tmpl$99), _$ssr(_tmpl$100), _$ssr(_tmpl$101)], true);
}
export function LucideAlignVerticalDistributeEnd(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$102), _$ssr(_tmpl$103), _$ssr(_tmpl$104), _$ssr(_tmpl$105)], true);
}
export function LucideAlignVerticalDistributeStart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$102), _$ssr(_tmpl$103), _$ssr(_tmpl$106), _$ssr(_tmpl$107)], true);
}
export function LucideAlignVerticalJustifyCenter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$108), _$ssr(_tmpl$109), _$ssr(_tmpl$42)], true);
}
export function LucideAlignVerticalJustifyEnd(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$110), _$ssr(_tmpl$109), _$ssr(_tmpl$111)], true);
}
export function LucideAlignVerticalJustifyStart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$108), _$ssr(_tmpl$112), _$ssr(_tmpl$113)], true);
}
export function LucideAlignVerticalSpaceAround(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$114), _$ssr(_tmpl$115), _$ssr(_tmpl$116)], true);
}
export function LucideAlignVerticalSpaceBetween(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$117), _$ssr(_tmpl$118), _$ssr(_tmpl$119), _$ssr(_tmpl$120)], true);
}
export function LucideAmbulance(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$121), _$ssr(_tmpl$122), _$ssr(_tmpl$123), _$ssr(_tmpl$124), _$ssr(_tmpl$125), _$ssr(_tmpl$126), _$ssr(_tmpl$127)], true);
}
export function LucideAmpersand(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$128), _$ssr(_tmpl$129)], true);
}
export function LucideAmpersands(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$130), _$ssr(_tmpl$131)], true);
}
export function LucideAmphora(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$132), _$ssr(_tmpl$133), _$ssr(_tmpl$134), _$ssr(_tmpl$135), _$ssr(_tmpl$136), _$ssr(_tmpl$137)], true);
}
export function LucideAnchor(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$138), _$ssr(_tmpl$139), _$ssr(_tmpl$140)], true);
}
export function LucideAngry(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$142), _$ssr(_tmpl$143), _$ssr(_tmpl$144), _$ssr(_tmpl$145), _$ssr(_tmpl$146)], true);
}
export function LucideAnnoyed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$147), _$ssr(_tmpl$148), _$ssr(_tmpl$149)], true);
}
export function LucideAntenna(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$150), _$ssr(_tmpl$151), _$ssr(_tmpl$152), _$ssr(_tmpl$153), _$ssr(_tmpl$154), _$ssr(_tmpl$155)], true);
}
export function LucideAnvil(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$156), _$ssr(_tmpl$157), _$ssr(_tmpl$158), _$ssr(_tmpl$159), _$ssr(_tmpl$160)], true);
}
export function LucideAperture(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$161), _$ssr(_tmpl$162), _$ssr(_tmpl$163), _$ssr(_tmpl$164), _$ssr(_tmpl$165), _$ssr(_tmpl$166)], true);
}
export function LucideAppWindowMac(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$167), _$ssr(_tmpl$168), _$ssr(_tmpl$169), _$ssr(_tmpl$170)], true);
}
export function LucideAppWindow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$171), _$ssr(_tmpl$172), _$ssr(_tmpl$173), _$ssr(_tmpl$174)], true);
}
export function LucideApple(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$175), _$ssr(_tmpl$176)], true);
}
export function LucideArchiveRestore(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$177), _$ssr(_tmpl$178), _$ssr(_tmpl$179), _$ssr(_tmpl$180), _$ssr(_tmpl$181)], true);
}
export function LucideArchiveX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$177), _$ssr(_tmpl$182), _$ssr(_tmpl$183), _$ssr(_tmpl$184)], true);
}
export function LucideArchive(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$177), _$ssr(_tmpl$182), _$ssr(_tmpl$185)], true);
}
export function LucideArmchair(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$186), _$ssr(_tmpl$187), _$ssr(_tmpl$188), _$ssr(_tmpl$189)], true);
}
export function LucideArrowBigDownDash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$190), _$ssr(_tmpl$191)], true);
}
export function LucideArrowBigDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$192), true);
}
export function LucideArrowBigLeftDash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$193), _$ssr(_tmpl$194)], true);
}
export function LucideArrowBigLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$195), true);
}
export function LucideArrowBigRightDash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$196), _$ssr(_tmpl$197)], true);
}
export function LucideArrowBigRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$198), true);
}
export function LucideArrowBigUpDash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$199), _$ssr(_tmpl$200)], true);
}
export function LucideArrowBigUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$201), true);
}
export function LucideArrowDown01(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$202), _$ssr(_tmpl$203), _$ssr(_tmpl$204), _$ssr(_tmpl$205), _$ssr(_tmpl$206)], true);
}
export function LucideArrowDown10(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$202), _$ssr(_tmpl$203), _$ssr(_tmpl$207), _$ssr(_tmpl$208), _$ssr(_tmpl$209)], true);
}
export function LucideArrowDownAZ(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$202), _$ssr(_tmpl$203), _$ssr(_tmpl$210), _$ssr(_tmpl$211), _$ssr(_tmpl$212)], true);
}
export function LucideArrowDownFromLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$213), _$ssr(_tmpl$214), _$ssr(_tmpl$215)], true);
}
export function LucideArrowDownLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$216), _$ssr(_tmpl$217)], true);
}
export function LucideArrowDownNarrowWide(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$202), _$ssr(_tmpl$203), _$ssr(_tmpl$218), _$ssr(_tmpl$219), _$ssr(_tmpl$220)], true);
}
export function LucideArrowDownRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$221), _$ssr(_tmpl$222)], true);
}
export function LucideArrowDownToDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$223), _$ssr(_tmpl$224), _$ssr(_tmpl$225)], true);
}
export function LucideArrowDownToLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$226), _$ssr(_tmpl$227), _$ssr(_tmpl$228)], true);
}
export function LucideArrowDownUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$202), _$ssr(_tmpl$203), _$ssr(_tmpl$229), _$ssr(_tmpl$230)], true);
}
export function LucideArrowDownWideNarrow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$202), _$ssr(_tmpl$203), _$ssr(_tmpl$231), _$ssr(_tmpl$219), _$ssr(_tmpl$232)], true);
}
export function LucideArrowDownZA(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$202), _$ssr(_tmpl$233), _$ssr(_tmpl$234), _$ssr(_tmpl$235), _$ssr(_tmpl$236)], true);
}
export function LucideArrowDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$237), _$ssr(_tmpl$238)], true);
}
export function LucideArrowLeftFromLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$239), _$ssr(_tmpl$240), _$ssr(_tmpl$241)], true);
}
export function LucideArrowLeftRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$242), _$ssr(_tmpl$243), _$ssr(_tmpl$244), _$ssr(_tmpl$245)], true);
}
export function LucideArrowLeftToLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$246), _$ssr(_tmpl$247), _$ssr(_tmpl$248)], true);
}
export function LucideArrowLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$249), _$ssr(_tmpl$250)], true);
}
export function LucideArrowRightFromLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$251), _$ssr(_tmpl$252), _$ssr(_tmpl$253)], true);
}
export function LucideArrowRightLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$254), _$ssr(_tmpl$255), _$ssr(_tmpl$256), _$ssr(_tmpl$257)], true);
}
export function LucideArrowRightToLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$258), _$ssr(_tmpl$259), _$ssr(_tmpl$260)], true);
}
export function LucideArrowRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$261), _$ssr(_tmpl$262)], true);
}
export function LucideArrowUp01(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$263), _$ssr(_tmpl$233), _$ssr(_tmpl$204), _$ssr(_tmpl$205), _$ssr(_tmpl$206)], true);
}
export function LucideArrowUp10(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$263), _$ssr(_tmpl$233), _$ssr(_tmpl$207), _$ssr(_tmpl$208), _$ssr(_tmpl$209)], true);
}
export function LucideArrowUpAZ(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$263), _$ssr(_tmpl$233), _$ssr(_tmpl$210), _$ssr(_tmpl$211), _$ssr(_tmpl$212)], true);
}
export function LucideArrowUpDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$264), _$ssr(_tmpl$265), _$ssr(_tmpl$263), _$ssr(_tmpl$233)], true);
}
export function LucideArrowUpFromDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$266), _$ssr(_tmpl$267), _$ssr(_tmpl$225)], true);
}
export function LucideArrowUpFromLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$268), _$ssr(_tmpl$269), _$ssr(_tmpl$270)], true);
}
export function LucideArrowUpLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$271), _$ssr(_tmpl$272)], true);
}
export function LucideArrowUpNarrowWide(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$263), _$ssr(_tmpl$233), _$ssr(_tmpl$232), _$ssr(_tmpl$273), _$ssr(_tmpl$274)], true);
}
export function LucideArrowUpRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$275), _$ssr(_tmpl$276)], true);
}
export function LucideArrowUpToLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$277), _$ssr(_tmpl$278), _$ssr(_tmpl$279)], true);
}
export function LucideArrowUpWideNarrow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$263), _$ssr(_tmpl$233), _$ssr(_tmpl$220), _$ssr(_tmpl$273), _$ssr(_tmpl$280)], true);
}
export function LucideArrowUpZA(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$263), _$ssr(_tmpl$233), _$ssr(_tmpl$234), _$ssr(_tmpl$235), _$ssr(_tmpl$236)], true);
}
export function LucideArrowUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$281), _$ssr(_tmpl$282)], true);
}
export function LucideArrowsUpFromLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$283), _$ssr(_tmpl$284), _$ssr(_tmpl$285), _$ssr(_tmpl$286), _$ssr(_tmpl$287)], true);
}
export function LucideAsterisk(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$288), _$ssr(_tmpl$289), _$ssr(_tmpl$290)], true);
}
export function LucideAtSign(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$291), _$ssr(_tmpl$292)], true);
}
export function LucideAtom(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$293), _$ssr(_tmpl$294), _$ssr(_tmpl$295)], true);
}
export function LucideAudioLines(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$296), _$ssr(_tmpl$297), _$ssr(_tmpl$298), _$ssr(_tmpl$299), _$ssr(_tmpl$300), _$ssr(_tmpl$301)], true);
}
export function LucideAudioWaveform(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$302), true);
}
export function LucideAward(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$303), _$ssr(_tmpl$304)], true);
}
export function LucideAxe(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$305), _$ssr(_tmpl$306)], true);
}
export function LucideAxis3d(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$307), _$ssr(_tmpl$308), _$ssr(_tmpl$309), _$ssr(_tmpl$310)], true);
}
export function LucideBaby(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$311), _$ssr(_tmpl$312), _$ssr(_tmpl$313), _$ssr(_tmpl$314)], true);
}
export function LucideBackpack(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$315), _$ssr(_tmpl$316), _$ssr(_tmpl$317), _$ssr(_tmpl$318), _$ssr(_tmpl$319)], true);
}
export function LucideBadgeAlert(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$321), _$ssr(_tmpl$322)], true);
}
export function LucideBadgeCent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$323), _$ssr(_tmpl$324)], true);
}
export function LucideBadgeCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$325)], true);
}
export function LucideBadgeDollarSign(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$326), _$ssr(_tmpl$327)], true);
}
export function LucideBadgeEuro(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$328), _$ssr(_tmpl$329)], true);
}
export function LucideBadgeIndianRupee(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$330), _$ssr(_tmpl$331), _$ssr(_tmpl$332)], true);
}
export function LucideBadgeInfo(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$333), _$ssr(_tmpl$334)], true);
}
export function LucideBadgeJapaneseYen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$335), _$ssr(_tmpl$336), _$ssr(_tmpl$337), _$ssr(_tmpl$338)], true);
}
export function LucideBadgeMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$339)], true);
}
export function LucideBadgePercent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$340), _$ssr(_tmpl$341), _$ssr(_tmpl$342)], true);
}
export function LucideBadgePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$343), _$ssr(_tmpl$339)], true);
}
export function LucideBadgePoundSterling(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$344), _$ssr(_tmpl$345), _$ssr(_tmpl$346)], true);
}
export function LucideBadgeQuestionMark(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$347), _$ssr(_tmpl$348)], true);
}
export function LucideBadgeRussianRuble(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$349), _$ssr(_tmpl$350)], true);
}
export function LucideBadgeSwissFranc(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$351), _$ssr(_tmpl$352), _$ssr(_tmpl$353)], true);
}
export function LucideBadgeX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$320), _$ssr(_tmpl$354), _$ssr(_tmpl$355)], true);
}
export function LucideBadge(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$320), true);
}
export function LucideBaggageClaim(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$356), _$ssr(_tmpl$357), _$ssr(_tmpl$358), _$ssr(_tmpl$359), _$ssr(_tmpl$360)], true);
}
export function LucideBan(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$361)], true);
}
export function LucideBanana(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$362), _$ssr(_tmpl$363)], true);
}
export function LucideBandage(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$364), _$ssr(_tmpl$365), _$ssr(_tmpl$366), _$ssr(_tmpl$367), _$ssr(_tmpl$368), _$ssr(_tmpl$369), _$ssr(_tmpl$370)], true);
}
export function LucideBanknoteArrowDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$371), _$ssr(_tmpl$372), _$ssr(_tmpl$373), _$ssr(_tmpl$374), _$ssr(_tmpl$375), _$ssr(_tmpl$376)], true);
}
export function LucideBanknoteArrowUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$371), _$ssr(_tmpl$373), _$ssr(_tmpl$377), _$ssr(_tmpl$378), _$ssr(_tmpl$375), _$ssr(_tmpl$376)], true);
}
export function LucideBanknoteX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$379), _$ssr(_tmpl$380), _$ssr(_tmpl$373), _$ssr(_tmpl$381), _$ssr(_tmpl$375), _$ssr(_tmpl$376)], true);
}
export function LucideBanknote(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$382), _$ssr(_tmpl$376), _$ssr(_tmpl$383)], true);
}
export function LucideBarcode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$251), _$ssr(_tmpl$384), _$ssr(_tmpl$237), _$ssr(_tmpl$385), _$ssr(_tmpl$260)], true);
}
export function LucideBarrel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$386), _$ssr(_tmpl$387), _$ssr(_tmpl$388), _$ssr(_tmpl$389), _$ssr(_tmpl$390)], true);
}
export function LucideBaseline(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$391), _$ssr(_tmpl$392), _$ssr(_tmpl$331)], true);
}
export function LucideBath(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$393), _$ssr(_tmpl$394), _$ssr(_tmpl$42), _$ssr(_tmpl$395), _$ssr(_tmpl$396)], true);
}
export function LucideBatteryCharging(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$397), _$ssr(_tmpl$398), _$ssr(_tmpl$399), _$ssr(_tmpl$400)], true);
}
export function LucideBatteryFull(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$401), _$ssr(_tmpl$402), _$ssr(_tmpl$399), _$ssr(_tmpl$403), _$ssr(_tmpl$404)], true);
}
export function LucideBatteryLow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$399), _$ssr(_tmpl$405), _$ssr(_tmpl$404)], true);
}
export function LucideBatteryMedium(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$406), _$ssr(_tmpl$399), _$ssr(_tmpl$405), _$ssr(_tmpl$404)], true);
}
export function LucideBatteryPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$407), _$ssr(_tmpl$408), _$ssr(_tmpl$399), _$ssr(_tmpl$409), _$ssr(_tmpl$410)], true);
}
export function LucideBatteryWarning(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$411), _$ssr(_tmpl$412), _$ssr(_tmpl$413), _$ssr(_tmpl$399), _$ssr(_tmpl$414)], true);
}
export function LucideBattery(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$415), _$ssr(_tmpl$404)], true);
}
export function LucideBeaker(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$416), _$ssr(_tmpl$417), _$ssr(_tmpl$418)], true);
}
export function LucideBeanOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$419), _$ssr(_tmpl$420), _$ssr(_tmpl$421), _$ssr(_tmpl$422)], true);
}
export function LucideBean(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$423), _$ssr(_tmpl$424)], true);
}
export function LucideBedDouble(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$425), _$ssr(_tmpl$426), _$ssr(_tmpl$427), _$ssr(_tmpl$428)], true);
}
export function LucideBedSingle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$429), _$ssr(_tmpl$430), _$ssr(_tmpl$85)], true);
}
export function LucideBed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$431), _$ssr(_tmpl$432), _$ssr(_tmpl$433), _$ssr(_tmpl$434)], true);
}
export function LucideBeef(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$435), _$ssr(_tmpl$436), _$ssr(_tmpl$437)], true);
}
export function LucideBeerOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$438), _$ssr(_tmpl$439), _$ssr(_tmpl$440), _$ssr(_tmpl$31), _$ssr(_tmpl$441), _$ssr(_tmpl$442), _$ssr(_tmpl$443), _$ssr(_tmpl$444)], true);
}
export function LucideBeer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$445), _$ssr(_tmpl$446), _$ssr(_tmpl$447), _$ssr(_tmpl$448), _$ssr(_tmpl$449)], true);
}
export function LucideBellDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$450), _$ssr(_tmpl$451), _$ssr(_tmpl$452)], true);
}
export function LucideBellElectric(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$453), _$ssr(_tmpl$454), _$ssr(_tmpl$341), _$ssr(_tmpl$455), _$ssr(_tmpl$456), _$ssr(_tmpl$457)], true);
}
export function LucideBellMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$450), _$ssr(_tmpl$458), _$ssr(_tmpl$459)], true);
}
export function LucideBellOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$450), _$ssr(_tmpl$460), _$ssr(_tmpl$31), _$ssr(_tmpl$461)], true);
}
export function LucideBellPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$450), _$ssr(_tmpl$458), _$ssr(_tmpl$462), _$ssr(_tmpl$463)], true);
}
export function LucideBellRing(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$450), _$ssr(_tmpl$464), _$ssr(_tmpl$465), _$ssr(_tmpl$466)], true);
}
export function LucideBell(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$450), _$ssr(_tmpl$465)], true);
}
export function LucideBetweenHorizontalEnd(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$467), _$ssr(_tmpl$468), _$ssr(_tmpl$469)], true);
}
export function LucideBetweenHorizontalStart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$470), _$ssr(_tmpl$471), _$ssr(_tmpl$472)], true);
}
export function LucideBetweenVerticalEnd(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$473), _$ssr(_tmpl$474), _$ssr(_tmpl$475)], true);
}
export function LucideBetweenVerticalStart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$476), _$ssr(_tmpl$477), _$ssr(_tmpl$478)], true);
}
export function LucideBicepsFlexed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$479), _$ssr(_tmpl$480), _$ssr(_tmpl$481)], true);
}
export function LucideBike(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$482), _$ssr(_tmpl$483), _$ssr(_tmpl$484), _$ssr(_tmpl$485)], true);
}
export function LucideBinary(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$486), _$ssr(_tmpl$487), _$ssr(_tmpl$488), _$ssr(_tmpl$489), _$ssr(_tmpl$490), _$ssr(_tmpl$491)], true);
}
export function LucideBinoculars(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$492), _$ssr(_tmpl$493), _$ssr(_tmpl$494), _$ssr(_tmpl$495), _$ssr(_tmpl$496), _$ssr(_tmpl$497)], true);
}
export function LucideBiohazard(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$498), _$ssr(_tmpl$499), _$ssr(_tmpl$500), _$ssr(_tmpl$501), _$ssr(_tmpl$502), _$ssr(_tmpl$503), _$ssr(_tmpl$504), _$ssr(_tmpl$505), _$ssr(_tmpl$506), _$ssr(_tmpl$507)], true);
}
export function LucideBird(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$508), _$ssr(_tmpl$509), _$ssr(_tmpl$510), _$ssr(_tmpl$511), _$ssr(_tmpl$512), _$ssr(_tmpl$513)], true);
}
export function LucideBitcoin(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$514), true);
}
export function LucideBlend(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$456), _$ssr(_tmpl$515)], true);
}
export function LucideBlinds(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$516), _$ssr(_tmpl$517), _$ssr(_tmpl$518), _$ssr(_tmpl$519), _$ssr(_tmpl$520), _$ssr(_tmpl$521), _$ssr(_tmpl$522)], true);
}
export function LucideBlocks(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$523), _$ssr(_tmpl$524)], true);
}
export function LucideBluetoothConnected(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$525), _$ssr(_tmpl$526), _$ssr(_tmpl$527)], true);
}
export function LucideBluetoothOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$528), _$ssr(_tmpl$31), _$ssr(_tmpl$529)], true);
}
export function LucideBluetoothSearching(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$525), _$ssr(_tmpl$530), _$ssr(_tmpl$373)], true);
}
export function LucideBluetooth(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$525), true);
}
export function LucideBold(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$531), true);
}
export function LucideBolt(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$532), _$ssr(_tmpl$291)], true);
}
export function LucideBomb(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$533), _$ssr(_tmpl$534), _$ssr(_tmpl$535)], true);
}
export function LucideBone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$536), true);
}
export function LucideBookA(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$537), _$ssr(_tmpl$538), _$ssr(_tmpl$539)], true);
}
export function LucideBookAlert(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$540), _$ssr(_tmpl$541), _$ssr(_tmpl$537)], true);
}
export function LucideBookAudio(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$542), _$ssr(_tmpl$543), _$ssr(_tmpl$537), _$ssr(_tmpl$544)], true);
}
export function LucideBookCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$537), _$ssr(_tmpl$545)], true);
}
export function LucideBookCopy(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$546), _$ssr(_tmpl$547), _$ssr(_tmpl$548)], true);
}
export function LucideBookDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$549), _$ssr(_tmpl$550), _$ssr(_tmpl$551), _$ssr(_tmpl$552), _$ssr(_tmpl$553), _$ssr(_tmpl$554), _$ssr(_tmpl$555), _$ssr(_tmpl$556), _$ssr(_tmpl$557), _$ssr(_tmpl$558), _$ssr(_tmpl$559)], true);
}
export function LucideBookDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$560), _$ssr(_tmpl$537), _$ssr(_tmpl$561)], true);
}
export function LucideBookHeadphones(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$537), _$ssr(_tmpl$562), _$ssr(_tmpl$563), _$ssr(_tmpl$564)], true);
}
export function LucideBookHeart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$565), _$ssr(_tmpl$537)], true);
}
export function LucideBookImage(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$566), _$ssr(_tmpl$537), _$ssr(_tmpl$567)], true);
}
export function LucideBookKey(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$568), _$ssr(_tmpl$569), _$ssr(_tmpl$570), _$ssr(_tmpl$571), _$ssr(_tmpl$572)], true);
}
export function LucideBookLock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$573), _$ssr(_tmpl$574), _$ssr(_tmpl$575), _$ssr(_tmpl$576)], true);
}
export function LucideBookMarked(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$577), _$ssr(_tmpl$537)], true);
}
export function LucideBookMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$537), _$ssr(_tmpl$578)], true);
}
export function LucideBookOpenCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$214), _$ssr(_tmpl$579), _$ssr(_tmpl$580)], true);
}
export function LucideBookOpenText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$279), _$ssr(_tmpl$581), _$ssr(_tmpl$582), _$ssr(_tmpl$583), _$ssr(_tmpl$584), _$ssr(_tmpl$585)], true);
}
export function LucideBookOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$279), _$ssr(_tmpl$583)], true);
}
export function LucideBookPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$586), _$ssr(_tmpl$537), _$ssr(_tmpl$578)], true);
}
export function LucideBookText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$537), _$ssr(_tmpl$587), _$ssr(_tmpl$588)], true);
}
export function LucideBookType(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$589), _$ssr(_tmpl$542), _$ssr(_tmpl$590), _$ssr(_tmpl$537)], true);
}
export function LucideBookUp2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$560), _$ssr(_tmpl$591), _$ssr(_tmpl$592), _$ssr(_tmpl$593), _$ssr(_tmpl$594)], true);
}
export function LucideBookUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$560), _$ssr(_tmpl$537), _$ssr(_tmpl$593)], true);
}
export function LucideBookUser(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$595), _$ssr(_tmpl$537), _$ssr(_tmpl$596)], true);
}
export function LucideBookX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$597), _$ssr(_tmpl$537), _$ssr(_tmpl$598)], true);
}
export function LucideBook(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$537), true);
}
export function LucideBookmarkCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$599), _$ssr(_tmpl$600)], true);
}
export function LucideBookmarkMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$601), _$ssr(_tmpl$602)], true);
}
export function LucideBookmarkPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$601), _$ssr(_tmpl$603), _$ssr(_tmpl$602)], true);
}
export function LucideBookmarkX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$599), _$ssr(_tmpl$604), _$ssr(_tmpl$605)], true);
}
export function LucideBookmark(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$601), true);
}
export function LucideBoomBox(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$606), _$ssr(_tmpl$607), _$ssr(_tmpl$608), _$ssr(_tmpl$609), _$ssr(_tmpl$610), _$ssr(_tmpl$611), _$ssr(_tmpl$612)], true);
}
export function LucideBotMessageSquare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$613), _$ssr(_tmpl$614), _$ssr(_tmpl$615), _$ssr(_tmpl$616), _$ssr(_tmpl$617), _$ssr(_tmpl$618)], true);
}
export function LucideBotOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$619), _$ssr(_tmpl$620), _$ssr(_tmpl$621), _$ssr(_tmpl$622), _$ssr(_tmpl$623), _$ssr(_tmpl$624), _$ssr(_tmpl$625)], true);
}
export function LucideBot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$626), _$ssr(_tmpl$627), _$ssr(_tmpl$620), _$ssr(_tmpl$621), _$ssr(_tmpl$628), _$ssr(_tmpl$624)], true);
}
export function LucideBottleWine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$629), _$ssr(_tmpl$630)], true);
}
export function LucideBowArrow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$631), _$ssr(_tmpl$632), _$ssr(_tmpl$633), _$ssr(_tmpl$634), _$ssr(_tmpl$635)], true);
}
export function LucideBox(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$636), _$ssr(_tmpl$637), _$ssr(_tmpl$638)], true);
}
export function LucideBoxes(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$639), _$ssr(_tmpl$640), _$ssr(_tmpl$641), _$ssr(_tmpl$642), _$ssr(_tmpl$643), _$ssr(_tmpl$644), _$ssr(_tmpl$645), _$ssr(_tmpl$646), _$ssr(_tmpl$647), _$ssr(_tmpl$648), _$ssr(_tmpl$649), _$ssr(_tmpl$650)], true);
}
export function LucideBraces(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$651), _$ssr(_tmpl$652)], true);
}
export function LucideBrackets(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$653), _$ssr(_tmpl$654)], true);
}
export function LucideBrainCircuit(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$655), _$ssr(_tmpl$656), _$ssr(_tmpl$657), _$ssr(_tmpl$658), _$ssr(_tmpl$659), _$ssr(_tmpl$660), _$ssr(_tmpl$661), _$ssr(_tmpl$662), _$ssr(_tmpl$663), _$ssr(_tmpl$664), _$ssr(_tmpl$665), _$ssr(_tmpl$666), _$ssr(_tmpl$667)], true);
}
export function LucideBrainCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$668), _$ssr(_tmpl$669), _$ssr(_tmpl$670), _$ssr(_tmpl$671), _$ssr(_tmpl$672), _$ssr(_tmpl$673), _$ssr(_tmpl$674), _$ssr(_tmpl$675), _$ssr(_tmpl$676), _$ssr(_tmpl$677), _$ssr(_tmpl$678), _$ssr(_tmpl$679), _$ssr(_tmpl$680), _$ssr(_tmpl$681), _$ssr(_tmpl$682)], true);
}
export function LucideBrain(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$655), _$ssr(_tmpl$683), _$ssr(_tmpl$684), _$ssr(_tmpl$685), _$ssr(_tmpl$657), _$ssr(_tmpl$658), _$ssr(_tmpl$686), _$ssr(_tmpl$659), _$ssr(_tmpl$687)], true);
}
export function LucideBrickWallFire(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$688), _$ssr(_tmpl$689), _$ssr(_tmpl$690), _$ssr(_tmpl$691), _$ssr(_tmpl$692), _$ssr(_tmpl$693), _$ssr(_tmpl$694)], true);
}
export function LucideBrickWall(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$696), _$ssr(_tmpl$697), _$ssr(_tmpl$698), _$ssr(_tmpl$699), _$ssr(_tmpl$700), _$ssr(_tmpl$693), _$ssr(_tmpl$694)], true);
}
export function LucideBriefcaseBusiness(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$701), _$ssr(_tmpl$702), _$ssr(_tmpl$703), _$ssr(_tmpl$704)], true);
}
export function LucideBriefcaseConveyorBelt(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$705), _$ssr(_tmpl$706), _$ssr(_tmpl$707), _$ssr(_tmpl$708), _$ssr(_tmpl$709), _$ssr(_tmpl$710), _$ssr(_tmpl$711)], true);
}
export function LucideBriefcaseMedical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$712), _$ssr(_tmpl$713), _$ssr(_tmpl$702), _$ssr(_tmpl$714), _$ssr(_tmpl$715), _$ssr(_tmpl$704)], true);
}
export function LucideBriefcase(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$716), _$ssr(_tmpl$704)], true);
}
export function LucideBringToFront(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$717), _$ssr(_tmpl$718), _$ssr(_tmpl$719)], true);
}
export function LucideBrushCleaning(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$720), _$ssr(_tmpl$721), _$ssr(_tmpl$722), _$ssr(_tmpl$723)], true);
}
export function LucideBrush(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$724), _$ssr(_tmpl$725), _$ssr(_tmpl$726)], true);
}
export function LucideBubbles(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$727), _$ssr(_tmpl$728), _$ssr(_tmpl$729), _$ssr(_tmpl$730)], true);
}
export function LucideBugOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$731), _$ssr(_tmpl$732), _$ssr(_tmpl$733), _$ssr(_tmpl$734), _$ssr(_tmpl$31), _$ssr(_tmpl$735), _$ssr(_tmpl$736), _$ssr(_tmpl$737), _$ssr(_tmpl$738)], true);
}
export function LucideBugPlay(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$739), _$ssr(_tmpl$732), _$ssr(_tmpl$740), _$ssr(_tmpl$734), _$ssr(_tmpl$738), _$ssr(_tmpl$737), _$ssr(_tmpl$741), _$ssr(_tmpl$742), _$ssr(_tmpl$743)], true);
}
export function LucideBug(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$742), _$ssr(_tmpl$732), _$ssr(_tmpl$743), _$ssr(_tmpl$744), _$ssr(_tmpl$745), _$ssr(_tmpl$741), _$ssr(_tmpl$737), _$ssr(_tmpl$738), _$ssr(_tmpl$734), _$ssr(_tmpl$746), _$ssr(_tmpl$747)], true);
}
export function LucideBuilding2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$748), _$ssr(_tmpl$749), _$ssr(_tmpl$750), _$ssr(_tmpl$751), _$ssr(_tmpl$492), _$ssr(_tmpl$752), _$ssr(_tmpl$753)], true);
}
export function LucideBuilding(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$754), _$ssr(_tmpl$755), _$ssr(_tmpl$756), _$ssr(_tmpl$757), _$ssr(_tmpl$758), _$ssr(_tmpl$759), _$ssr(_tmpl$760), _$ssr(_tmpl$761), _$ssr(_tmpl$762), _$ssr(_tmpl$763), _$ssr(_tmpl$764)], true);
}
export function LucideBusFront(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$765), _$ssr(_tmpl$751), _$ssr(_tmpl$766), _$ssr(_tmpl$767), _$ssr(_tmpl$768), _$ssr(_tmpl$769), _$ssr(_tmpl$770), _$ssr(_tmpl$771), _$ssr(_tmpl$772)], true);
}
export function LucideBus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$773), _$ssr(_tmpl$774), _$ssr(_tmpl$775), _$ssr(_tmpl$776), _$ssr(_tmpl$127), _$ssr(_tmpl$777), _$ssr(_tmpl$778)], true);
}
export function LucideCableCar(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$779), _$ssr(_tmpl$780), _$ssr(_tmpl$781), _$ssr(_tmpl$782), _$ssr(_tmpl$783), _$ssr(_tmpl$158), _$ssr(_tmpl$159), _$ssr(_tmpl$257)], true);
}
export function LucideCable(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$784), _$ssr(_tmpl$785), _$ssr(_tmpl$786), _$ssr(_tmpl$787), _$ssr(_tmpl$788)], true);
}
export function LucideCakeSlice(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$789), _$ssr(_tmpl$790), _$ssr(_tmpl$791), _$ssr(_tmpl$792)], true);
}
export function LucideCake(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$793), _$ssr(_tmpl$794), _$ssr(_tmpl$119), _$ssr(_tmpl$795), _$ssr(_tmpl$796), _$ssr(_tmpl$797), _$ssr(_tmpl$798), _$ssr(_tmpl$799), _$ssr(_tmpl$800)], true);
}
export function LucideCalculator(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$801), _$ssr(_tmpl$802), _$ssr(_tmpl$803), _$ssr(_tmpl$761), _$ssr(_tmpl$759), _$ssr(_tmpl$763), _$ssr(_tmpl$760), _$ssr(_tmpl$764), _$ssr(_tmpl$804), _$ssr(_tmpl$805)], true);
}
export function LucideCalendar1(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$806), _$ssr(_tmpl$807), _$ssr(_tmpl$808), _$ssr(_tmpl$809), _$ssr(_tmpl$810)], true);
}
export function LucideCalendarArrowDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$811), _$ssr(_tmpl$807), _$ssr(_tmpl$812), _$ssr(_tmpl$813), _$ssr(_tmpl$808), _$ssr(_tmpl$809)], true);
}
export function LucideCalendarArrowUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$814), _$ssr(_tmpl$807), _$ssr(_tmpl$815), _$ssr(_tmpl$816), _$ssr(_tmpl$808), _$ssr(_tmpl$809)], true);
}
export function LucideCalendarCheck2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$807), _$ssr(_tmpl$817), _$ssr(_tmpl$808), _$ssr(_tmpl$818)], true);
}
export function LucideCalendarCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$807), _$ssr(_tmpl$819), _$ssr(_tmpl$808), _$ssr(_tmpl$820)], true);
}
export function LucideCalendarClock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$821), _$ssr(_tmpl$807), _$ssr(_tmpl$822), _$ssr(_tmpl$823), _$ssr(_tmpl$809), _$ssr(_tmpl$824)], true);
}
export function LucideCalendarCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$825), _$ssr(_tmpl$826), _$ssr(_tmpl$807), _$ssr(_tmpl$827), _$ssr(_tmpl$828), _$ssr(_tmpl$829), _$ssr(_tmpl$830), _$ssr(_tmpl$831), _$ssr(_tmpl$832), _$ssr(_tmpl$833), _$ssr(_tmpl$808), _$ssr(_tmpl$809), _$ssr(_tmpl$834)], true);
}
export function LucideCalendarDays(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$807), _$ssr(_tmpl$819), _$ssr(_tmpl$808), _$ssr(_tmpl$764), _$ssr(_tmpl$760), _$ssr(_tmpl$762), _$ssr(_tmpl$805), _$ssr(_tmpl$804), _$ssr(_tmpl$835)], true);
}
export function LucideCalendarFold(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$807), _$ssr(_tmpl$836), _$ssr(_tmpl$808), _$ssr(_tmpl$837)], true);
}
export function LucideCalendarHeart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$838), _$ssr(_tmpl$809), _$ssr(_tmpl$807), _$ssr(_tmpl$839)], true);
}
export function LucideCalendarMinus2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$807), _$ssr(_tmpl$819), _$ssr(_tmpl$808), _$ssr(_tmpl$840)], true);
}
export function LucideCalendarMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$841), _$ssr(_tmpl$807), _$ssr(_tmpl$842), _$ssr(_tmpl$808), _$ssr(_tmpl$809)], true);
}
export function LucideCalendarOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$843), _$ssr(_tmpl$844), _$ssr(_tmpl$807), _$ssr(_tmpl$845), _$ssr(_tmpl$846), _$ssr(_tmpl$31)], true);
}
export function LucideCalendarPlus2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$807), _$ssr(_tmpl$819), _$ssr(_tmpl$808), _$ssr(_tmpl$840), _$ssr(_tmpl$847)], true);
}
export function LucideCalendarPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$841), _$ssr(_tmpl$807), _$ssr(_tmpl$374), _$ssr(_tmpl$848), _$ssr(_tmpl$808), _$ssr(_tmpl$809)], true);
}
export function LucideCalendarRange(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$819), _$ssr(_tmpl$807), _$ssr(_tmpl$808), _$ssr(_tmpl$809), _$ssr(_tmpl$849), _$ssr(_tmpl$850), _$ssr(_tmpl$851), _$ssr(_tmpl$852)], true);
}
export function LucideCalendarSearch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$807), _$ssr(_tmpl$853), _$ssr(_tmpl$854), _$ssr(_tmpl$808), _$ssr(_tmpl$809), _$ssr(_tmpl$834)], true);
}
export function LucideCalendarSync(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$855), _$ssr(_tmpl$856), _$ssr(_tmpl$807), _$ssr(_tmpl$857), _$ssr(_tmpl$858), _$ssr(_tmpl$859), _$ssr(_tmpl$860), _$ssr(_tmpl$809)], true);
}
export function LucideCalendarX2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$807), _$ssr(_tmpl$861), _$ssr(_tmpl$808), _$ssr(_tmpl$862), _$ssr(_tmpl$380)], true);
}
export function LucideCalendarX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$807), _$ssr(_tmpl$819), _$ssr(_tmpl$808), _$ssr(_tmpl$863), _$ssr(_tmpl$864)], true);
}
export function LucideCalendar(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$807), _$ssr(_tmpl$819), _$ssr(_tmpl$808)], true);
}
export function LucideCameraOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$422), _$ssr(_tmpl$865), _$ssr(_tmpl$866), _$ssr(_tmpl$867)], true);
}
export function LucideCamera(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$868), _$ssr(_tmpl$869)], true);
}
export function LucideCandyCane(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$870), _$ssr(_tmpl$871), _$ssr(_tmpl$872), _$ssr(_tmpl$873), _$ssr(_tmpl$874)], true);
}
export function LucideCandyOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$875), _$ssr(_tmpl$876), _$ssr(_tmpl$877), _$ssr(_tmpl$878), _$ssr(_tmpl$879), _$ssr(_tmpl$31), _$ssr(_tmpl$880)], true);
}
export function LucideCandy(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$881), _$ssr(_tmpl$882), _$ssr(_tmpl$879), _$ssr(_tmpl$883), _$ssr(_tmpl$880)], true);
}
export function LucideCannabis(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$884), _$ssr(_tmpl$885)], true);
}
export function LucideCaptionsOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$886), _$ssr(_tmpl$887), _$ssr(_tmpl$888), _$ssr(_tmpl$31), _$ssr(_tmpl$889), _$ssr(_tmpl$890)], true);
}
export function LucideCaptions(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$891), _$ssr(_tmpl$892)], true);
}
export function LucideCarFront(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$893), _$ssr(_tmpl$851), _$ssr(_tmpl$894), _$ssr(_tmpl$895), _$ssr(_tmpl$188), _$ssr(_tmpl$189)], true);
}
export function LucideCarTaxiFront(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$896), _$ssr(_tmpl$893), _$ssr(_tmpl$851), _$ssr(_tmpl$894), _$ssr(_tmpl$895), _$ssr(_tmpl$188), _$ssr(_tmpl$189)], true);
}
export function LucideCar(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$897), _$ssr(_tmpl$898), _$ssr(_tmpl$899), _$ssr(_tmpl$900)], true);
}
export function LucideCaravan(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$901), _$ssr(_tmpl$902), _$ssr(_tmpl$903), _$ssr(_tmpl$904)], true);
}
export function LucideCardSim(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$847), _$ssr(_tmpl$905), _$ssr(_tmpl$906), _$ssr(_tmpl$907)], true);
}
export function LucideCarrot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$908), _$ssr(_tmpl$909), _$ssr(_tmpl$910)], true);
}
export function LucideCaseLower(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$911), _$ssr(_tmpl$407), _$ssr(_tmpl$912), _$ssr(_tmpl$913)], true);
}
export function LucideCaseSensitive(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$914), _$ssr(_tmpl$915), _$ssr(_tmpl$916), _$ssr(_tmpl$917)], true);
}
export function LucideCaseUpper(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$914), _$ssr(_tmpl$915), _$ssr(_tmpl$918)], true);
}
export function LucideCassetteTape(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$167), _$ssr(_tmpl$919), _$ssr(_tmpl$331), _$ssr(_tmpl$920), _$ssr(_tmpl$921)], true);
}
export function LucideCast(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$922), _$ssr(_tmpl$923), _$ssr(_tmpl$924), _$ssr(_tmpl$925)], true);
}
export function LucideCastle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$926), _$ssr(_tmpl$927), _$ssr(_tmpl$928), _$ssr(_tmpl$929), _$ssr(_tmpl$930), _$ssr(_tmpl$931), _$ssr(_tmpl$932), _$ssr(_tmpl$933), _$ssr(_tmpl$934)], true);
}
export function LucideCat(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$935), _$ssr(_tmpl$936), _$ssr(_tmpl$937), _$ssr(_tmpl$938)], true);
}
export function LucideCctv(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$939), _$ssr(_tmpl$940), _$ssr(_tmpl$941), _$ssr(_tmpl$942), _$ssr(_tmpl$943)], true);
}
export function LucideChartArea(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$944), _$ssr(_tmpl$945)], true);
}
export function LucideChartBarBig(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$944), _$ssr(_tmpl$946), _$ssr(_tmpl$947)], true);
}
export function LucideChartBarDecreasing(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$944), _$ssr(_tmpl$948), _$ssr(_tmpl$949), _$ssr(_tmpl$950)], true);
}
export function LucideChartBarIncreasing(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$944), _$ssr(_tmpl$948), _$ssr(_tmpl$951), _$ssr(_tmpl$952)], true);
}
export function LucideChartBarStacked(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$953), _$ssr(_tmpl$954), _$ssr(_tmpl$944), _$ssr(_tmpl$946), _$ssr(_tmpl$947)], true);
}
export function LucideChartBar(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$944), _$ssr(_tmpl$955), _$ssr(_tmpl$956), _$ssr(_tmpl$952)], true);
}
export function LucideChartCandlestick(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$957), _$ssr(_tmpl$958), _$ssr(_tmpl$959), _$ssr(_tmpl$960), _$ssr(_tmpl$961), _$ssr(_tmpl$962), _$ssr(_tmpl$944)], true);
}
export function LucideChartColumnBig(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$944), _$ssr(_tmpl$963), _$ssr(_tmpl$964)], true);
}
export function LucideChartColumnDecreasing(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$965), _$ssr(_tmpl$966), _$ssr(_tmpl$944), _$ssr(_tmpl$967)], true);
}
export function LucideChartColumnIncreasing(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$965), _$ssr(_tmpl$968), _$ssr(_tmpl$944), _$ssr(_tmpl$969)], true);
}
export function LucideChartColumnStacked(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$970), _$ssr(_tmpl$971), _$ssr(_tmpl$944), _$ssr(_tmpl$963), _$ssr(_tmpl$964)], true);
}
export function LucideChartColumn(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$944), _$ssr(_tmpl$972), _$ssr(_tmpl$973), _$ssr(_tmpl$969)], true);
}
export function LucideChartGantt(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$974), _$ssr(_tmpl$975), _$ssr(_tmpl$944), _$ssr(_tmpl$976)], true);
}
export function LucideChartLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$944), _$ssr(_tmpl$977)], true);
}
export function LucideChartNetwork(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$978), _$ssr(_tmpl$979), _$ssr(_tmpl$980), _$ssr(_tmpl$944), _$ssr(_tmpl$981), _$ssr(_tmpl$982), _$ssr(_tmpl$983)], true);
}
export function LucideChartNoAxesColumnDecreasing(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$984), _$ssr(_tmpl$985), _$ssr(_tmpl$986)], true);
}
export function LucideChartNoAxesColumnIncreasing(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$987), _$ssr(_tmpl$988), _$ssr(_tmpl$989)], true);
}
export function LucideChartNoAxesColumn(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$990), _$ssr(_tmpl$991), _$ssr(_tmpl$992)], true);
}
export function LucideChartNoAxesCombined(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$993), _$ssr(_tmpl$994), _$ssr(_tmpl$995), _$ssr(_tmpl$996), _$ssr(_tmpl$997), _$ssr(_tmpl$998)], true);
}
export function LucideChartNoAxesGantt(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$999), _$ssr(_tmpl$1000), _$ssr(_tmpl$1001)], true);
}
export function LucideChartPie(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1002), _$ssr(_tmpl$1003)], true);
}
export function LucideChartScatter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1004), _$ssr(_tmpl$1005), _$ssr(_tmpl$1006), _$ssr(_tmpl$1007), _$ssr(_tmpl$1008), _$ssr(_tmpl$944)], true);
}
export function LucideChartSpline(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$944), _$ssr(_tmpl$1009)], true);
}
export function LucideCheckCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1010), _$ssr(_tmpl$1011)], true);
}
export function LucideCheckLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1012), _$ssr(_tmpl$1013), _$ssr(_tmpl$1014)], true);
}
export function LucideCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1015), true);
}
export function LucideChefHat(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1016), _$ssr(_tmpl$1017)], true);
}
export function LucideCherry(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1018), _$ssr(_tmpl$1019), _$ssr(_tmpl$1020), _$ssr(_tmpl$1021)], true);
}
export function LucideChevronDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1022), true);
}
export function LucideChevronFirst(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1023), _$ssr(_tmpl$1024)], true);
}
export function LucideChevronLast(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1025), _$ssr(_tmpl$1026)], true);
}
export function LucideChevronLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1027), true);
}
export function LucideChevronRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1028), true);
}
export function LucideChevronUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1029), true);
}
export function LucideChevronsDownUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1030), _$ssr(_tmpl$1031)], true);
}
export function LucideChevronsDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1032), _$ssr(_tmpl$1033)], true);
}
export function LucideChevronsLeftRightEllipsis(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$701), _$ssr(_tmpl$1034), _$ssr(_tmpl$1035), _$ssr(_tmpl$1036), _$ssr(_tmpl$1037)], true);
}
export function LucideChevronsLeftRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1038), _$ssr(_tmpl$1039)], true);
}
export function LucideChevronsLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1040), _$ssr(_tmpl$1041)], true);
}
export function LucideChevronsRightLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1042), _$ssr(_tmpl$1043)], true);
}
export function LucideChevronsRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1044), _$ssr(_tmpl$1045)], true);
}
export function LucideChevronsUpDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1046), _$ssr(_tmpl$1047)], true);
}
export function LucideChevronsUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1048), _$ssr(_tmpl$1049)], true);
}
export function LucideChrome(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$291), _$ssr(_tmpl$1050), _$ssr(_tmpl$1051), _$ssr(_tmpl$1052)], true);
}
export function LucideChurch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1053), _$ssr(_tmpl$1054), _$ssr(_tmpl$1055), _$ssr(_tmpl$1056), _$ssr(_tmpl$1057)], true);
}
export function LucideCigaretteOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1058), _$ssr(_tmpl$1059), _$ssr(_tmpl$31), _$ssr(_tmpl$1060), _$ssr(_tmpl$1061), _$ssr(_tmpl$1062)], true);
}
export function LucideCigarette(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1063), _$ssr(_tmpl$1059), _$ssr(_tmpl$1064), _$ssr(_tmpl$1061), _$ssr(_tmpl$1062)], true);
}
export function LucideCircleAlert(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$321), _$ssr(_tmpl$322)], true);
}
export function LucideCircleArrowDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1065), _$ssr(_tmpl$1066)], true);
}
export function LucideCircleArrowLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1067), _$ssr(_tmpl$1068)], true);
}
export function LucideCircleArrowOutDownLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1069), _$ssr(_tmpl$1070), _$ssr(_tmpl$1071)], true);
}
export function LucideCircleArrowOutDownRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1072), _$ssr(_tmpl$1073), _$ssr(_tmpl$1074)], true);
}
export function LucideCircleArrowOutUpLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1075), _$ssr(_tmpl$1076), _$ssr(_tmpl$1077)], true);
}
export function LucideCircleArrowOutUpRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1078), _$ssr(_tmpl$1079), _$ssr(_tmpl$1080)], true);
}
export function LucideCircleArrowRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1081), _$ssr(_tmpl$331)], true);
}
export function LucideCircleArrowUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1082), _$ssr(_tmpl$1083)], true);
}
export function LucideCircleCheckBig(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1084), _$ssr(_tmpl$1085)], true);
}
export function LucideCircleCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$325)], true);
}
export function LucideCircleChevronDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1086)], true);
}
export function LucideCircleChevronLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1087)], true);
}
export function LucideCircleChevronRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1088)], true);
}
export function LucideCircleChevronUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1089)], true);
}
export function LucideCircleDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1090), _$ssr(_tmpl$1091), _$ssr(_tmpl$1092), _$ssr(_tmpl$1093), _$ssr(_tmpl$1094), _$ssr(_tmpl$1095), _$ssr(_tmpl$1096), _$ssr(_tmpl$1097)], true);
}
export function LucideCircleDivide(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$339), _$ssr(_tmpl$1098), _$ssr(_tmpl$1099), _$ssr(_tmpl$141)], true);
}
export function LucideCircleDollarSign(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$326), _$ssr(_tmpl$327)], true);
}
export function LucideCircleDotDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1100), _$ssr(_tmpl$1101), _$ssr(_tmpl$1102), _$ssr(_tmpl$1103), _$ssr(_tmpl$1104), _$ssr(_tmpl$1105), _$ssr(_tmpl$1106), _$ssr(_tmpl$1107), _$ssr(_tmpl$293)], true);
}
export function LucideCircleDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$293)], true);
}
export function LucideCircleEllipsis(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1108), _$ssr(_tmpl$701), _$ssr(_tmpl$1109)], true);
}
export function LucideCircleEqual(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1110), _$ssr(_tmpl$1111), _$ssr(_tmpl$141)], true);
}
export function LucideCircleFadingArrowUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1112), _$ssr(_tmpl$1082), _$ssr(_tmpl$1083), _$ssr(_tmpl$1113), _$ssr(_tmpl$1114), _$ssr(_tmpl$1115), _$ssr(_tmpl$1116)], true);
}
export function LucideCircleFadingPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1112), _$ssr(_tmpl$1065), _$ssr(_tmpl$1068), _$ssr(_tmpl$1113), _$ssr(_tmpl$1114), _$ssr(_tmpl$1115), _$ssr(_tmpl$1116)], true);
}
export function LucideCircleGauge(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1117), _$ssr(_tmpl$376), _$ssr(_tmpl$1118)], true);
}
export function LucideCircleMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$331)], true);
}
export function LucideCircleOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$31), _$ssr(_tmpl$1119), _$ssr(_tmpl$1120)], true);
}
export function LucideCircleParkingOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1121), _$ssr(_tmpl$1122), _$ssr(_tmpl$1123)], true);
}
export function LucideCircleParking(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1124)], true);
}
export function LucideCirclePause(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1125), _$ssr(_tmpl$1126)], true);
}
export function LucideCirclePercent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$340), _$ssr(_tmpl$341), _$ssr(_tmpl$342)], true);
}
export function LucideCirclePlay(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1127)], true);
}
export function LucideCirclePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$331), _$ssr(_tmpl$1065)], true);
}
export function LucideCirclePoundSterling(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1128), _$ssr(_tmpl$344), _$ssr(_tmpl$346), _$ssr(_tmpl$141)], true);
}
export function LucideCirclePower(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1129), _$ssr(_tmpl$1130), _$ssr(_tmpl$141)], true);
}
export function LucideCircleQuestionMark(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$347), _$ssr(_tmpl$1131)], true);
}
export function LucideCircleSlash2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1132), _$ssr(_tmpl$141)], true);
}
export function LucideCircleSlash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1133)], true);
}
export function LucideCircleSmall(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1134), true);
}
export function LucideCircleStop(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1135)], true);
}
export function LucideCircleUserRound(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1136), _$ssr(_tmpl$1137), _$ssr(_tmpl$141)], true);
}
export function LucideCircleUser(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1138), _$ssr(_tmpl$1139)], true);
}
export function LucideCircleX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$340), _$ssr(_tmpl$1140)], true);
}
export function LucideCircle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$141), true);
}
export function LucideCircuitBoard(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1141), _$ssr(_tmpl$1142), _$ssr(_tmpl$1143), _$ssr(_tmpl$1144)], true);
}
export function LucideCitrus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1145), _$ssr(_tmpl$1146), _$ssr(_tmpl$1147), _$ssr(_tmpl$1148)], true);
}
export function LucideClapperboard(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1149), _$ssr(_tmpl$1150), _$ssr(_tmpl$1151), _$ssr(_tmpl$1152)], true);
}
export function LucideClipboardCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1153), _$ssr(_tmpl$1154), _$ssr(_tmpl$1155)], true);
}
export function LucideClipboardCopy(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1153), _$ssr(_tmpl$1156), _$ssr(_tmpl$1157), _$ssr(_tmpl$1158), _$ssr(_tmpl$1159)], true);
}
export function LucideClipboardList(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1153), _$ssr(_tmpl$1154), _$ssr(_tmpl$1160), _$ssr(_tmpl$1161), _$ssr(_tmpl$1162), _$ssr(_tmpl$1163)], true);
}
export function LucideClipboardMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1153), _$ssr(_tmpl$1154), _$ssr(_tmpl$1164)], true);
}
export function LucideClipboardPaste(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1165), _$ssr(_tmpl$1166), _$ssr(_tmpl$1167), _$ssr(_tmpl$1168), _$ssr(_tmpl$1169)], true);
}
export function LucideClipboardPenLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1170), _$ssr(_tmpl$1171), _$ssr(_tmpl$1172), _$ssr(_tmpl$1173), _$ssr(_tmpl$1174)], true);
}
export function LucideClipboardPen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1170), _$ssr(_tmpl$1175), _$ssr(_tmpl$1176), _$ssr(_tmpl$1177)], true);
}
export function LucideClipboardPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1153), _$ssr(_tmpl$1154), _$ssr(_tmpl$1164), _$ssr(_tmpl$1178)], true);
}
export function LucideClipboardType(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1153), _$ssr(_tmpl$1154), _$ssr(_tmpl$1179), _$ssr(_tmpl$1180), _$ssr(_tmpl$1181)], true);
}
export function LucideClipboardX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1153), _$ssr(_tmpl$1154), _$ssr(_tmpl$1182), _$ssr(_tmpl$1183)], true);
}
export function LucideClipboard(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1153), _$ssr(_tmpl$1154)], true);
}
export function LucideClock1(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1184), _$ssr(_tmpl$141)], true);
}
export function LucideClock10(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1185), _$ssr(_tmpl$141)], true);
}
export function LucideClock11(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1186), _$ssr(_tmpl$141)], true);
}
export function LucideClock12(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1187), _$ssr(_tmpl$141)], true);
}
export function LucideClock2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1188), _$ssr(_tmpl$141)], true);
}
export function LucideClock3(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1189), _$ssr(_tmpl$141)], true);
}
export function LucideClock4(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1190), _$ssr(_tmpl$141)], true);
}
export function LucideClock5(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1191), _$ssr(_tmpl$141)], true);
}
export function LucideClock6(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1192), _$ssr(_tmpl$141)], true);
}
export function LucideClock7(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1193), _$ssr(_tmpl$141)], true);
}
export function LucideClock8(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1194), _$ssr(_tmpl$141)], true);
}
export function LucideClock9(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1195), _$ssr(_tmpl$141)], true);
}
export function LucideClockAlert(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1190), _$ssr(_tmpl$1196), _$ssr(_tmpl$1197), _$ssr(_tmpl$1198)], true);
}
export function LucideClockArrowDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1199), _$ssr(_tmpl$1200), _$ssr(_tmpl$811), _$ssr(_tmpl$812)], true);
}
export function LucideClockArrowUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1201), _$ssr(_tmpl$1202), _$ssr(_tmpl$814), _$ssr(_tmpl$815)], true);
}
export function LucideClockFading(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1112), _$ssr(_tmpl$1190), _$ssr(_tmpl$1113), _$ssr(_tmpl$1114), _$ssr(_tmpl$1115), _$ssr(_tmpl$1116)], true);
}
export function LucideClockPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1203), _$ssr(_tmpl$841), _$ssr(_tmpl$374), _$ssr(_tmpl$1204)], true);
}
export function LucideClock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1190), _$ssr(_tmpl$141)], true);
}
export function LucideCloudAlert(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1205), _$ssr(_tmpl$1206), _$ssr(_tmpl$1207)], true);
}
export function LucideCloudCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1208), _$ssr(_tmpl$1209)], true);
}
export function LucideCloudCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1210), _$ssr(_tmpl$1211), _$ssr(_tmpl$1212), _$ssr(_tmpl$1213), _$ssr(_tmpl$1214), _$ssr(_tmpl$1215), _$ssr(_tmpl$1216), _$ssr(_tmpl$1217), _$ssr(_tmpl$1218)], true);
}
export function LucideCloudDownload(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1219), _$ssr(_tmpl$1220), _$ssr(_tmpl$1221)], true);
}
export function LucideCloudDrizzle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1222), _$ssr(_tmpl$1223), _$ssr(_tmpl$1224), _$ssr(_tmpl$1225), _$ssr(_tmpl$1226), _$ssr(_tmpl$1227), _$ssr(_tmpl$1228)], true);
}
export function LucideCloudFog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1222), _$ssr(_tmpl$1229), _$ssr(_tmpl$1230)], true);
}
export function LucideCloudHail(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1222), _$ssr(_tmpl$1231), _$ssr(_tmpl$1232), _$ssr(_tmpl$1233), _$ssr(_tmpl$1234), _$ssr(_tmpl$1235), _$ssr(_tmpl$1236)], true);
}
export function LucideCloudLightning(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1237), _$ssr(_tmpl$1238)], true);
}
export function LucideCloudMoonRain(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1239), _$ssr(_tmpl$1240), _$ssr(_tmpl$1241), _$ssr(_tmpl$395)], true);
}
export function LucideCloudMoon(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1239), _$ssr(_tmpl$1242)], true);
}
export function LucideCloudOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$31), _$ssr(_tmpl$1243), _$ssr(_tmpl$1244)], true);
}
export function LucideCloudRainWind(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1222), _$ssr(_tmpl$1245), _$ssr(_tmpl$1246), _$ssr(_tmpl$1247)], true);
}
export function LucideCloudRain(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1222), _$ssr(_tmpl$1248), _$ssr(_tmpl$1249), _$ssr(_tmpl$155)], true);
}
export function LucideCloudSnow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1222), _$ssr(_tmpl$769), _$ssr(_tmpl$1250), _$ssr(_tmpl$1131), _$ssr(_tmpl$1251), _$ssr(_tmpl$770), _$ssr(_tmpl$1252)], true);
}
export function LucideCloudSunRain(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1253), _$ssr(_tmpl$1254), _$ssr(_tmpl$618), _$ssr(_tmpl$1255), _$ssr(_tmpl$1256), _$ssr(_tmpl$1241), _$ssr(_tmpl$1240), _$ssr(_tmpl$395)], true);
}
export function LucideCloudSun(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1253), _$ssr(_tmpl$1254), _$ssr(_tmpl$618), _$ssr(_tmpl$1255), _$ssr(_tmpl$1256), _$ssr(_tmpl$1257)], true);
}
export function LucideCloudUpload(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1258), _$ssr(_tmpl$1222), _$ssr(_tmpl$1259)], true);
}
export function LucideCloud(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1260), true);
}
export function LucideCloudy(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1261), _$ssr(_tmpl$1262)], true);
}
export function LucideClover(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1263), _$ssr(_tmpl$1264), _$ssr(_tmpl$1265)], true);
}
export function LucideClub(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1266), _$ssr(_tmpl$1267)], true);
}
export function LucideCodeXml(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1268), _$ssr(_tmpl$1269), _$ssr(_tmpl$1270)], true);
}
export function LucideCode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1271), _$ssr(_tmpl$1272)], true);
}
export function LucideCodepen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1273), _$ssr(_tmpl$1274), _$ssr(_tmpl$1275), _$ssr(_tmpl$1276), _$ssr(_tmpl$1277)], true);
}
export function LucideCodesandbox(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$532), _$ssr(_tmpl$1278), _$ssr(_tmpl$1279), _$ssr(_tmpl$1280), _$ssr(_tmpl$1281), _$ssr(_tmpl$1282)], true);
}
export function LucideCoffee(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1283), _$ssr(_tmpl$1284), _$ssr(_tmpl$1285), _$ssr(_tmpl$1286)], true);
}
export function LucideCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1287), _$ssr(_tmpl$1288), _$ssr(_tmpl$1253), _$ssr(_tmpl$1289), _$ssr(_tmpl$1290), _$ssr(_tmpl$1291), _$ssr(_tmpl$1292), _$ssr(_tmpl$1293), _$ssr(_tmpl$1294), _$ssr(_tmpl$615), _$ssr(_tmpl$1295), _$ssr(_tmpl$1296), _$ssr(_tmpl$1297), _$ssr(_tmpl$1298)], true);
}
export function LucideCoins(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1299), _$ssr(_tmpl$1300), _$ssr(_tmpl$1301), _$ssr(_tmpl$1302)], true);
}
export function LucideColumns2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1303)], true);
}
export function LucideColumns3Cog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1304), _$ssr(_tmpl$1305), _$ssr(_tmpl$1306), _$ssr(_tmpl$1307), _$ssr(_tmpl$1308), _$ssr(_tmpl$1309), _$ssr(_tmpl$1310), _$ssr(_tmpl$1311), _$ssr(_tmpl$1312), _$ssr(_tmpl$1313), _$ssr(_tmpl$1314), _$ssr(_tmpl$834)], true);
}
export function LucideColumns3(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1314), _$ssr(_tmpl$1315)], true);
}
export function LucideColumns4(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1316), _$ssr(_tmpl$1303), _$ssr(_tmpl$1317)], true);
}
export function LucideCombine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1318), _$ssr(_tmpl$1319), _$ssr(_tmpl$1320), _$ssr(_tmpl$1321), _$ssr(_tmpl$1322), _$ssr(_tmpl$1323)], true);
}
export function LucideCommand(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1324), true);
}
export function LucideCompass(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1325), _$ssr(_tmpl$141)], true);
}
export function LucideComponent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1326), _$ssr(_tmpl$1327), _$ssr(_tmpl$1328), _$ssr(_tmpl$1329)], true);
}
export function LucideComputer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1330), _$ssr(_tmpl$1331), _$ssr(_tmpl$1332), _$ssr(_tmpl$1333)], true);
}
export function LucideConciergeBell(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1334), _$ssr(_tmpl$1335), _$ssr(_tmpl$1336), _$ssr(_tmpl$1337)], true);
}
export function LucideCone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1338), _$ssr(_tmpl$1339)], true);
}
export function LucideConstruction(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1340), _$ssr(_tmpl$1341), _$ssr(_tmpl$1342), _$ssr(_tmpl$1343), _$ssr(_tmpl$1344), _$ssr(_tmpl$1345), _$ssr(_tmpl$1346), _$ssr(_tmpl$1347)], true);
}
export function LucideContactRound(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1348), _$ssr(_tmpl$1349), _$ssr(_tmpl$1350), _$ssr(_tmpl$291), _$ssr(_tmpl$810)], true);
}
export function LucideContact(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1348), _$ssr(_tmpl$1351), _$ssr(_tmpl$1350), _$ssr(_tmpl$1352), _$ssr(_tmpl$810)], true);
}
export function LucideContainer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1353), _$ssr(_tmpl$1354), _$ssr(_tmpl$1355), _$ssr(_tmpl$1356), _$ssr(_tmpl$1357)], true);
}
export function LucideContrast(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1358)], true);
}
export function LucideCookie(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1359), _$ssr(_tmpl$1360), _$ssr(_tmpl$1361), _$ssr(_tmpl$1362), _$ssr(_tmpl$1363), _$ssr(_tmpl$1364)], true);
}
export function LucideCookingPot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$42), _$ssr(_tmpl$1365), _$ssr(_tmpl$1366), _$ssr(_tmpl$1367)], true);
}
export function LucideCopyCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1368), _$ssr(_tmpl$1369), _$ssr(_tmpl$1370)], true);
}
export function LucideCopyMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1371), _$ssr(_tmpl$1369), _$ssr(_tmpl$1370)], true);
}
export function LucideCopyPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1372), _$ssr(_tmpl$1371), _$ssr(_tmpl$1369), _$ssr(_tmpl$1370)], true);
}
export function LucideCopySlash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1373), _$ssr(_tmpl$1369), _$ssr(_tmpl$1370)], true);
}
export function LucideCopyX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1374), _$ssr(_tmpl$1373), _$ssr(_tmpl$1369), _$ssr(_tmpl$1370)], true);
}
export function LucideCopy(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1369), _$ssr(_tmpl$1370)], true);
}
export function LucideCopyleft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1375)], true);
}
export function LucideCopyright(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1376)], true);
}
export function LucideCornerDownLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1377), _$ssr(_tmpl$1378)], true);
}
export function LucideCornerDownRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1379), _$ssr(_tmpl$1380)], true);
}
export function LucideCornerLeftDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1381), _$ssr(_tmpl$1382)], true);
}
export function LucideCornerLeftUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1383), _$ssr(_tmpl$1384)], true);
}
export function LucideCornerRightDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1385), _$ssr(_tmpl$1386)], true);
}
export function LucideCornerRightUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1387), _$ssr(_tmpl$1388)], true);
}
export function LucideCornerUpLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1389), _$ssr(_tmpl$1390)], true);
}
export function LucideCornerUpRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1391), _$ssr(_tmpl$1392)], true);
}
export function LucideCpu(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1393), _$ssr(_tmpl$1253), _$ssr(_tmpl$1394), _$ssr(_tmpl$1395), _$ssr(_tmpl$615), _$ssr(_tmpl$1396), _$ssr(_tmpl$1397), _$ssr(_tmpl$618), _$ssr(_tmpl$1398), _$ssr(_tmpl$1399), _$ssr(_tmpl$1400), _$ssr(_tmpl$1401), _$ssr(_tmpl$1402), _$ssr(_tmpl$1403)], true);
}
export function LucideCreativeCommons(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1404), _$ssr(_tmpl$1405)], true);
}
export function LucideCreditCard(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1406), _$ssr(_tmpl$1407)], true);
}
export function LucideCroissant(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1408), _$ssr(_tmpl$1409), _$ssr(_tmpl$1410), _$ssr(_tmpl$1411), _$ssr(_tmpl$1412)], true);
}
export function LucideCrop(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1413), _$ssr(_tmpl$1414)], true);
}
export function LucideCross(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1415), true);
}
export function LucideCrosshair(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1416), _$ssr(_tmpl$1417), _$ssr(_tmpl$1418), _$ssr(_tmpl$1419)], true);
}
export function LucideCrown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1420), _$ssr(_tmpl$270)], true);
}
export function LucideCuboid(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1421), _$ssr(_tmpl$1422), _$ssr(_tmpl$1423)], true);
}
export function LucideCupSoda(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1424), _$ssr(_tmpl$1425), _$ssr(_tmpl$1426), _$ssr(_tmpl$1427)], true);
}
export function LucideCurrency(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1428), _$ssr(_tmpl$1429), _$ssr(_tmpl$1430), _$ssr(_tmpl$1431), _$ssr(_tmpl$1432)], true);
}
export function LucideCylinder(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1433), _$ssr(_tmpl$1434)], true);
}
export function LucideDam(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1435), _$ssr(_tmpl$1436), _$ssr(_tmpl$1437), _$ssr(_tmpl$1438), _$ssr(_tmpl$1439), _$ssr(_tmpl$1440), _$ssr(_tmpl$1441)], true);
}
export function LucideDatabaseBackup(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1433), _$ssr(_tmpl$1442), _$ssr(_tmpl$1443), _$ssr(_tmpl$1444), _$ssr(_tmpl$1445), _$ssr(_tmpl$1446)], true);
}
export function LucideDatabaseZap(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1433), _$ssr(_tmpl$1447), _$ssr(_tmpl$1448), _$ssr(_tmpl$1449), _$ssr(_tmpl$1450)], true);
}
export function LucideDatabase(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1433), _$ssr(_tmpl$1451), _$ssr(_tmpl$1452)], true);
}
export function LucideDecimalsArrowLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1453), _$ssr(_tmpl$1454), _$ssr(_tmpl$1455), _$ssr(_tmpl$1456)], true);
}
export function LucideDecimalsArrowRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1457), _$ssr(_tmpl$1458), _$ssr(_tmpl$1455), _$ssr(_tmpl$1459), _$ssr(_tmpl$1456)], true);
}
export function LucideDelete(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1460), _$ssr(_tmpl$1461), _$ssr(_tmpl$1462)], true);
}
export function LucideDessert(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1463), _$ssr(_tmpl$1464), _$ssr(_tmpl$1465)], true);
}
export function LucideDiameter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1466), _$ssr(_tmpl$1467), _$ssr(_tmpl$1468), _$ssr(_tmpl$1469), _$ssr(_tmpl$1470)], true);
}
export function LucideDiamondMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1471), _$ssr(_tmpl$331)], true);
}
export function LucideDiamondPercent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1472), _$ssr(_tmpl$1473), _$ssr(_tmpl$1474), _$ssr(_tmpl$1475)], true);
}
export function LucideDiamondPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1065), _$ssr(_tmpl$1471), _$ssr(_tmpl$331)], true);
}
export function LucideDiamond(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1476), true);
}
export function LucideDice1(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$701)], true);
}
export function LucideDice2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$1477), _$ssr(_tmpl$1478)], true);
}
export function LucideDice3(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$1479), _$ssr(_tmpl$701), _$ssr(_tmpl$1163)], true);
}
export function LucideDice4(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$1479), _$ssr(_tmpl$1480), _$ssr(_tmpl$1163), _$ssr(_tmpl$1481)], true);
}
export function LucideDice5(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$1479), _$ssr(_tmpl$1480), _$ssr(_tmpl$1163), _$ssr(_tmpl$1481), _$ssr(_tmpl$701)], true);
}
export function LucideDice6(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$1479), _$ssr(_tmpl$1034), _$ssr(_tmpl$1481), _$ssr(_tmpl$1480), _$ssr(_tmpl$1037), _$ssr(_tmpl$1163)], true);
}
export function LucideDices(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1482), _$ssr(_tmpl$1483), _$ssr(_tmpl$1484), _$ssr(_tmpl$1485), _$ssr(_tmpl$1486), _$ssr(_tmpl$1487)], true);
}
export function LucideDiff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$269), _$ssr(_tmpl$1488), _$ssr(_tmpl$270)], true);
}
export function LucideDisc2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$291), _$ssr(_tmpl$701)], true);
}
export function LucideDisc3(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1489), _$ssr(_tmpl$376), _$ssr(_tmpl$1490)], true);
}
export function LucideDiscAlbum(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1491), _$ssr(_tmpl$701)], true);
}
export function LucideDisc(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$376)], true);
}
export function LucideDivide(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1492), _$ssr(_tmpl$1493), _$ssr(_tmpl$1494)], true);
}
export function LucideDnaOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1495), _$ssr(_tmpl$1496), _$ssr(_tmpl$1497), _$ssr(_tmpl$31), _$ssr(_tmpl$1498), _$ssr(_tmpl$1499), _$ssr(_tmpl$1500), _$ssr(_tmpl$1501), _$ssr(_tmpl$1502), _$ssr(_tmpl$1503)], true);
}
export function LucideDna(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1504), _$ssr(_tmpl$1505), _$ssr(_tmpl$1506), _$ssr(_tmpl$1507), _$ssr(_tmpl$1496), _$ssr(_tmpl$1508), _$ssr(_tmpl$1498), _$ssr(_tmpl$1500), _$ssr(_tmpl$1501), _$ssr(_tmpl$1502), _$ssr(_tmpl$1509)], true);
}
export function LucideDock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$173), _$ssr(_tmpl$167), _$ssr(_tmpl$1510)], true);
}
export function LucideDog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1511), _$ssr(_tmpl$937), _$ssr(_tmpl$1512), _$ssr(_tmpl$936), _$ssr(_tmpl$1513)], true);
}
export function LucideDollarSign(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1514), _$ssr(_tmpl$1515)], true);
}
export function LucideDonut(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1516), _$ssr(_tmpl$682)], true);
}
export function LucideDoorClosedLocked(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1517), _$ssr(_tmpl$1518), _$ssr(_tmpl$1519), _$ssr(_tmpl$1520), _$ssr(_tmpl$1521)], true);
}
export function LucideDoorClosed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1517), _$ssr(_tmpl$1522), _$ssr(_tmpl$104)], true);
}
export function LucideDoorOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1523), _$ssr(_tmpl$1524), _$ssr(_tmpl$1525), _$ssr(_tmpl$1526), _$ssr(_tmpl$1527)], true);
}
export function LucideDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1528), true);
}
export function LucideDownload(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1529), _$ssr(_tmpl$1530), _$ssr(_tmpl$1531)], true);
}
export function LucideDraftingCompass(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1532), _$ssr(_tmpl$1533), _$ssr(_tmpl$1534), _$ssr(_tmpl$1535), _$ssr(_tmpl$1536)], true);
}
export function LucideDrama(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1537), _$ssr(_tmpl$1538), _$ssr(_tmpl$1539), _$ssr(_tmpl$1540), _$ssr(_tmpl$1541), _$ssr(_tmpl$1542), _$ssr(_tmpl$1543), _$ssr(_tmpl$1544)], true);
}
export function LucideDribbble(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1545), _$ssr(_tmpl$1546), _$ssr(_tmpl$1547)], true);
}
export function LucideDrill(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1548), _$ssr(_tmpl$1549), _$ssr(_tmpl$1550), _$ssr(_tmpl$1551), _$ssr(_tmpl$1552), _$ssr(_tmpl$1553)], true);
}
export function LucideDrone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1554), _$ssr(_tmpl$1555), _$ssr(_tmpl$1556), _$ssr(_tmpl$1557), _$ssr(_tmpl$1558), _$ssr(_tmpl$1559), _$ssr(_tmpl$1560), _$ssr(_tmpl$1561), _$ssr(_tmpl$1562)], true);
}
export function LucideDropletOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1563), _$ssr(_tmpl$31), _$ssr(_tmpl$1564)], true);
}
export function LucideDroplet(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1565), true);
}
export function LucideDroplets(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1566), _$ssr(_tmpl$1567)], true);
}
export function LucideDrum(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1568), _$ssr(_tmpl$1569), _$ssr(_tmpl$1570), _$ssr(_tmpl$1571), _$ssr(_tmpl$1572), _$ssr(_tmpl$1573), _$ssr(_tmpl$1574)], true);
}
export function LucideDrumstick(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1575), _$ssr(_tmpl$1576)], true);
}
export function LucideDumbbell(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1577), _$ssr(_tmpl$1578), _$ssr(_tmpl$1579), _$ssr(_tmpl$1580), _$ssr(_tmpl$1581)], true);
}
export function LucideEarOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1582), _$ssr(_tmpl$1583), _$ssr(_tmpl$1584), _$ssr(_tmpl$1585), _$ssr(_tmpl$422)], true);
}
export function LucideEar(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1586), _$ssr(_tmpl$1587)], true);
}
export function LucideEarthLock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1588), _$ssr(_tmpl$1589), _$ssr(_tmpl$1590), _$ssr(_tmpl$1591), _$ssr(_tmpl$1592), _$ssr(_tmpl$1593)], true);
}
export function LucideEarth(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1590), _$ssr(_tmpl$1594), _$ssr(_tmpl$1595), _$ssr(_tmpl$141)], true);
}
export function LucideEclipse(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1596)], true);
}
export function LucideEggFried(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1597), _$ssr(_tmpl$1598)], true);
}
export function LucideEggOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$31), _$ssr(_tmpl$1599), _$ssr(_tmpl$1600)], true);
}
export function LucideEgg(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1601), true);
}
export function LucideEllipsisVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$293), _$ssr(_tmpl$1602), _$ssr(_tmpl$1603)], true);
}
export function LucideEllipsis(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$293), _$ssr(_tmpl$1604), _$ssr(_tmpl$1605)], true);
}
export function LucideEqualApproximately(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1606), _$ssr(_tmpl$1607)], true);
}
export function LucideEqualNot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1608), _$ssr(_tmpl$1609), _$ssr(_tmpl$1610)], true);
}
export function LucideEqual(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1608), _$ssr(_tmpl$1609)], true);
}
export function LucideEraser(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1611), _$ssr(_tmpl$1612)], true);
}
export function LucideEthernetPort(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1613), _$ssr(_tmpl$1614), _$ssr(_tmpl$1615), _$ssr(_tmpl$1616), _$ssr(_tmpl$1617)], true);
}
export function LucideEuro(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1618), _$ssr(_tmpl$1619), _$ssr(_tmpl$1620)], true);
}
export function LucideExpand(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1621), _$ssr(_tmpl$1622), _$ssr(_tmpl$1623), _$ssr(_tmpl$1624), _$ssr(_tmpl$1625), _$ssr(_tmpl$1626), _$ssr(_tmpl$1627), _$ssr(_tmpl$1628)], true);
}
export function LucideExternalLink(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1629), _$ssr(_tmpl$1630), _$ssr(_tmpl$1631)], true);
}
export function LucideEyeClosed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1632), _$ssr(_tmpl$1633), _$ssr(_tmpl$1634), _$ssr(_tmpl$1635), _$ssr(_tmpl$1636)], true);
}
export function LucideEyeOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1637), _$ssr(_tmpl$1638), _$ssr(_tmpl$1639), _$ssr(_tmpl$31)], true);
}
export function LucideEye(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1640), _$ssr(_tmpl$682)], true);
}
export function LucideFacebook(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1641), true);
}
export function LucideFactory(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1642), _$ssr(_tmpl$1481), _$ssr(_tmpl$1643), _$ssr(_tmpl$1163)], true);
}
export function LucideFan(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1644), _$ssr(_tmpl$1362)], true);
}
export function LucideFastForward(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1645), _$ssr(_tmpl$1646)], true);
}
export function LucideFeather(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1647), _$ssr(_tmpl$1648), _$ssr(_tmpl$1649)], true);
}
export function LucideFence(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1650), _$ssr(_tmpl$1651), _$ssr(_tmpl$1652), _$ssr(_tmpl$1653), _$ssr(_tmpl$1654), _$ssr(_tmpl$1655), _$ssr(_tmpl$1656)], true);
}
export function LucideFerrisWheel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$376), _$ssr(_tmpl$1657), _$ssr(_tmpl$1658), _$ssr(_tmpl$1659), _$ssr(_tmpl$1660), _$ssr(_tmpl$1661), _$ssr(_tmpl$1662), _$ssr(_tmpl$1663), _$ssr(_tmpl$1664)], true);
}
export function LucideFigma(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1665), _$ssr(_tmpl$1666), _$ssr(_tmpl$1667), _$ssr(_tmpl$1668), _$ssr(_tmpl$1669)], true);
}
export function LucideFileArchive(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1670), _$ssr(_tmpl$1671), _$ssr(_tmpl$1672), _$ssr(_tmpl$1673), _$ssr(_tmpl$1674), _$ssr(_tmpl$1675)], true);
}
export function LucideFileAudio2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1676), _$ssr(_tmpl$1673), _$ssr(_tmpl$1677), _$ssr(_tmpl$1678), _$ssr(_tmpl$1679)], true);
}
export function LucideFileAudio(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1680), _$ssr(_tmpl$1673), _$ssr(_tmpl$1681)], true);
}
export function LucideFileAxis3d(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1683), _$ssr(_tmpl$1684)], true);
}
export function LucideFileBadge2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1685), _$ssr(_tmpl$1686), _$ssr(_tmpl$1138)], true);
}
export function LucideFileBadge(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1687), _$ssr(_tmpl$1673), _$ssr(_tmpl$1688), _$ssr(_tmpl$1689)], true);
}
export function LucideFileBox(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1690), _$ssr(_tmpl$1673), _$ssr(_tmpl$1691), _$ssr(_tmpl$1692), _$ssr(_tmpl$1693)], true);
}
export function LucideFileChartColumnIncreasing(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1694), _$ssr(_tmpl$1695), _$ssr(_tmpl$1696)], true);
}
export function LucideFileChartColumn(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1697), _$ssr(_tmpl$1698), _$ssr(_tmpl$1699)], true);
}
export function LucideFileChartLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1700)], true);
}
export function LucideFileChartPie(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1673), _$ssr(_tmpl$1701), _$ssr(_tmpl$1702), _$ssr(_tmpl$1703)], true);
}
export function LucideFileCheck2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1704), _$ssr(_tmpl$1673), _$ssr(_tmpl$1705)], true);
}
export function LucideFileCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1706)], true);
}
export function LucideFileClock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1673), _$ssr(_tmpl$1707), _$ssr(_tmpl$1708), _$ssr(_tmpl$1709)], true);
}
export function LucideFileCode2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1704), _$ssr(_tmpl$1673), _$ssr(_tmpl$1710), _$ssr(_tmpl$1711)], true);
}
export function LucideFileCode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1712), _$ssr(_tmpl$1713), _$ssr(_tmpl$1673), _$ssr(_tmpl$1686)], true);
}
export function LucideFileCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1673), _$ssr(_tmpl$1714), _$ssr(_tmpl$1715), _$ssr(_tmpl$1716), _$ssr(_tmpl$1717), _$ssr(_tmpl$1718), _$ssr(_tmpl$1719), _$ssr(_tmpl$1720), _$ssr(_tmpl$1721), _$ssr(_tmpl$1722), _$ssr(_tmpl$1723)], true);
}
export function LucideFileDiff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$578), _$ssr(_tmpl$560), _$ssr(_tmpl$899)], true);
}
export function LucideFileDigit(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1704), _$ssr(_tmpl$1673), _$ssr(_tmpl$1724), _$ssr(_tmpl$1725), _$ssr(_tmpl$753)], true);
}
export function LucideFileDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1698), _$ssr(_tmpl$1726)], true);
}
export function LucideFileHeart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1676), _$ssr(_tmpl$1673), _$ssr(_tmpl$1727)], true);
}
export function LucideFileImage(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1728), _$ssr(_tmpl$1729)], true);
}
export function LucideFileInput(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1704), _$ssr(_tmpl$1673), _$ssr(_tmpl$1730), _$ssr(_tmpl$1711)], true);
}
export function LucideFileJson2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1704), _$ssr(_tmpl$1673), _$ssr(_tmpl$1731), _$ssr(_tmpl$1732)], true);
}
export function LucideFileJson(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1733), _$ssr(_tmpl$1734)], true);
}
export function LucideFileKey2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1735), _$ssr(_tmpl$1673), _$ssr(_tmpl$1736), _$ssr(_tmpl$1737), _$ssr(_tmpl$1738)], true);
}
export function LucideFileKey(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1739), _$ssr(_tmpl$1740), _$ssr(_tmpl$1741)], true);
}
export function LucideFileLock2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1742), _$ssr(_tmpl$1673), _$ssr(_tmpl$1743), _$ssr(_tmpl$1744)], true);
}
export function LucideFileLock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1745), _$ssr(_tmpl$1746)], true);
}
export function LucideFileMinus2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1704), _$ssr(_tmpl$1673), _$ssr(_tmpl$1747)], true);
}
export function LucideFileMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1748)], true);
}
export function LucideFileMusic(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1749), _$ssr(_tmpl$1750), _$ssr(_tmpl$1751), _$ssr(_tmpl$1752)], true);
}
export function LucideFileOutput(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1673), _$ssr(_tmpl$1753), _$ssr(_tmpl$1754), _$ssr(_tmpl$1755), _$ssr(_tmpl$1756)], true);
}
export function LucideFilePenLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1757), _$ssr(_tmpl$1174), _$ssr(_tmpl$1173)], true);
}
export function LucideFilePen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1758), _$ssr(_tmpl$1673), _$ssr(_tmpl$1177)], true);
}
export function LucideFilePlus2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1704), _$ssr(_tmpl$1673), _$ssr(_tmpl$1747), _$ssr(_tmpl$1759)], true);
}
export function LucideFilePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1748), _$ssr(_tmpl$1698)], true);
}
export function LucideFileQuestionMark(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1131), _$ssr(_tmpl$1686), _$ssr(_tmpl$1760)], true);
}
export function LucideFileScan(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1761), _$ssr(_tmpl$1673), _$ssr(_tmpl$1762), _$ssr(_tmpl$1763), _$ssr(_tmpl$1764), _$ssr(_tmpl$1765)], true);
}
export function LucideFileSearch2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1766), _$ssr(_tmpl$1767)], true);
}
export function LucideFileSearch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1673), _$ssr(_tmpl$1768), _$ssr(_tmpl$1769), _$ssr(_tmpl$1689)], true);
}
export function LucideFileSliders(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$331), _$ssr(_tmpl$1770), _$ssr(_tmpl$1771), _$ssr(_tmpl$1772)], true);
}
export function LucideFileSpreadsheet(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1773), _$ssr(_tmpl$1774), _$ssr(_tmpl$1775), _$ssr(_tmpl$1776)], true);
}
export function LucideFileStack(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1777), _$ssr(_tmpl$1778), _$ssr(_tmpl$1779), _$ssr(_tmpl$1780)], true);
}
export function LucideFileSymlink(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1781), _$ssr(_tmpl$1673), _$ssr(_tmpl$1782)], true);
}
export function LucideFileTerminal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1783), _$ssr(_tmpl$1784)], true);
}
export function LucideFileText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1785), _$ssr(_tmpl$1786), _$ssr(_tmpl$1787)], true);
}
export function LucideFileType2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1704), _$ssr(_tmpl$1673), _$ssr(_tmpl$1788), _$ssr(_tmpl$1789), _$ssr(_tmpl$1790)], true);
}
export function LucideFileType(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1791), _$ssr(_tmpl$1792), _$ssr(_tmpl$1793)], true);
}
export function LucideFileUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1792), _$ssr(_tmpl$1794)], true);
}
export function LucideFileUser(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1673), _$ssr(_tmpl$1795), _$ssr(_tmpl$1686), _$ssr(_tmpl$1796)], true);
}
export function LucideFileVideo2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1704), _$ssr(_tmpl$1673), _$ssr(_tmpl$1797), _$ssr(_tmpl$1798)], true);
}
export function LucideFileVideo(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1799)], true);
}
export function LucideFileVolume2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$769), _$ssr(_tmpl$1800), _$ssr(_tmpl$1801)], true);
}
export function LucideFileVolume(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1802), _$ssr(_tmpl$1673), _$ssr(_tmpl$1803), _$ssr(_tmpl$1804)], true);
}
export function LucideFileWarning(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1805), _$ssr(_tmpl$1131)], true);
}
export function LucideFileX2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1704), _$ssr(_tmpl$1673), _$ssr(_tmpl$1806), _$ssr(_tmpl$1807)], true);
}
export function LucideFileX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673), _$ssr(_tmpl$1808), _$ssr(_tmpl$1809)], true);
}
export function LucideFile(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1682), _$ssr(_tmpl$1673)], true);
}
export function LucideFiles(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1810), _$ssr(_tmpl$1811), _$ssr(_tmpl$1812)], true);
}
export function LucideFilm(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1813), _$ssr(_tmpl$1814), _$ssr(_tmpl$84), _$ssr(_tmpl$1815), _$ssr(_tmpl$1816), _$ssr(_tmpl$1817), _$ssr(_tmpl$1818)], true);
}
export function LucideFingerprint(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1819), _$ssr(_tmpl$1820), _$ssr(_tmpl$1821), _$ssr(_tmpl$1822), _$ssr(_tmpl$1823), _$ssr(_tmpl$1824), _$ssr(_tmpl$1825), _$ssr(_tmpl$1826), _$ssr(_tmpl$1827)], true);
}
export function LucideFireExtinguisher(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1828), _$ssr(_tmpl$1829), _$ssr(_tmpl$1830), _$ssr(_tmpl$1831), _$ssr(_tmpl$1832), _$ssr(_tmpl$1833)], true);
}
export function LucideFishOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1834), _$ssr(_tmpl$1835), _$ssr(_tmpl$1836)], true);
}
export function LucideFishSymbol(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1837), true);
}
export function LucideFish(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1838), _$ssr(_tmpl$1839), _$ssr(_tmpl$1840), _$ssr(_tmpl$1841), _$ssr(_tmpl$1842), _$ssr(_tmpl$1843)], true);
}
export function LucideFlagOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1844), _$ssr(_tmpl$31), _$ssr(_tmpl$1845), _$ssr(_tmpl$1846)], true);
}
export function LucideFlagTriangleLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1847), true);
}
export function LucideFlagTriangleRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1848), true);
}
export function LucideFlag(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1849), true);
}
export function LucideFlameKindling(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1850), _$ssr(_tmpl$1851), _$ssr(_tmpl$1852)], true);
}
export function LucideFlame(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1853), true);
}
export function LucideFlashlightOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1854), _$ssr(_tmpl$1855), _$ssr(_tmpl$1856), _$ssr(_tmpl$422)], true);
}
export function LucideFlashlight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1857), _$ssr(_tmpl$1858), _$ssr(_tmpl$1859)], true);
}
export function LucideFlaskConicalOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1860), _$ssr(_tmpl$1861), _$ssr(_tmpl$31), _$ssr(_tmpl$1862), _$ssr(_tmpl$1863), _$ssr(_tmpl$1864)], true);
}
export function LucideFlaskConical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1865), _$ssr(_tmpl$1866), _$ssr(_tmpl$1864)], true);
}
export function LucideFlaskRound(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1867), _$ssr(_tmpl$1868), _$ssr(_tmpl$1864)], true);
}
export function LucideFlipHorizontal2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1869), _$ssr(_tmpl$1870), _$ssr(_tmpl$1393), _$ssr(_tmpl$1871), _$ssr(_tmpl$1872), _$ssr(_tmpl$1253)], true);
}
export function LucideFlipHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1873), _$ssr(_tmpl$1874), _$ssr(_tmpl$1393), _$ssr(_tmpl$1871), _$ssr(_tmpl$1872), _$ssr(_tmpl$1253)], true);
}
export function LucideFlipVertical2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1875), _$ssr(_tmpl$1876), _$ssr(_tmpl$1877), _$ssr(_tmpl$1878), _$ssr(_tmpl$1879), _$ssr(_tmpl$1880)], true);
}
export function LucideFlipVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1881), _$ssr(_tmpl$1882), _$ssr(_tmpl$1877), _$ssr(_tmpl$1878), _$ssr(_tmpl$1879), _$ssr(_tmpl$1880)], true);
}
export function LucideFlower2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1883), _$ssr(_tmpl$596), _$ssr(_tmpl$1884), _$ssr(_tmpl$1885), _$ssr(_tmpl$1886)], true);
}
export function LucideFlower(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$682), _$ssr(_tmpl$1887), _$ssr(_tmpl$1888), _$ssr(_tmpl$1889), _$ssr(_tmpl$1890), _$ssr(_tmpl$1891), _$ssr(_tmpl$1892), _$ssr(_tmpl$1893), _$ssr(_tmpl$1894), _$ssr(_tmpl$1895)], true);
}
export function LucideFocus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$682), _$ssr(_tmpl$1896), _$ssr(_tmpl$1897), _$ssr(_tmpl$1898), _$ssr(_tmpl$1899)], true);
}
export function LucideFoldHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1900), _$ssr(_tmpl$1901), _$ssr(_tmpl$1253), _$ssr(_tmpl$1872), _$ssr(_tmpl$1871), _$ssr(_tmpl$1393), _$ssr(_tmpl$1902), _$ssr(_tmpl$1903)], true);
}
export function LucideFoldVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1904), _$ssr(_tmpl$1905), _$ssr(_tmpl$1877), _$ssr(_tmpl$1878), _$ssr(_tmpl$1879), _$ssr(_tmpl$1880), _$ssr(_tmpl$1906), _$ssr(_tmpl$1907)], true);
}
export function LucideFolderArchive(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1908), _$ssr(_tmpl$1909), _$ssr(_tmpl$1910), _$ssr(_tmpl$1911)], true);
}
export function LucideFolderCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1912), _$ssr(_tmpl$26)], true);
}
export function LucideFolderClock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$821), _$ssr(_tmpl$1913), _$ssr(_tmpl$824)], true);
}
export function LucideFolderClosed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1912), _$ssr(_tmpl$105)], true);
}
export function LucideFolderCode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1914), _$ssr(_tmpl$1915), _$ssr(_tmpl$1916)], true);
}
export function LucideFolderCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1917), _$ssr(_tmpl$1918), _$ssr(_tmpl$825), _$ssr(_tmpl$1919), _$ssr(_tmpl$828), _$ssr(_tmpl$829), _$ssr(_tmpl$830), _$ssr(_tmpl$831), _$ssr(_tmpl$832), _$ssr(_tmpl$834)], true);
}
export function LucideFolderDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1920), _$ssr(_tmpl$1921)], true);
}
export function LucideFolderDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1912), _$ssr(_tmpl$33), _$ssr(_tmpl$1922)], true);
}
export function LucideFolderGit2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1923), _$ssr(_tmpl$1924), _$ssr(_tmpl$1925), _$ssr(_tmpl$1926)], true);
}
export function LucideFolderGit(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1796), _$ssr(_tmpl$1912), _$ssr(_tmpl$1927), _$ssr(_tmpl$1928)], true);
}
export function LucideFolderHeart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1929), _$ssr(_tmpl$1930)], true);
}
export function LucideFolderInput(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1931), _$ssr(_tmpl$1932), _$ssr(_tmpl$1933)], true);
}
export function LucideFolderKanban(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1920), _$ssr(_tmpl$1934), _$ssr(_tmpl$1935), _$ssr(_tmpl$1936)], true);
}
export function LucideFolderKey(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1937), _$ssr(_tmpl$1938), _$ssr(_tmpl$1939), _$ssr(_tmpl$1940)], true);
}
export function LucideFolderLock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1941), _$ssr(_tmpl$1942), _$ssr(_tmpl$1520)], true);
}
export function LucideFolderMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$27), _$ssr(_tmpl$1912)], true);
}
export function LucideFolderOpenDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1943), _$ssr(_tmpl$1944)], true);
}
export function LucideFolderOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1945), true);
}
export function LucideFolderOutput(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1946), _$ssr(_tmpl$1932), _$ssr(_tmpl$1947)], true);
}
export function LucideFolderPen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1948), _$ssr(_tmpl$1949)], true);
}
export function LucideFolderPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$33), _$ssr(_tmpl$27), _$ssr(_tmpl$1912)], true);
}
export function LucideFolderRoot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1920), _$ssr(_tmpl$1796), _$ssr(_tmpl$1950)], true);
}
export function LucideFolderSearch2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1951), _$ssr(_tmpl$1912), _$ssr(_tmpl$1952)], true);
}
export function LucideFolderSearch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1953), _$ssr(_tmpl$1954), _$ssr(_tmpl$1955)], true);
}
export function LucideFolderSymlink(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1956), _$ssr(_tmpl$1957)], true);
}
export function LucideFolderSync(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1958), _$ssr(_tmpl$1959), _$ssr(_tmpl$1960), _$ssr(_tmpl$1961), _$ssr(_tmpl$1962)], true);
}
export function LucideFolderTree(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1963), _$ssr(_tmpl$1964), _$ssr(_tmpl$1965), _$ssr(_tmpl$1966)], true);
}
export function LucideFolderUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1912), _$ssr(_tmpl$33), _$ssr(_tmpl$1967)], true);
}
export function LucideFolderX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1912), _$ssr(_tmpl$1968), _$ssr(_tmpl$1969)], true);
}
export function LucideFolder(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1912), true);
}
export function LucideFolders(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1970), _$ssr(_tmpl$1971)], true);
}
export function LucideFootprints(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1972), _$ssr(_tmpl$1973), _$ssr(_tmpl$1974), _$ssr(_tmpl$1975)], true);
}
export function LucideForklift(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1976), _$ssr(_tmpl$1977), _$ssr(_tmpl$1978), _$ssr(_tmpl$1979)], true);
}
export function LucideForward(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1980), _$ssr(_tmpl$1981)], true);
}
export function LucideFrame(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1982), _$ssr(_tmpl$1983), _$ssr(_tmpl$1984), _$ssr(_tmpl$1985)], true);
}
export function LucideFramer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1986), true);
}
export function LucideFrown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$142), _$ssr(_tmpl$1987), _$ssr(_tmpl$1988)], true);
}
export function LucideFuel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1989), _$ssr(_tmpl$1990), _$ssr(_tmpl$1991), _$ssr(_tmpl$1992)], true);
}
export function LucideFullscreen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1896), _$ssr(_tmpl$1897), _$ssr(_tmpl$1898), _$ssr(_tmpl$1899), _$ssr(_tmpl$1993)], true);
}
export function LucideFunnelPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1994), _$ssr(_tmpl$1995), _$ssr(_tmpl$1996)], true);
}
export function LucideFunnelX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1997), _$ssr(_tmpl$1998), _$ssr(_tmpl$1999)], true);
}
export function LucideFunnel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2000), true);
}
export function LucideGalleryHorizontalEnd(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2001), _$ssr(_tmpl$2002), _$ssr(_tmpl$2003)], true);
}
export function LucideGalleryHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2004), _$ssr(_tmpl$2005), _$ssr(_tmpl$2006)], true);
}
export function LucideGalleryThumbnails(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2007), _$ssr(_tmpl$2008), _$ssr(_tmpl$2009), _$ssr(_tmpl$2010), _$ssr(_tmpl$2011)], true);
}
export function LucideGalleryVerticalEnd(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2012), _$ssr(_tmpl$2013), _$ssr(_tmpl$2014)], true);
}
export function LucideGalleryVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2015), _$ssr(_tmpl$2016), _$ssr(_tmpl$2017)], true);
}
export function LucideGamepad2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2018), _$ssr(_tmpl$2019), _$ssr(_tmpl$2020), _$ssr(_tmpl$2021), _$ssr(_tmpl$2022)], true);
}
export function LucideGamepad(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2023), _$ssr(_tmpl$2024), _$ssr(_tmpl$2025), _$ssr(_tmpl$2026), _$ssr(_tmpl$382)], true);
}
export function LucideGauge(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2027), _$ssr(_tmpl$2028)], true);
}
export function LucideGavel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2029), _$ssr(_tmpl$2030), _$ssr(_tmpl$2031), _$ssr(_tmpl$2032), _$ssr(_tmpl$2033)], true);
}
export function LucideGem(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2034), _$ssr(_tmpl$2035), _$ssr(_tmpl$2036)], true);
}
export function LucideGeorgianLari(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2037), _$ssr(_tmpl$2038), _$ssr(_tmpl$287), _$ssr(_tmpl$2039)], true);
}
export function LucideGhost(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$145), _$ssr(_tmpl$146), _$ssr(_tmpl$2040)], true);
}
export function LucideGift(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2041), _$ssr(_tmpl$2042), _$ssr(_tmpl$2043), _$ssr(_tmpl$2044)], true);
}
export function LucideGitBranchPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2045), _$ssr(_tmpl$2046), _$ssr(_tmpl$2047), _$ssr(_tmpl$2048), _$ssr(_tmpl$2049), _$ssr(_tmpl$2050)], true);
}
export function LucideGitBranch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2051), _$ssr(_tmpl$2052), _$ssr(_tmpl$2053), _$ssr(_tmpl$2054)], true);
}
export function LucideGitCommitHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$682), _$ssr(_tmpl$2055), _$ssr(_tmpl$2056)], true);
}
export function LucideGitCommitVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2057), _$ssr(_tmpl$682), _$ssr(_tmpl$2058)], true);
}
export function LucideGitCompareArrows(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2059), _$ssr(_tmpl$2060), _$ssr(_tmpl$2061), _$ssr(_tmpl$2062), _$ssr(_tmpl$2063), _$ssr(_tmpl$2064)], true);
}
export function LucideGitCompare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$834), _$ssr(_tmpl$2065), _$ssr(_tmpl$2066), _$ssr(_tmpl$2067)], true);
}
export function LucideGitFork(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2068), _$ssr(_tmpl$2065), _$ssr(_tmpl$2052), _$ssr(_tmpl$2069), _$ssr(_tmpl$2070)], true);
}
export function LucideGitGraph(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2059), _$ssr(_tmpl$196), _$ssr(_tmpl$2071), _$ssr(_tmpl$1303), _$ssr(_tmpl$2072), _$ssr(_tmpl$2073)], true);
}
export function LucideGitMerge(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$834), _$ssr(_tmpl$2065), _$ssr(_tmpl$2074)], true);
}
export function LucideGitPullRequestArrow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2059), _$ssr(_tmpl$2075), _$ssr(_tmpl$2062), _$ssr(_tmpl$2061), _$ssr(_tmpl$2060)], true);
}
export function LucideGitPullRequestClosed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2065), _$ssr(_tmpl$2076), _$ssr(_tmpl$2077), _$ssr(_tmpl$2078), _$ssr(_tmpl$2079), _$ssr(_tmpl$834)], true);
}
export function LucideGitPullRequestCreateArrow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2059), _$ssr(_tmpl$2075), _$ssr(_tmpl$2061), _$ssr(_tmpl$2080), _$ssr(_tmpl$2081), _$ssr(_tmpl$2082)], true);
}
export function LucideGitPullRequestCreate(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2065), _$ssr(_tmpl$2076), _$ssr(_tmpl$2083), _$ssr(_tmpl$2049), _$ssr(_tmpl$2050)], true);
}
export function LucideGitPullRequestDraft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$834), _$ssr(_tmpl$2065), _$ssr(_tmpl$2084), _$ssr(_tmpl$2085), _$ssr(_tmpl$2086)], true);
}
export function LucideGitPullRequest(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$834), _$ssr(_tmpl$2065), _$ssr(_tmpl$2066), _$ssr(_tmpl$2086)], true);
}
export function LucideGithub(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2087), _$ssr(_tmpl$2088)], true);
}
export function LucideGitlab(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2089), true);
}
export function LucideGlassWater(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2090), _$ssr(_tmpl$2091)], true);
}
export function LucideGlasses(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2092), _$ssr(_tmpl$2093), _$ssr(_tmpl$2094), _$ssr(_tmpl$2095), _$ssr(_tmpl$2096)], true);
}
export function LucideGlobeLock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2097), _$ssr(_tmpl$2098), _$ssr(_tmpl$1592), _$ssr(_tmpl$1593)], true);
}
export function LucideGlobe(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$2099), _$ssr(_tmpl$42)], true);
}
export function LucideGoal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2100), _$ssr(_tmpl$2101), _$ssr(_tmpl$2102)], true);
}
export function LucideGpu(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2103), _$ssr(_tmpl$2104), _$ssr(_tmpl$2105), _$ssr(_tmpl$2106), _$ssr(_tmpl$2107)], true);
}
export function LucideGrab(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2108), _$ssr(_tmpl$2109), _$ssr(_tmpl$2110), _$ssr(_tmpl$2111), _$ssr(_tmpl$2112)], true);
}
export function LucideGraduationCap(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2113), _$ssr(_tmpl$2114), _$ssr(_tmpl$2115)], true);
}
export function LucideGrape(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2116), _$ssr(_tmpl$2117), _$ssr(_tmpl$2118), _$ssr(_tmpl$2119), _$ssr(_tmpl$2120), _$ssr(_tmpl$2121), _$ssr(_tmpl$2122), _$ssr(_tmpl$2123), _$ssr(_tmpl$2124)], true);
}
export function LucideGrid2x2Check(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2125), _$ssr(_tmpl$2126)], true);
}
export function LucideGrid2x2Plus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2125), _$ssr(_tmpl$841), _$ssr(_tmpl$377)], true);
}
export function LucideGrid2x2X(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2125), _$ssr(_tmpl$2127), _$ssr(_tmpl$2128)], true);
}
export function LucideGrid2x2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1303), _$ssr(_tmpl$84), _$ssr(_tmpl$2129)], true);
}
export function LucideGrid3x2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1315), _$ssr(_tmpl$84), _$ssr(_tmpl$1314), _$ssr(_tmpl$2129)], true);
}
export function LucideGrid3x3(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$700), _$ssr(_tmpl$699), _$ssr(_tmpl$1314), _$ssr(_tmpl$1315)], true);
}
export function LucideGripHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2130), _$ssr(_tmpl$2131), _$ssr(_tmpl$2132), _$ssr(_tmpl$2133), _$ssr(_tmpl$2134), _$ssr(_tmpl$2135)], true);
}
export function LucideGripVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$564), _$ssr(_tmpl$2136), _$ssr(_tmpl$2137), _$ssr(_tmpl$563), _$ssr(_tmpl$484), _$ssr(_tmpl$2138)], true);
}
export function LucideGrip(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1602), _$ssr(_tmpl$2139), _$ssr(_tmpl$2140), _$ssr(_tmpl$293), _$ssr(_tmpl$1604), _$ssr(_tmpl$1605), _$ssr(_tmpl$1603), _$ssr(_tmpl$2141), _$ssr(_tmpl$2142)], true);
}
export function LucideGroup(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2143), _$ssr(_tmpl$2144), _$ssr(_tmpl$2145), _$ssr(_tmpl$2146), _$ssr(_tmpl$2147), _$ssr(_tmpl$2148)], true);
}
export function LucideGuitar(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2149), _$ssr(_tmpl$2150), _$ssr(_tmpl$2151), _$ssr(_tmpl$2152)], true);
}
export function LucideHam(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2153), _$ssr(_tmpl$2154), _$ssr(_tmpl$2155), _$ssr(_tmpl$2156)], true);
}
export function LucideHamburger(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2157), _$ssr(_tmpl$2158), _$ssr(_tmpl$2159), _$ssr(_tmpl$2160)], true);
}
export function LucideHammer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2161), _$ssr(_tmpl$2162), _$ssr(_tmpl$2163)], true);
}
export function LucideHandCoins(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2164), _$ssr(_tmpl$2165), _$ssr(_tmpl$2166), _$ssr(_tmpl$2167), _$ssr(_tmpl$2168)], true);
}
export function LucideHandHeart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2169), _$ssr(_tmpl$2170), _$ssr(_tmpl$2171), _$ssr(_tmpl$2172)], true);
}
export function LucideHandHelping(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2173), _$ssr(_tmpl$2174), _$ssr(_tmpl$2175)], true);
}
export function LucideHandMetal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2176), _$ssr(_tmpl$2177), _$ssr(_tmpl$2178), _$ssr(_tmpl$2179)], true);
}
export function LucideHandPlatter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2180), _$ssr(_tmpl$2181), _$ssr(_tmpl$2182), _$ssr(_tmpl$2183), _$ssr(_tmpl$2184), _$ssr(_tmpl$2185)], true);
}
export function LucideHand(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2186), _$ssr(_tmpl$2187), _$ssr(_tmpl$2188), _$ssr(_tmpl$2189)], true);
}
export function LucideHandshake(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2190), _$ssr(_tmpl$2191), _$ssr(_tmpl$2192), _$ssr(_tmpl$2193), _$ssr(_tmpl$2194)], true);
}
export function LucideHardDriveDownload(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2195), _$ssr(_tmpl$2196), _$ssr(_tmpl$1331), _$ssr(_tmpl$1484), _$ssr(_tmpl$2197)], true);
}
export function LucideHardDriveUpload(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2198), _$ssr(_tmpl$2195), _$ssr(_tmpl$1331), _$ssr(_tmpl$1484), _$ssr(_tmpl$2197)], true);
}
export function LucideHardDrive(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2199), _$ssr(_tmpl$2200), _$ssr(_tmpl$2201), _$ssr(_tmpl$2202)], true);
}
export function LucideHardHat(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2203), _$ssr(_tmpl$2204), _$ssr(_tmpl$2205), _$ssr(_tmpl$2206)], true);
}
export function LucideHash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2207), _$ssr(_tmpl$2208), _$ssr(_tmpl$2209), _$ssr(_tmpl$2210)], true);
}
export function LucideHaze(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2211), _$ssr(_tmpl$2212), _$ssr(_tmpl$2213), _$ssr(_tmpl$2214), _$ssr(_tmpl$2215), _$ssr(_tmpl$2216), _$ssr(_tmpl$2217), _$ssr(_tmpl$2218)], true);
}
export function LucideHdmiPort(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2219), _$ssr(_tmpl$2220)], true);
}
export function LucideHeading1(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2221), _$ssr(_tmpl$2222), _$ssr(_tmpl$327), _$ssr(_tmpl$2223)], true);
}
export function LucideHeading2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2221), _$ssr(_tmpl$2222), _$ssr(_tmpl$327), _$ssr(_tmpl$2224)], true);
}
export function LucideHeading3(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2221), _$ssr(_tmpl$2222), _$ssr(_tmpl$327), _$ssr(_tmpl$2225), _$ssr(_tmpl$2226)], true);
}
export function LucideHeading4(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$327), _$ssr(_tmpl$2227), _$ssr(_tmpl$2228), _$ssr(_tmpl$2221), _$ssr(_tmpl$2222)], true);
}
export function LucideHeading5(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2221), _$ssr(_tmpl$2222), _$ssr(_tmpl$327), _$ssr(_tmpl$2229), _$ssr(_tmpl$2230)], true);
}
export function LucideHeading6(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2221), _$ssr(_tmpl$2222), _$ssr(_tmpl$327), _$ssr(_tmpl$2231), _$ssr(_tmpl$2232)], true);
}
export function LucideHeading(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2233), _$ssr(_tmpl$986), _$ssr(_tmpl$2234)], true);
}
export function LucideHeadphoneOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2235), _$ssr(_tmpl$2236), _$ssr(_tmpl$31), _$ssr(_tmpl$2237), _$ssr(_tmpl$2238)], true);
}
export function LucideHeadphones(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2239), true);
}
export function LucideHeadset(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2240), _$ssr(_tmpl$2241)], true);
}
export function LucideHeartCrack(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2242), _$ssr(_tmpl$2243)], true);
}
export function LucideHeartHandshake(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2242), _$ssr(_tmpl$2244), _$ssr(_tmpl$2245), _$ssr(_tmpl$2246)], true);
}
export function LucideHeartMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2247), _$ssr(_tmpl$2248)], true);
}
export function LucideHeartOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2249), _$ssr(_tmpl$2250), _$ssr(_tmpl$2251)], true);
}
export function LucideHeartPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2247), _$ssr(_tmpl$2248), _$ssr(_tmpl$2252)], true);
}
export function LucideHeartPulse(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2242), _$ssr(_tmpl$2253)], true);
}
export function LucideHeart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2242), true);
}
export function LucideHeater(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2254), _$ssr(_tmpl$2255), _$ssr(_tmpl$2256), _$ssr(_tmpl$2257), _$ssr(_tmpl$2258), _$ssr(_tmpl$2259), _$ssr(_tmpl$2260), _$ssr(_tmpl$2261), _$ssr(_tmpl$2262), _$ssr(_tmpl$2263)], true);
}
export function LucideHexagon(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$532), true);
}
export function LucideHighlighter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2264), _$ssr(_tmpl$2265)], true);
}
export function LucideHistory(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2266), _$ssr(_tmpl$2267), _$ssr(_tmpl$2268)], true);
}
export function LucideHopOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2269), _$ssr(_tmpl$2270), _$ssr(_tmpl$2271), _$ssr(_tmpl$2272), _$ssr(_tmpl$2273), _$ssr(_tmpl$2274), _$ssr(_tmpl$2275), _$ssr(_tmpl$2276), _$ssr(_tmpl$31)], true);
}
export function LucideHop(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2277), _$ssr(_tmpl$2278), _$ssr(_tmpl$2279), _$ssr(_tmpl$2280), _$ssr(_tmpl$2281), _$ssr(_tmpl$2282), _$ssr(_tmpl$2283), _$ssr(_tmpl$2284)], true);
}
export function LucideHospital(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2285), _$ssr(_tmpl$2286), _$ssr(_tmpl$2287), _$ssr(_tmpl$2288), _$ssr(_tmpl$2289), _$ssr(_tmpl$2290)], true);
}
export function LucideHotel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2291), _$ssr(_tmpl$2292), _$ssr(_tmpl$2293), _$ssr(_tmpl$2294), _$ssr(_tmpl$2295), _$ssr(_tmpl$2296), _$ssr(_tmpl$508), _$ssr(_tmpl$1162), _$ssr(_tmpl$2297), _$ssr(_tmpl$2298)], true);
}
export function LucideHourglass(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2299), _$ssr(_tmpl$2300), _$ssr(_tmpl$2301), _$ssr(_tmpl$2302)], true);
}
export function LucideHousePlug(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2303), _$ssr(_tmpl$2304), _$ssr(_tmpl$2305), _$ssr(_tmpl$2306)], true);
}
export function LucideHousePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2307), _$ssr(_tmpl$2308), _$ssr(_tmpl$2309), _$ssr(_tmpl$2049)], true);
}
export function LucideHouseWifi(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2310), _$ssr(_tmpl$1131), _$ssr(_tmpl$2311), _$ssr(_tmpl$2312)], true);
}
export function LucideHouse(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2313), _$ssr(_tmpl$2311)], true);
}
export function LucideIceCreamBowl(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2314), _$ssr(_tmpl$2315), _$ssr(_tmpl$2316)], true);
}
export function LucideIceCreamCone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2317), _$ssr(_tmpl$2318), _$ssr(_tmpl$2319)], true);
}
export function LucideIdCardLanyard(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2320), _$ssr(_tmpl$2321), _$ssr(_tmpl$2322), _$ssr(_tmpl$2323), _$ssr(_tmpl$2324)], true);
}
export function LucideIdCard(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2325), _$ssr(_tmpl$2326), _$ssr(_tmpl$2327), _$ssr(_tmpl$2328), _$ssr(_tmpl$2329)], true);
}
export function LucideImageDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2330), _$ssr(_tmpl$2331), _$ssr(_tmpl$2332), _$ssr(_tmpl$1142)], true);
}
export function LucideImageMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2333), _$ssr(_tmpl$2334), _$ssr(_tmpl$1142), _$ssr(_tmpl$2335)], true);
}
export function LucideImageOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$422), _$ssr(_tmpl$2336), _$ssr(_tmpl$2337), _$ssr(_tmpl$2338), _$ssr(_tmpl$2339), _$ssr(_tmpl$2340)], true);
}
export function LucideImagePlay(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2341), _$ssr(_tmpl$2342), _$ssr(_tmpl$2343), _$ssr(_tmpl$1142)], true);
}
export function LucideImagePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2344), _$ssr(_tmpl$2345), _$ssr(_tmpl$2346), _$ssr(_tmpl$2335), _$ssr(_tmpl$1142)], true);
}
export function LucideImageUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2330), _$ssr(_tmpl$2347), _$ssr(_tmpl$2348), _$ssr(_tmpl$1142)], true);
}
export function LucideImageUpscale(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2349), _$ssr(_tmpl$2350), _$ssr(_tmpl$2351), _$ssr(_tmpl$2352), _$ssr(_tmpl$2353), _$ssr(_tmpl$2354), _$ssr(_tmpl$2355), _$ssr(_tmpl$2356)], true);
}
export function LucideImage(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$1142), _$ssr(_tmpl$2335)], true);
}
export function LucideImages(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2357), _$ssr(_tmpl$2358), _$ssr(_tmpl$596), _$ssr(_tmpl$2359)], true);
}
export function LucideImport(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2360), _$ssr(_tmpl$2361), _$ssr(_tmpl$2362)], true);
}
export function LucideInbox(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2363), _$ssr(_tmpl$2200)], true);
}
export function LucideIndentDecrease(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2364), _$ssr(_tmpl$2365), _$ssr(_tmpl$2366), _$ssr(_tmpl$2367)], true);
}
export function LucideIndentIncrease(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2364), _$ssr(_tmpl$2365), _$ssr(_tmpl$2366), _$ssr(_tmpl$2368)], true);
}
export function LucideIndianRupee(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2369), _$ssr(_tmpl$17), _$ssr(_tmpl$2370), _$ssr(_tmpl$2371), _$ssr(_tmpl$2372)], true);
}
export function LucideInfinity(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2373), true);
}
export function LucideInfo(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$2374), _$ssr(_tmpl$2375)], true);
}
export function LucideInspectionPanel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$2376), _$ssr(_tmpl$2377), _$ssr(_tmpl$2378), _$ssr(_tmpl$2379)], true);
}
export function LucideInstagram(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2380), _$ssr(_tmpl$2381), _$ssr(_tmpl$2382)], true);
}
export function LucideItalic(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2383), _$ssr(_tmpl$2384), _$ssr(_tmpl$2385)], true);
}
export function LucideIterationCcw(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2386), _$ssr(_tmpl$2387)], true);
}
export function LucideIterationCw(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2388), _$ssr(_tmpl$2389)], true);
}
export function LucideJapaneseYen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2390), _$ssr(_tmpl$2391), _$ssr(_tmpl$2392)], true);
}
export function LucideJoystick(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2393), _$ssr(_tmpl$2394), _$ssr(_tmpl$2395), _$ssr(_tmpl$2396)], true);
}
export function LucideKanban(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2397), _$ssr(_tmpl$2398), _$ssr(_tmpl$2399)], true);
}
export function LucideKeyRound(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2400), _$ssr(_tmpl$2401)], true);
}
export function LucideKeySquare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2402), _$ssr(_tmpl$2403), _$ssr(_tmpl$2404)], true);
}
export function LucideKey(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2405), _$ssr(_tmpl$2406), _$ssr(_tmpl$2407)], true);
}
export function LucideKeyboardMusic(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$167), _$ssr(_tmpl$1651), _$ssr(_tmpl$170), _$ssr(_tmpl$2408), _$ssr(_tmpl$42), _$ssr(_tmpl$2409), _$ssr(_tmpl$2410), _$ssr(_tmpl$2411), _$ssr(_tmpl$2412)], true);
}
export function LucideKeyboardOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2413), _$ssr(_tmpl$2414), _$ssr(_tmpl$2415), _$ssr(_tmpl$2416), _$ssr(_tmpl$170), _$ssr(_tmpl$2408), _$ssr(_tmpl$31), _$ssr(_tmpl$2417), _$ssr(_tmpl$168), _$ssr(_tmpl$1037)], true);
}
export function LucideKeyboard(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$169), _$ssr(_tmpl$701), _$ssr(_tmpl$170), _$ssr(_tmpl$1034), _$ssr(_tmpl$2408), _$ssr(_tmpl$168), _$ssr(_tmpl$2418), _$ssr(_tmpl$1037), _$ssr(_tmpl$167)], true);
}
export function LucideLampCeiling(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2419), _$ssr(_tmpl$2420), _$ssr(_tmpl$2421)], true);
}
export function LucideLampDesk(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2422), _$ssr(_tmpl$2423), _$ssr(_tmpl$2424), _$ssr(_tmpl$2425)], true);
}
export function LucideLampFloor(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1884), _$ssr(_tmpl$2426), _$ssr(_tmpl$2427)], true);
}
export function LucideLampWallDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2428), _$ssr(_tmpl$2429), _$ssr(_tmpl$2430)], true);
}
export function LucideLampWallUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2431), _$ssr(_tmpl$2432), _$ssr(_tmpl$2433)], true);
}
export function LucideLamp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1792), _$ssr(_tmpl$2434), _$ssr(_tmpl$2435)], true);
}
export function LucideLandPlot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2436), _$ssr(_tmpl$2437), _$ssr(_tmpl$2438), _$ssr(_tmpl$2439)], true);
}
export function LucideLandmark(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2440), _$ssr(_tmpl$2441), _$ssr(_tmpl$2442), _$ssr(_tmpl$2443), _$ssr(_tmpl$2017), _$ssr(_tmpl$2444)], true);
}
export function LucideLanguages(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2445), _$ssr(_tmpl$2446), _$ssr(_tmpl$2447), _$ssr(_tmpl$2448), _$ssr(_tmpl$2449), _$ssr(_tmpl$2450)], true);
}
export function LucideLaptopMinimalCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$104), _$ssr(_tmpl$600), _$ssr(_tmpl$2451)], true);
}
export function LucideLaptopMinimal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2452), _$ssr(_tmpl$2453)], true);
}
export function LucideLaptop(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2454), _$ssr(_tmpl$2455)], true);
}
export function LucideLassoSelect(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2456), _$ssr(_tmpl$2457), _$ssr(_tmpl$2458), _$ssr(_tmpl$2459), _$ssr(_tmpl$2460)], true);
}
export function LucideLasso(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2456), _$ssr(_tmpl$2461), _$ssr(_tmpl$2459)], true);
}
export function LucideLaugh(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$2462), _$ssr(_tmpl$1987), _$ssr(_tmpl$1988)], true);
}
export function LucideLayers2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2463), _$ssr(_tmpl$2464)], true);
}
export function LucideLayers(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2465), _$ssr(_tmpl$2466), _$ssr(_tmpl$2467)], true);
}
export function LucideLayoutDashboard(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2468), _$ssr(_tmpl$2469), _$ssr(_tmpl$2470), _$ssr(_tmpl$2471)], true);
}
export function LucideLayoutGrid(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2472), _$ssr(_tmpl$2473), _$ssr(_tmpl$2474), _$ssr(_tmpl$2475)], true);
}
export function LucideLayoutList(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2472), _$ssr(_tmpl$2475), _$ssr(_tmpl$2476), _$ssr(_tmpl$2477), _$ssr(_tmpl$2478), _$ssr(_tmpl$2479)], true);
}
export function LucideLayoutPanelLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2480), _$ssr(_tmpl$2473), _$ssr(_tmpl$2474)], true);
}
export function LucideLayoutPanelTop(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2481), _$ssr(_tmpl$2475), _$ssr(_tmpl$2474)], true);
}
export function LucideLayoutTemplate(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2481), _$ssr(_tmpl$2482), _$ssr(_tmpl$2483)], true);
}
export function LucideLeaf(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2484), _$ssr(_tmpl$2485)], true);
}
export function LucideLeafyGreen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2486), _$ssr(_tmpl$2487)], true);
}
export function LucideLectern(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2488), _$ssr(_tmpl$2489), _$ssr(_tmpl$2490)], true);
}
export function LucideLetterText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2491), _$ssr(_tmpl$2492), _$ssr(_tmpl$2493), _$ssr(_tmpl$85), _$ssr(_tmpl$2494)], true);
}
export function LucideLibraryBig(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2495), _$ssr(_tmpl$1813), _$ssr(_tmpl$2496)], true);
}
export function LucideLibrary(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2497), _$ssr(_tmpl$2498), _$ssr(_tmpl$2499), _$ssr(_tmpl$2500)], true);
}
export function LucideLifeBuoy(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$2501), _$ssr(_tmpl$2502), _$ssr(_tmpl$2503), _$ssr(_tmpl$2504), _$ssr(_tmpl$291)], true);
}
export function LucideLigature(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2505), _$ssr(_tmpl$2506), _$ssr(_tmpl$2507), _$ssr(_tmpl$488), _$ssr(_tmpl$2508)], true);
}
export function LucideLightbulbOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2509), _$ssr(_tmpl$31), _$ssr(_tmpl$2510), _$ssr(_tmpl$125), _$ssr(_tmpl$2511)], true);
}
export function LucideLightbulb(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2512), _$ssr(_tmpl$125), _$ssr(_tmpl$2511)], true);
}
export function LucideLineSquiggle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2513), true);
}
export function LucideLink2Off(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2514), _$ssr(_tmpl$2515), _$ssr(_tmpl$2516), _$ssr(_tmpl$422)], true);
}
export function LucideLink2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2517), _$ssr(_tmpl$2518), _$ssr(_tmpl$339)], true);
}
export function LucideLink(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2519), _$ssr(_tmpl$2520)], true);
}
export function LucideLinkedin(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2521), _$ssr(_tmpl$2522), _$ssr(_tmpl$2523)], true);
}
export function LucideListCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2524), _$ssr(_tmpl$2525), _$ssr(_tmpl$2526), _$ssr(_tmpl$2527)], true);
}
export function LucideListChecks(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2528), _$ssr(_tmpl$2529), _$ssr(_tmpl$2530), _$ssr(_tmpl$2531), _$ssr(_tmpl$2532)], true);
}
export function LucideListCollapse(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2533), _$ssr(_tmpl$2534), _$ssr(_tmpl$2535), _$ssr(_tmpl$2536), _$ssr(_tmpl$2537)], true);
}
export function LucideListEnd(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2526), _$ssr(_tmpl$2527), _$ssr(_tmpl$2538), _$ssr(_tmpl$2539), _$ssr(_tmpl$2540)], true);
}
export function LucideListFilterPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$753), _$ssr(_tmpl$2541), _$ssr(_tmpl$2492), _$ssr(_tmpl$2542), _$ssr(_tmpl$2543)], true);
}
export function LucideListFilter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$86), _$ssr(_tmpl$2544), _$ssr(_tmpl$753)], true);
}
export function LucideListMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2545), _$ssr(_tmpl$2527), _$ssr(_tmpl$2546), _$ssr(_tmpl$2547)], true);
}
export function LucideListMusic(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2548), _$ssr(_tmpl$2549), _$ssr(_tmpl$2550), _$ssr(_tmpl$2527), _$ssr(_tmpl$2551)], true);
}
export function LucideListOrdered(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2533), _$ssr(_tmpl$2534), _$ssr(_tmpl$2535), _$ssr(_tmpl$2552), _$ssr(_tmpl$2553), _$ssr(_tmpl$2554)], true);
}
export function LucideListPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2545), _$ssr(_tmpl$2527), _$ssr(_tmpl$2546), _$ssr(_tmpl$2555), _$ssr(_tmpl$2547)], true);
}
export function LucideListRestart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$54), _$ssr(_tmpl$2556), _$ssr(_tmpl$2557), _$ssr(_tmpl$2558), _$ssr(_tmpl$855)], true);
}
export function LucideListStart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2526), _$ssr(_tmpl$2546), _$ssr(_tmpl$2559), _$ssr(_tmpl$2560), _$ssr(_tmpl$2561)], true);
}
export function LucideListTodo(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2562), _$ssr(_tmpl$2528), _$ssr(_tmpl$2530), _$ssr(_tmpl$2531), _$ssr(_tmpl$2532)], true);
}
export function LucideListTree(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2563), _$ssr(_tmpl$2564), _$ssr(_tmpl$2565), _$ssr(_tmpl$2566), _$ssr(_tmpl$2567)], true);
}
export function LucideListVideo(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2550), _$ssr(_tmpl$2527), _$ssr(_tmpl$2551), _$ssr(_tmpl$2568)], true);
}
export function LucideListX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2545), _$ssr(_tmpl$2527), _$ssr(_tmpl$2546), _$ssr(_tmpl$2569), _$ssr(_tmpl$2570)], true);
}
export function LucideList(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2571), _$ssr(_tmpl$2572), _$ssr(_tmpl$2573), _$ssr(_tmpl$2574), _$ssr(_tmpl$2575), _$ssr(_tmpl$2576)], true);
}
export function LucideLoaderCircle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2577), true);
}
export function LucideLoaderPinwheel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2578), _$ssr(_tmpl$2579), _$ssr(_tmpl$2580), _$ssr(_tmpl$141)], true);
}
export function LucideLoader(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1657), _$ssr(_tmpl$2581), _$ssr(_tmpl$2582), _$ssr(_tmpl$2583), _$ssr(_tmpl$2584), _$ssr(_tmpl$2585), _$ssr(_tmpl$2586), _$ssr(_tmpl$2587)], true);
}
export function LucideLocateFixed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2588), _$ssr(_tmpl$2589), _$ssr(_tmpl$2590), _$ssr(_tmpl$2591), _$ssr(_tmpl$2592), _$ssr(_tmpl$682)], true);
}
export function LucideLocateOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2593), _$ssr(_tmpl$2594), _$ssr(_tmpl$2595), _$ssr(_tmpl$2596), _$ssr(_tmpl$2597), _$ssr(_tmpl$31), _$ssr(_tmpl$2598)], true);
}
export function LucideLocate(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2588), _$ssr(_tmpl$2589), _$ssr(_tmpl$2590), _$ssr(_tmpl$2591), _$ssr(_tmpl$2592)], true);
}
export function LucideLocationEdit(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2599), _$ssr(_tmpl$2600), _$ssr(_tmpl$2601)], true);
}
export function LucideLockKeyholeOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2602), _$ssr(_tmpl$2014), _$ssr(_tmpl$2603)], true);
}
export function LucideLockKeyhole(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2602), _$ssr(_tmpl$2604), _$ssr(_tmpl$2605)], true);
}
export function LucideLockOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2606), _$ssr(_tmpl$2607)], true);
}
export function LucideLock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2606), _$ssr(_tmpl$2608)], true);
}
export function LucideLogIn(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2609), _$ssr(_tmpl$87), _$ssr(_tmpl$2610)], true);
}
export function LucideLogOut(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2611), _$ssr(_tmpl$89), _$ssr(_tmpl$2612)], true);
}
export function LucideLogs(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2531), _$ssr(_tmpl$2532), _$ssr(_tmpl$2530), _$ssr(_tmpl$2613), _$ssr(_tmpl$2614), _$ssr(_tmpl$2615), _$ssr(_tmpl$2616), _$ssr(_tmpl$1173), _$ssr(_tmpl$2617)], true);
}
export function LucideLollipop(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2618), _$ssr(_tmpl$2619), _$ssr(_tmpl$2620)], true);
}
export function LucideLuggage(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2621), _$ssr(_tmpl$2622), _$ssr(_tmpl$2623), _$ssr(_tmpl$1937), _$ssr(_tmpl$2624)], true);
}
export function LucideMagnet(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2625), _$ssr(_tmpl$2626), _$ssr(_tmpl$2627)], true);
}
export function LucideMailCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2628), _$ssr(_tmpl$2629), _$ssr(_tmpl$2126)], true);
}
export function LucideMailMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2630), _$ssr(_tmpl$2629), _$ssr(_tmpl$841)], true);
}
export function LucideMailOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2631), _$ssr(_tmpl$2632)], true);
}
export function LucideMailPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2628), _$ssr(_tmpl$2629), _$ssr(_tmpl$374), _$ssr(_tmpl$841)], true);
}
export function LucideMailQuestionMark(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2633), _$ssr(_tmpl$2629), _$ssr(_tmpl$2634), _$ssr(_tmpl$2635)], true);
}
export function LucideMailSearch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2636), _$ssr(_tmpl$2629), _$ssr(_tmpl$2637), _$ssr(_tmpl$834), _$ssr(_tmpl$2638)], true);
}
export function LucideMailWarning(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2633), _$ssr(_tmpl$2629), _$ssr(_tmpl$2639), _$ssr(_tmpl$2635)], true);
}
export function LucideMailX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2640), _$ssr(_tmpl$2629), _$ssr(_tmpl$2641), _$ssr(_tmpl$2642)], true);
}
export function LucideMail(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2643), _$ssr(_tmpl$171)], true);
}
export function LucideMailbox(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2644), _$ssr(_tmpl$2645), _$ssr(_tmpl$2646), _$ssr(_tmpl$2647)], true);
}
export function LucideMails(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2648), _$ssr(_tmpl$2649), _$ssr(_tmpl$2650)], true);
}
export function LucideMapPinCheckInside(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2651), _$ssr(_tmpl$600)], true);
}
export function LucideMapPinCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2652), _$ssr(_tmpl$1138), _$ssr(_tmpl$2653)], true);
}
export function LucideMapPinHouse(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2654), _$ssr(_tmpl$2655), _$ssr(_tmpl$2656), _$ssr(_tmpl$2601)], true);
}
export function LucideMapPinMinusInside(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2651), _$ssr(_tmpl$578)], true);
}
export function LucideMapPinMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2657), _$ssr(_tmpl$1138), _$ssr(_tmpl$2658)], true);
}
export function LucideMapPinOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2659), _$ssr(_tmpl$2660), _$ssr(_tmpl$31), _$ssr(_tmpl$2661), _$ssr(_tmpl$2662)], true);
}
export function LucideMapPinPlusInside(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2651), _$ssr(_tmpl$586), _$ssr(_tmpl$578)], true);
}
export function LucideMapPinPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2663), _$ssr(_tmpl$1138), _$ssr(_tmpl$2658), _$ssr(_tmpl$2081)], true);
}
export function LucideMapPinXInside(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2651), _$ssr(_tmpl$604), _$ssr(_tmpl$605)], true);
}
export function LucideMapPinX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2664), _$ssr(_tmpl$1138), _$ssr(_tmpl$2665), _$ssr(_tmpl$2666)], true);
}
export function LucideMapPin(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2651), _$ssr(_tmpl$1138)], true);
}
export function LucideMapPinned(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2667), _$ssr(_tmpl$596), _$ssr(_tmpl$2668)], true);
}
export function LucideMapPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2669), _$ssr(_tmpl$2670), _$ssr(_tmpl$2049), _$ssr(_tmpl$2050), _$ssr(_tmpl$2671)], true);
}
export function LucideMap(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2672), _$ssr(_tmpl$2673), _$ssr(_tmpl$2671)], true);
}
export function LucideMarsStroke(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2674), _$ssr(_tmpl$631), _$ssr(_tmpl$2675), _$ssr(_tmpl$2676)], true);
}
export function LucideMars(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2349), _$ssr(_tmpl$2677), _$ssr(_tmpl$2678)], true);
}
export function LucideMartini(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1663), _$ssr(_tmpl$2679), _$ssr(_tmpl$2680)], true);
}
export function LucideMaximize2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1629), _$ssr(_tmpl$2681), _$ssr(_tmpl$2682), _$ssr(_tmpl$2683)], true);
}
export function LucideMaximize(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2684), _$ssr(_tmpl$2685), _$ssr(_tmpl$2686), _$ssr(_tmpl$2687)], true);
}
export function LucideMedal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2688), _$ssr(_tmpl$2689), _$ssr(_tmpl$2690), _$ssr(_tmpl$2691), _$ssr(_tmpl$2692), _$ssr(_tmpl$2693)], true);
}
export function LucideMegaphoneOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2694), _$ssr(_tmpl$2695), _$ssr(_tmpl$31), _$ssr(_tmpl$2696), _$ssr(_tmpl$2697)], true);
}
export function LucideMegaphone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2698), _$ssr(_tmpl$2696), _$ssr(_tmpl$2699)], true);
}
export function LucideMeh(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$2700), _$ssr(_tmpl$1987), _$ssr(_tmpl$1988)], true);
}
export function LucideMemoryStick(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2701), _$ssr(_tmpl$2702), _$ssr(_tmpl$2703), _$ssr(_tmpl$2704), _$ssr(_tmpl$2705), _$ssr(_tmpl$2706), _$ssr(_tmpl$2707), _$ssr(_tmpl$2708), _$ssr(_tmpl$2709)], true);
}
export function LucideMenu(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2710), _$ssr(_tmpl$2711), _$ssr(_tmpl$2712)], true);
}
export function LucideMerge(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2713), _$ssr(_tmpl$2714), _$ssr(_tmpl$2715)], true);
}
export function LucideMessageCircleCode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2716), _$ssr(_tmpl$2717), _$ssr(_tmpl$2718)], true);
}
export function LucideMessageCircleDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2719), _$ssr(_tmpl$2720), _$ssr(_tmpl$2721), _$ssr(_tmpl$2722), _$ssr(_tmpl$2723), _$ssr(_tmpl$2724), _$ssr(_tmpl$2725), _$ssr(_tmpl$2726)], true);
}
export function LucideMessageCircleHeart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2727), _$ssr(_tmpl$2728)], true);
}
export function LucideMessageCircleMore(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2727), _$ssr(_tmpl$1037), _$ssr(_tmpl$701), _$ssr(_tmpl$1034)], true);
}
export function LucideMessageCircleOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2729), _$ssr(_tmpl$31), _$ssr(_tmpl$2730)], true);
}
export function LucideMessageCirclePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2727), _$ssr(_tmpl$331), _$ssr(_tmpl$1065)], true);
}
export function LucideMessageCircleQuestionMark(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2727), _$ssr(_tmpl$347), _$ssr(_tmpl$1131)], true);
}
export function LucideMessageCircleReply(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2727), _$ssr(_tmpl$2731), _$ssr(_tmpl$2732)], true);
}
export function LucideMessageCircleWarning(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2727), _$ssr(_tmpl$2733), _$ssr(_tmpl$1642)], true);
}
export function LucideMessageCircleX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2727), _$ssr(_tmpl$340), _$ssr(_tmpl$1140)], true);
}
export function LucideMessageCircle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2727), true);
}
export function LucideMessageSquareCode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2734), _$ssr(_tmpl$2735), _$ssr(_tmpl$2736)], true);
}
export function LucideMessageSquareDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2737), _$ssr(_tmpl$2738), _$ssr(_tmpl$2739), _$ssr(_tmpl$2740), _$ssr(_tmpl$2741), _$ssr(_tmpl$2742), _$ssr(_tmpl$2743), _$ssr(_tmpl$2744), _$ssr(_tmpl$2745)], true);
}
export function LucideMessageSquareDiff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2746), _$ssr(_tmpl$578), _$ssr(_tmpl$586), _$ssr(_tmpl$899)], true);
}
export function LucideMessageSquareDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2747), _$ssr(_tmpl$2052)], true);
}
export function LucideMessageSquareHeart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2736), _$ssr(_tmpl$2748)], true);
}
export function LucideMessageSquareLock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2749), _$ssr(_tmpl$2750), _$ssr(_tmpl$2751)], true);
}
export function LucideMessageSquareMore(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2736), _$ssr(_tmpl$763), _$ssr(_tmpl$759), _$ssr(_tmpl$761)], true);
}
export function LucideMessageSquareOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2340), _$ssr(_tmpl$31), _$ssr(_tmpl$2752)], true);
}
export function LucideMessageSquarePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2736), _$ssr(_tmpl$586), _$ssr(_tmpl$578)], true);
}
export function LucideMessageSquareQuote(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2736), _$ssr(_tmpl$2753), _$ssr(_tmpl$2754)], true);
}
export function LucideMessageSquareReply(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2736), _$ssr(_tmpl$2755), _$ssr(_tmpl$2756)], true);
}
export function LucideMessageSquareShare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2757), _$ssr(_tmpl$2349), _$ssr(_tmpl$2758)], true);
}
export function LucideMessageSquareText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2736), _$ssr(_tmpl$2759), _$ssr(_tmpl$52)], true);
}
export function LucideMessageSquareWarning(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2736), _$ssr(_tmpl$2760), _$ssr(_tmpl$540)], true);
}
export function LucideMessageSquareX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2736), _$ssr(_tmpl$604), _$ssr(_tmpl$605)], true);
}
export function LucideMessageSquare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2736), true);
}
export function LucideMessagesSquare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2761), _$ssr(_tmpl$2762)], true);
}
export function LucideMicOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$422), _$ssr(_tmpl$2763), _$ssr(_tmpl$2764), _$ssr(_tmpl$2765), _$ssr(_tmpl$2766), _$ssr(_tmpl$2591)], true);
}
export function LucideMicVocal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2767), _$ssr(_tmpl$2768), _$ssr(_tmpl$2769)], true);
}
export function LucideMic(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2593), _$ssr(_tmpl$2770), _$ssr(_tmpl$2771)], true);
}
export function LucideMicrochip(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2772), _$ssr(_tmpl$2773), _$ssr(_tmpl$2774), _$ssr(_tmpl$2775), _$ssr(_tmpl$2776), _$ssr(_tmpl$2777), _$ssr(_tmpl$2778), _$ssr(_tmpl$2779), _$ssr(_tmpl$2780), _$ssr(_tmpl$2781), _$ssr(_tmpl$2782)], true);
}
export function LucideMicroscope(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2783), _$ssr(_tmpl$2017), _$ssr(_tmpl$2784), _$ssr(_tmpl$2785), _$ssr(_tmpl$2786), _$ssr(_tmpl$2787)], true);
}
export function LucideMicrowave(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2788), _$ssr(_tmpl$2789), _$ssr(_tmpl$2790), _$ssr(_tmpl$771), _$ssr(_tmpl$2791)], true);
}
export function LucideMilestone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1258), _$ssr(_tmpl$2792), _$ssr(_tmpl$2793)], true);
}
export function LucideMilkOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2794), _$ssr(_tmpl$2795), _$ssr(_tmpl$2796), _$ssr(_tmpl$422)], true);
}
export function LucideMilk(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2794), _$ssr(_tmpl$2797), _$ssr(_tmpl$2798)], true);
}
export function LucideMinimize2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2799), _$ssr(_tmpl$2800), _$ssr(_tmpl$2682), _$ssr(_tmpl$2801)], true);
}
export function LucideMinimize(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2802), _$ssr(_tmpl$2803), _$ssr(_tmpl$2804), _$ssr(_tmpl$2805)], true);
}
export function LucideMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$261), true);
}
export function LucideMonitorCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$600), _$ssr(_tmpl$2806), _$ssr(_tmpl$2807), _$ssr(_tmpl$2808)], true);
}
export function LucideMonitorCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2807), _$ssr(_tmpl$2809), _$ssr(_tmpl$2810), _$ssr(_tmpl$2811), _$ssr(_tmpl$2812), _$ssr(_tmpl$2813), _$ssr(_tmpl$2814), _$ssr(_tmpl$2815), _$ssr(_tmpl$2816), _$ssr(_tmpl$2817), _$ssr(_tmpl$2808), _$ssr(_tmpl$2052)], true);
}
export function LucideMonitorDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2072), _$ssr(_tmpl$2818), _$ssr(_tmpl$2807), _$ssr(_tmpl$2808)], true);
}
export function LucideMonitorDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$560), _$ssr(_tmpl$2819), _$ssr(_tmpl$2806), _$ssr(_tmpl$2807), _$ssr(_tmpl$2808)], true);
}
export function LucideMonitorOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2820), _$ssr(_tmpl$2821), _$ssr(_tmpl$2808), _$ssr(_tmpl$2807), _$ssr(_tmpl$31)], true);
}
export function LucideMonitorPause(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2822), _$ssr(_tmpl$2823), _$ssr(_tmpl$2806), _$ssr(_tmpl$2807), _$ssr(_tmpl$2808)], true);
}
export function LucideMonitorPlay(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2824), _$ssr(_tmpl$2807), _$ssr(_tmpl$2808), _$ssr(_tmpl$2825)], true);
}
export function LucideMonitorSmartphone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2826), _$ssr(_tmpl$2827), _$ssr(_tmpl$2828), _$ssr(_tmpl$2829)], true);
}
export function LucideMonitorSpeaker(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2830), _$ssr(_tmpl$2831), _$ssr(_tmpl$2832), _$ssr(_tmpl$2833), _$ssr(_tmpl$2834)], true);
}
export function LucideMonitorStop(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2807), _$ssr(_tmpl$2808), _$ssr(_tmpl$2825), _$ssr(_tmpl$2835)], true);
}
export function LucideMonitorUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$593), _$ssr(_tmpl$560), _$ssr(_tmpl$2806), _$ssr(_tmpl$2807), _$ssr(_tmpl$2808)], true);
}
export function LucideMonitorX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2836), _$ssr(_tmpl$2837), _$ssr(_tmpl$2806), _$ssr(_tmpl$2807), _$ssr(_tmpl$2808)], true);
}
export function LucideMonitor(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2806), _$ssr(_tmpl$2838), _$ssr(_tmpl$2839)], true);
}
export function LucideMoonStar(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2840), _$ssr(_tmpl$2841), _$ssr(_tmpl$2842)], true);
}
export function LucideMoon(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2843), true);
}
export function LucideMountainSnow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2844), _$ssr(_tmpl$2845)], true);
}
export function LucideMountain(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2844), true);
}
export function LucideMouseOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2846), _$ssr(_tmpl$2847), _$ssr(_tmpl$2848), _$ssr(_tmpl$622)], true);
}
export function LucideMousePointer2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2849), true);
}
export function LucideMousePointerBan(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2850), _$ssr(_tmpl$824), _$ssr(_tmpl$2851)], true);
}
export function LucideMousePointerClick(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2852), _$ssr(_tmpl$2853), _$ssr(_tmpl$2854), _$ssr(_tmpl$2855), _$ssr(_tmpl$2856)], true);
}
export function LucideMousePointer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2857), _$ssr(_tmpl$2858)], true);
}
export function LucideMouse(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2859), _$ssr(_tmpl$2285)], true);
}
export function LucideMove3d(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2860), _$ssr(_tmpl$2861), _$ssr(_tmpl$2862), _$ssr(_tmpl$2863)], true);
}
export function LucideMoveDiagonal2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2864), _$ssr(_tmpl$2865), _$ssr(_tmpl$1121)], true);
}
export function LucideMoveDiagonal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2866), _$ssr(_tmpl$2867), _$ssr(_tmpl$2868)], true);
}
export function LucideMoveDownLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2869), _$ssr(_tmpl$2870)], true);
}
export function LucideMoveDownRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2871), _$ssr(_tmpl$2872)], true);
}
export function LucideMoveDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2873), _$ssr(_tmpl$2874)], true);
}
export function LucideMoveHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2875), _$ssr(_tmpl$42), _$ssr(_tmpl$1269)], true);
}
export function LucideMoveLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2876), _$ssr(_tmpl$2877)], true);
}
export function LucideMoveRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2878), _$ssr(_tmpl$2877)], true);
}
export function LucideMoveUpLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2879), _$ssr(_tmpl$2872)], true);
}
export function LucideMoveUpRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2880), _$ssr(_tmpl$2870)], true);
}
export function LucideMoveUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2881), _$ssr(_tmpl$2874)], true);
}
export function LucideMoveVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$47), _$ssr(_tmpl$2882), _$ssr(_tmpl$2713)], true);
}
export function LucideMove(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$47), _$ssr(_tmpl$2883), _$ssr(_tmpl$2884), _$ssr(_tmpl$42), _$ssr(_tmpl$2885), _$ssr(_tmpl$594)], true);
}
export function LucideMusic2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2886), _$ssr(_tmpl$2887)], true);
}
export function LucideMusic3(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2888), _$ssr(_tmpl$2889)], true);
}
export function LucideMusic4(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2890), _$ssr(_tmpl$2891), _$ssr(_tmpl$2053), _$ssr(_tmpl$2892)], true);
}
export function LucideMusic(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2890), _$ssr(_tmpl$2053), _$ssr(_tmpl$2892)], true);
}
export function LucideNavigation2Off(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2893), _$ssr(_tmpl$2894), _$ssr(_tmpl$422)], true);
}
export function LucideNavigation2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2895), true);
}
export function LucideNavigationOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2896), _$ssr(_tmpl$2897), _$ssr(_tmpl$422)], true);
}
export function LucideNavigation(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2898), true);
}
export function LucideNetwork(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2899), _$ssr(_tmpl$2900), _$ssr(_tmpl$2901), _$ssr(_tmpl$2902), _$ssr(_tmpl$2903)], true);
}
export function LucideNewspaper(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2904), _$ssr(_tmpl$2905), _$ssr(_tmpl$2906), _$ssr(_tmpl$2907)], true);
}
export function LucideNfc(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2908), _$ssr(_tmpl$2909), _$ssr(_tmpl$2910), _$ssr(_tmpl$2911)], true);
}
export function LucideNonBinary(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2912), _$ssr(_tmpl$2913), _$ssr(_tmpl$2914), _$ssr(_tmpl$2692)], true);
}
export function LucideNotebookPen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2915), _$ssr(_tmpl$1440), _$ssr(_tmpl$1437), _$ssr(_tmpl$1438), _$ssr(_tmpl$1439), _$ssr(_tmpl$2916)], true);
}
export function LucideNotebookTabs(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1440), _$ssr(_tmpl$1437), _$ssr(_tmpl$1438), _$ssr(_tmpl$1439), _$ssr(_tmpl$801), _$ssr(_tmpl$2917), _$ssr(_tmpl$2918), _$ssr(_tmpl$2919), _$ssr(_tmpl$2920)], true);
}
export function LucideNotebookText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1440), _$ssr(_tmpl$1437), _$ssr(_tmpl$1438), _$ssr(_tmpl$1439), _$ssr(_tmpl$801), _$ssr(_tmpl$2921), _$ssr(_tmpl$2922), _$ssr(_tmpl$2923)], true);
}
export function LucideNotebook(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1440), _$ssr(_tmpl$1437), _$ssr(_tmpl$1438), _$ssr(_tmpl$1439), _$ssr(_tmpl$801), _$ssr(_tmpl$2924)], true);
}
export function LucideNotepadTextDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$1657), _$ssr(_tmpl$807), _$ssr(_tmpl$2925), _$ssr(_tmpl$2926), _$ssr(_tmpl$2927), _$ssr(_tmpl$2928), _$ssr(_tmpl$2929), _$ssr(_tmpl$2930), _$ssr(_tmpl$2931), _$ssr(_tmpl$2932), _$ssr(_tmpl$906), _$ssr(_tmpl$2933)], true);
}
export function LucideNotepadText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$809), _$ssr(_tmpl$1657), _$ssr(_tmpl$807), _$ssr(_tmpl$2934), _$ssr(_tmpl$2932), _$ssr(_tmpl$906), _$ssr(_tmpl$2933)], true);
}
export function LucideNutOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2935), _$ssr(_tmpl$2936), _$ssr(_tmpl$2937), _$ssr(_tmpl$2938), _$ssr(_tmpl$422)], true);
}
export function LucideNut(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2935), _$ssr(_tmpl$2939), _$ssr(_tmpl$2940)], true);
}
export function LucideOctagonAlert(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1642), _$ssr(_tmpl$2733), _$ssr(_tmpl$2941)], true);
}
export function LucideOctagonMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2942), _$ssr(_tmpl$331)], true);
}
export function LucideOctagonPause(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2943), _$ssr(_tmpl$2944), _$ssr(_tmpl$2942)], true);
}
export function LucideOctagonX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$340), _$ssr(_tmpl$2942), _$ssr(_tmpl$1140)], true);
}
export function LucideOctagon(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2942), true);
}
export function LucideOmega(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2945), true);
}
export function LucideOption(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2946), _$ssr(_tmpl$2947)], true);
}
export function LucideOrbit(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2948), _$ssr(_tmpl$2949), _$ssr(_tmpl$682), _$ssr(_tmpl$2950), _$ssr(_tmpl$1978)], true);
}
export function LucideOrigami(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2951), _$ssr(_tmpl$2952), _$ssr(_tmpl$2953)], true);
}
export function LucidePackage2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2057), _$ssr(_tmpl$2954), _$ssr(_tmpl$2955)], true);
}
export function LucidePackageCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2956), _$ssr(_tmpl$2957), _$ssr(_tmpl$2958), _$ssr(_tmpl$2959), _$ssr(_tmpl$2960)], true);
}
export function LucidePackageMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2961), _$ssr(_tmpl$2957), _$ssr(_tmpl$2958), _$ssr(_tmpl$2959), _$ssr(_tmpl$2960)], true);
}
export function LucidePackageOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2962), _$ssr(_tmpl$2963), _$ssr(_tmpl$2964), _$ssr(_tmpl$2965)], true);
}
export function LucidePackagePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2961), _$ssr(_tmpl$2966), _$ssr(_tmpl$2957), _$ssr(_tmpl$2958), _$ssr(_tmpl$2959), _$ssr(_tmpl$2960)], true);
}
export function LucidePackageSearch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2957), _$ssr(_tmpl$2958), _$ssr(_tmpl$2959), _$ssr(_tmpl$2960), _$ssr(_tmpl$2967), _$ssr(_tmpl$2968)], true);
}
export function LucidePackageX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2957), _$ssr(_tmpl$2958), _$ssr(_tmpl$2959), _$ssr(_tmpl$2960), _$ssr(_tmpl$2969)], true);
}
export function LucidePackage(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2970), _$ssr(_tmpl$638), _$ssr(_tmpl$2959), _$ssr(_tmpl$2958)], true);
}
export function LucidePaintBucket(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2971), _$ssr(_tmpl$2972), _$ssr(_tmpl$2973), _$ssr(_tmpl$2974)], true);
}
export function LucidePaintRoller(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2975), _$ssr(_tmpl$2976), _$ssr(_tmpl$2977)], true);
}
export function LucidePaintbrushVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1283), _$ssr(_tmpl$2978), _$ssr(_tmpl$2979), _$ssr(_tmpl$2980)], true);
}
export function LucidePaintbrush(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2981), _$ssr(_tmpl$2982), _$ssr(_tmpl$2983)], true);
}
export function LucidePalette(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2984), _$ssr(_tmpl$2985), _$ssr(_tmpl$2986), _$ssr(_tmpl$2987), _$ssr(_tmpl$2988)], true);
}
export function LucidePanda(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2989), _$ssr(_tmpl$2990), _$ssr(_tmpl$2991), _$ssr(_tmpl$2992), _$ssr(_tmpl$2993), _$ssr(_tmpl$2994)], true);
}
export function LucidePanelBottomClose(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$699), _$ssr(_tmpl$2995)], true);
}
export function LucidePanelBottomDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$2996), _$ssr(_tmpl$2997), _$ssr(_tmpl$2998), _$ssr(_tmpl$2999)], true);
}
export function LucidePanelBottomOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$699), _$ssr(_tmpl$593)], true);
}
export function LucidePanelBottom(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$699)], true);
}
export function LucidePanelLeftClose(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1314), _$ssr(_tmpl$3000)], true);
}
export function LucidePanelLeftDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3001), _$ssr(_tmpl$3002), _$ssr(_tmpl$3003), _$ssr(_tmpl$3004)], true);
}
export function LucidePanelLeftOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1314), _$ssr(_tmpl$3005)], true);
}
export function LucidePanelLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1314)], true);
}
export function LucidePanelRightClose(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1315), _$ssr(_tmpl$3006)], true);
}
export function LucidePanelRightDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3007), _$ssr(_tmpl$3008), _$ssr(_tmpl$3009), _$ssr(_tmpl$3010)], true);
}
export function LucidePanelRightOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1315), _$ssr(_tmpl$2731)], true);
}
export function LucidePanelRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1315)], true);
}
export function LucidePanelTopClose(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$700), _$ssr(_tmpl$3011)], true);
}
export function LucidePanelTopDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3012), _$ssr(_tmpl$3013), _$ssr(_tmpl$3014), _$ssr(_tmpl$3015)], true);
}
export function LucidePanelTopOpen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$700), _$ssr(_tmpl$3016)], true);
}
export function LucidePanelTop(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$700)], true);
}
export function LucidePanelsLeftBottom(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1314), _$ssr(_tmpl$3017)], true);
}
export function LucidePanelsRightBottom(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3018), _$ssr(_tmpl$1315)], true);
}
export function LucidePanelsTopLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$700), _$ssr(_tmpl$3019)], true);
}
export function LucidePaperclip(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3020), true);
}
export function LucideParentheses(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3021), _$ssr(_tmpl$3022)], true);
}
export function LucideParkingMeter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3023), _$ssr(_tmpl$2070), _$ssr(_tmpl$2593), _$ssr(_tmpl$3024), _$ssr(_tmpl$3025)], true);
}
export function LucidePartyPopper(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3026), _$ssr(_tmpl$3027), _$ssr(_tmpl$3028), _$ssr(_tmpl$3029), _$ssr(_tmpl$3030), _$ssr(_tmpl$3031), _$ssr(_tmpl$3032), _$ssr(_tmpl$3033), _$ssr(_tmpl$3034)], true);
}
export function LucidePause(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3035), _$ssr(_tmpl$3036)], true);
}
export function LucidePawPrint(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3037), _$ssr(_tmpl$3038), _$ssr(_tmpl$455), _$ssr(_tmpl$3039)], true);
}
export function LucidePcCase(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3040), _$ssr(_tmpl$3041), _$ssr(_tmpl$3042), _$ssr(_tmpl$578)], true);
}
export function LucidePenLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3043), _$ssr(_tmpl$3044)], true);
}
export function LucidePenOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3045), _$ssr(_tmpl$3046), _$ssr(_tmpl$31)], true);
}
export function LucidePenTool(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3047), _$ssr(_tmpl$3048), _$ssr(_tmpl$3049), _$ssr(_tmpl$3050)], true);
}
export function LucidePen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3051), true);
}
export function LucidePencilLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3043), _$ssr(_tmpl$3044), _$ssr(_tmpl$3052)], true);
}
export function LucidePencilOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3045), _$ssr(_tmpl$3046), _$ssr(_tmpl$3053), _$ssr(_tmpl$31)], true);
}
export function LucidePencilRuler(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3054), _$ssr(_tmpl$3055), _$ssr(_tmpl$3056), _$ssr(_tmpl$3057), _$ssr(_tmpl$3051), _$ssr(_tmpl$3053)], true);
}
export function LucidePencil(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3051), _$ssr(_tmpl$3053)], true);
}
export function LucidePentagon(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3058), true);
}
export function LucidePercent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1610), _$ssr(_tmpl$3059), _$ssr(_tmpl$3060)], true);
}
export function LucidePersonStanding(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1602), _$ssr(_tmpl$3061), _$ssr(_tmpl$3062), _$ssr(_tmpl$3063)], true);
}
export function LucidePhilippinePeso(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3064), _$ssr(_tmpl$255), _$ssr(_tmpl$3065)], true);
}
export function LucidePhoneCall(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3066), _$ssr(_tmpl$3067), _$ssr(_tmpl$3068)], true);
}
export function LucidePhoneForwarded(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3069), _$ssr(_tmpl$3070), _$ssr(_tmpl$3068)], true);
}
export function LucidePhoneIncoming(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3071), _$ssr(_tmpl$3072), _$ssr(_tmpl$3068)], true);
}
export function LucidePhoneMissed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3073), _$ssr(_tmpl$3072), _$ssr(_tmpl$3068)], true);
}
export function LucidePhoneOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3074), _$ssr(_tmpl$1132), _$ssr(_tmpl$3075)], true);
}
export function LucidePhoneOutgoing(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3076), _$ssr(_tmpl$3077), _$ssr(_tmpl$3068)], true);
}
export function LucidePhone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3068), true);
}
export function LucidePi(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3078), _$ssr(_tmpl$3079), _$ssr(_tmpl$3080)], true);
}
export function LucidePiano(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3081), _$ssr(_tmpl$106), _$ssr(_tmpl$3082), _$ssr(_tmpl$3083), _$ssr(_tmpl$3084), _$ssr(_tmpl$3085)], true);
}
export function LucidePickaxe(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3086), _$ssr(_tmpl$3087), _$ssr(_tmpl$3088), _$ssr(_tmpl$3089)], true);
}
export function LucidePictureInPicture2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3090), _$ssr(_tmpl$3091)], true);
}
export function LucidePictureInPicture(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3092), _$ssr(_tmpl$3093), _$ssr(_tmpl$3094), _$ssr(_tmpl$3095), _$ssr(_tmpl$3096)], true);
}
export function LucidePiggyBank(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3097), _$ssr(_tmpl$761), _$ssr(_tmpl$3098)], true);
}
export function LucidePilcrowLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3099), _$ssr(_tmpl$3100), _$ssr(_tmpl$3101), _$ssr(_tmpl$3102), _$ssr(_tmpl$3103)], true);
}
export function LucidePilcrowRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3104), _$ssr(_tmpl$3105), _$ssr(_tmpl$3099), _$ssr(_tmpl$3106), _$ssr(_tmpl$3107)], true);
}
export function LucidePilcrow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3108), _$ssr(_tmpl$230), _$ssr(_tmpl$3109)], true);
}
export function LucidePillBottle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3110), _$ssr(_tmpl$3111), _$ssr(_tmpl$3112)], true);
}
export function LucidePill(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3113), _$ssr(_tmpl$3114)], true);
}
export function LucidePinOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3115), _$ssr(_tmpl$3116), _$ssr(_tmpl$31), _$ssr(_tmpl$3117)], true);
}
export function LucidePin(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3115), _$ssr(_tmpl$3118)], true);
}
export function LucidePipette(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3119), _$ssr(_tmpl$3120), _$ssr(_tmpl$3121)], true);
}
export function LucidePizza(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3122), _$ssr(_tmpl$3123), _$ssr(_tmpl$3124), _$ssr(_tmpl$3125), _$ssr(_tmpl$3126)], true);
}
export function LucidePlaneLanding(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$111), _$ssr(_tmpl$3127)], true);
}
export function LucidePlaneTakeoff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$111), _$ssr(_tmpl$3128)], true);
}
export function LucidePlane(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3129), true);
}
export function LucidePlay(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3130), true);
}
export function LucidePlug2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3131), _$ssr(_tmpl$3132), _$ssr(_tmpl$3115), _$ssr(_tmpl$1425), _$ssr(_tmpl$3133)], true);
}
export function LucidePlugZap(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3134), _$ssr(_tmpl$3135), _$ssr(_tmpl$3136), _$ssr(_tmpl$3137), _$ssr(_tmpl$3138)], true);
}
export function LucidePlug(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3139), _$ssr(_tmpl$3140), _$ssr(_tmpl$3141), _$ssr(_tmpl$3142)], true);
}
export function LucidePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$261), _$ssr(_tmpl$237)], true);
}
export function LucidePocketKnife(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3143), _$ssr(_tmpl$1539), _$ssr(_tmpl$1484), _$ssr(_tmpl$3144), _$ssr(_tmpl$3145)], true);
}
export function LucidePocket(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3146), _$ssr(_tmpl$3147)], true);
}
export function LucidePodcast(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3148), _$ssr(_tmpl$3149), _$ssr(_tmpl$3150), _$ssr(_tmpl$3151)], true);
}
export function LucidePointerOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3152), _$ssr(_tmpl$3153), _$ssr(_tmpl$3154), _$ssr(_tmpl$3155), _$ssr(_tmpl$3156), _$ssr(_tmpl$31)], true);
}
export function LucidePointer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3157), _$ssr(_tmpl$3158), _$ssr(_tmpl$3159), _$ssr(_tmpl$3160), _$ssr(_tmpl$3161)], true);
}
export function LucidePopcorn(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3162), _$ssr(_tmpl$3163), _$ssr(_tmpl$3164), _$ssr(_tmpl$3165)], true);
}
export function LucidePopsicle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3166), _$ssr(_tmpl$3167)], true);
}
export function LucidePoundSterling(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3168), _$ssr(_tmpl$3169), _$ssr(_tmpl$3170), _$ssr(_tmpl$3171)], true);
}
export function LucidePowerOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3172), _$ssr(_tmpl$3173), _$ssr(_tmpl$1657), _$ssr(_tmpl$31)], true);
}
export function LucidePower(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2912), _$ssr(_tmpl$3174)], true);
}
export function LucidePresentation(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$120), _$ssr(_tmpl$3175), _$ssr(_tmpl$3176)], true);
}
export function LucidePrinterCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3177), _$ssr(_tmpl$2126), _$ssr(_tmpl$3178), _$ssr(_tmpl$3179)], true);
}
export function LucidePrinter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3180), _$ssr(_tmpl$3179), _$ssr(_tmpl$3181)], true);
}
export function LucideProjector(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3182), _$ssr(_tmpl$3183), _$ssr(_tmpl$3184), _$ssr(_tmpl$3185), _$ssr(_tmpl$3186), _$ssr(_tmpl$3187)], true);
}
export function LucideProportions(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$167), _$ssr(_tmpl$3188), _$ssr(_tmpl$3189)], true);
}
export function LucidePuzzle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3190), true);
}
export function LucidePyramid(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3191), _$ssr(_tmpl$47)], true);
}
export function LucideQrCode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3192), _$ssr(_tmpl$3193), _$ssr(_tmpl$3194), _$ssr(_tmpl$3195), _$ssr(_tmpl$3196), _$ssr(_tmpl$3197), _$ssr(_tmpl$2571), _$ssr(_tmpl$3198), _$ssr(_tmpl$3199), _$ssr(_tmpl$3200), _$ssr(_tmpl$3201), _$ssr(_tmpl$3202)], true);
}
export function LucideQuote(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3203), _$ssr(_tmpl$3204)], true);
}
export function LucideRabbit(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3205), _$ssr(_tmpl$373), _$ssr(_tmpl$3206), _$ssr(_tmpl$3207), _$ssr(_tmpl$3208)], true);
}
export function LucideRadar(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3209), _$ssr(_tmpl$3210), _$ssr(_tmpl$3211), _$ssr(_tmpl$3212), _$ssr(_tmpl$804), _$ssr(_tmpl$3213), _$ssr(_tmpl$376), _$ssr(_tmpl$3214)], true);
}
export function LucideRadiation(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$701), _$ssr(_tmpl$3215), _$ssr(_tmpl$3216), _$ssr(_tmpl$3217)], true);
}
export function LucideRadical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3218), true);
}
export function LucideRadioReceiver(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3219), _$ssr(_tmpl$3220), _$ssr(_tmpl$3221), _$ssr(_tmpl$373)], true);
}
export function LucideRadioTower(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3222), _$ssr(_tmpl$3223), _$ssr(_tmpl$3224), _$ssr(_tmpl$3225), _$ssr(_tmpl$3226), _$ssr(_tmpl$3227), _$ssr(_tmpl$3228)], true);
}
export function LucideRadio(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3229), _$ssr(_tmpl$3230), _$ssr(_tmpl$3231), _$ssr(_tmpl$3232), _$ssr(_tmpl$376)], true);
}
export function LucideRadius(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3233), _$ssr(_tmpl$1466), _$ssr(_tmpl$3234), _$ssr(_tmpl$376)], true);
}
export function LucideRailSymbol(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1868), _$ssr(_tmpl$3235), _$ssr(_tmpl$3236)], true);
}
export function LucideRainbow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3237), _$ssr(_tmpl$3238), _$ssr(_tmpl$3239)], true);
}
export function LucideRat(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3240), _$ssr(_tmpl$3241), _$ssr(_tmpl$3242), _$ssr(_tmpl$3243), _$ssr(_tmpl$3244)], true);
}
export function LucideRatio(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3245), _$ssr(_tmpl$382)], true);
}
export function LucideReceiptCent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3246), _$ssr(_tmpl$3247), _$ssr(_tmpl$329)], true);
}
export function LucideReceiptEuro(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3246), _$ssr(_tmpl$3248), _$ssr(_tmpl$3249)], true);
}
export function LucideReceiptIndianRupee(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3246), _$ssr(_tmpl$2691), _$ssr(_tmpl$3250), _$ssr(_tmpl$587)], true);
}
export function LucideReceiptJapaneseYen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3246), _$ssr(_tmpl$3251), _$ssr(_tmpl$3252), _$ssr(_tmpl$3253), _$ssr(_tmpl$1748)], true);
}
export function LucideReceiptPoundSterling(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3246), _$ssr(_tmpl$3254), _$ssr(_tmpl$3255), _$ssr(_tmpl$3256)], true);
}
export function LucideReceiptRussianRuble(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3246), _$ssr(_tmpl$3257), _$ssr(_tmpl$3258)], true);
}
export function LucideReceiptSwissFranc(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3246), _$ssr(_tmpl$3259), _$ssr(_tmpl$3260), _$ssr(_tmpl$3257)], true);
}
export function LucideReceiptText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3246), _$ssr(_tmpl$3261), _$ssr(_tmpl$1068), _$ssr(_tmpl$3262)], true);
}
export function LucideReceipt(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3246), _$ssr(_tmpl$326), _$ssr(_tmpl$3263)], true);
}
export function LucideRectangleCircle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3264), _$ssr(_tmpl$3265)], true);
}
export function LucideRectangleEllipsis(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$382), _$ssr(_tmpl$701), _$ssr(_tmpl$1108), _$ssr(_tmpl$1109)], true);
}
export function LucideRectangleGoggles(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3266), true);
}
export function LucideRectangleHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$382), true);
}
export function LucideRectangleVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3245), true);
}
export function LucideRecycle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3267), _$ssr(_tmpl$3268), _$ssr(_tmpl$3269), _$ssr(_tmpl$3270), _$ssr(_tmpl$3271), _$ssr(_tmpl$3272)], true);
}
export function LucideRedo2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1391), _$ssr(_tmpl$3273)], true);
}
export function LucideRedoDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3274), _$ssr(_tmpl$3275), _$ssr(_tmpl$3276)], true);
}
export function LucideRedo(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3275), _$ssr(_tmpl$3276)], true);
}
export function LucideRefreshCcwDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3277), _$ssr(_tmpl$3278), _$ssr(_tmpl$3279), _$ssr(_tmpl$3280), _$ssr(_tmpl$293)], true);
}
export function LucideRefreshCcw(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3281), _$ssr(_tmpl$2267), _$ssr(_tmpl$3282), _$ssr(_tmpl$3283)], true);
}
export function LucideRefreshCwOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3284), _$ssr(_tmpl$3285), _$ssr(_tmpl$3286), _$ssr(_tmpl$3287), _$ssr(_tmpl$3288), _$ssr(_tmpl$3289), _$ssr(_tmpl$622)], true);
}
export function LucideRefreshCw(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3290), _$ssr(_tmpl$3289), _$ssr(_tmpl$3291), _$ssr(_tmpl$3285)], true);
}
export function LucideRefrigerator(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3292), _$ssr(_tmpl$1488), _$ssr(_tmpl$3293)], true);
}
export function LucideRegex(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3294), _$ssr(_tmpl$3295), _$ssr(_tmpl$3296), _$ssr(_tmpl$3297)], true);
}
export function LucideRemoveFormatting(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3298), _$ssr(_tmpl$3299), _$ssr(_tmpl$3300), _$ssr(_tmpl$3301), _$ssr(_tmpl$3302)], true);
}
export function LucideRepeat1(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3303), _$ssr(_tmpl$3304), _$ssr(_tmpl$3305), _$ssr(_tmpl$3306), _$ssr(_tmpl$3307)], true);
}
export function LucideRepeat2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3308), _$ssr(_tmpl$3309), _$ssr(_tmpl$3310), _$ssr(_tmpl$3311)], true);
}
export function LucideRepeat(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3303), _$ssr(_tmpl$3304), _$ssr(_tmpl$3305), _$ssr(_tmpl$3306)], true);
}
export function LucideReplaceAll(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3312), _$ssr(_tmpl$3313), _$ssr(_tmpl$3314), _$ssr(_tmpl$3315), _$ssr(_tmpl$3316), _$ssr(_tmpl$3317), _$ssr(_tmpl$3318), _$ssr(_tmpl$3319), _$ssr(_tmpl$3320)], true);
}
export function LucideReplace(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3313), _$ssr(_tmpl$3314), _$ssr(_tmpl$3316), _$ssr(_tmpl$3317), _$ssr(_tmpl$3318), _$ssr(_tmpl$3321), _$ssr(_tmpl$3320)], true);
}
export function LucideReplyAll(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3322), _$ssr(_tmpl$3323), _$ssr(_tmpl$3324)], true);
}
export function LucideReply(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3325), _$ssr(_tmpl$3326)], true);
}
export function LucideRewind(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3327), _$ssr(_tmpl$3328)], true);
}
export function LucideRibbon(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3329), _$ssr(_tmpl$3330), _$ssr(_tmpl$3331), _$ssr(_tmpl$3332), _$ssr(_tmpl$3333)], true);
}
export function LucideRocket(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3334), _$ssr(_tmpl$3335), _$ssr(_tmpl$3336), _$ssr(_tmpl$3337)], true);
}
export function LucideRockingChair(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3338), _$ssr(_tmpl$3339), _$ssr(_tmpl$3340), _$ssr(_tmpl$3341)], true);
}
export function LucideRollerCoaster(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3342), _$ssr(_tmpl$3343), _$ssr(_tmpl$3344), _$ssr(_tmpl$3345), _$ssr(_tmpl$3346), _$ssr(_tmpl$3347), _$ssr(_tmpl$3348)], true);
}
export function LucideRotate3d(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3349), _$ssr(_tmpl$3350), _$ssr(_tmpl$3351)], true);
}
export function LucideRotateCcwKey(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3352), _$ssr(_tmpl$3353), _$ssr(_tmpl$3354), _$ssr(_tmpl$2267), _$ssr(_tmpl$3355)], true);
}
export function LucideRotateCcwSquare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3356), _$ssr(_tmpl$3357), _$ssr(_tmpl$3358)], true);
}
export function LucideRotateCcw(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2266), _$ssr(_tmpl$2267)], true);
}
export function LucideRotateCwSquare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3359), _$ssr(_tmpl$3360), _$ssr(_tmpl$3361)], true);
}
export function LucideRotateCw(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3362), _$ssr(_tmpl$3289)], true);
}
export function LucideRouteOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3363), _$ssr(_tmpl$3364), _$ssr(_tmpl$3365), _$ssr(_tmpl$31), _$ssr(_tmpl$3366), _$ssr(_tmpl$3367), _$ssr(_tmpl$3368)], true);
}
export function LucideRoute(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3363), _$ssr(_tmpl$3369), _$ssr(_tmpl$3368)], true);
}
export function LucideRouter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1331), _$ssr(_tmpl$3370), _$ssr(_tmpl$3371), _$ssr(_tmpl$3372), _$ssr(_tmpl$3373), _$ssr(_tmpl$3374)], true);
}
export function LucideRows2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$84)], true);
}
export function LucideRows3(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3375), _$ssr(_tmpl$3376)], true);
}
export function LucideRows4(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3377), _$ssr(_tmpl$3378), _$ssr(_tmpl$3379)], true);
}
export function LucideRss(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3380), _$ssr(_tmpl$3381), _$ssr(_tmpl$2142)], true);
}
export function LucideRulerDimensionLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3382), _$ssr(_tmpl$3383), _$ssr(_tmpl$3384), _$ssr(_tmpl$3385), _$ssr(_tmpl$3386), _$ssr(_tmpl$3387), _$ssr(_tmpl$3388)], true);
}
export function LucideRuler(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3389), _$ssr(_tmpl$3390), _$ssr(_tmpl$3391), _$ssr(_tmpl$3392), _$ssr(_tmpl$3393)], true);
}
export function LucideRussianRuble(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3394), _$ssr(_tmpl$3395)], true);
}
export function LucideSailboat(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3396), _$ssr(_tmpl$3397), _$ssr(_tmpl$3398)], true);
}
export function LucideSalad(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3399), _$ssr(_tmpl$3400), _$ssr(_tmpl$3401), _$ssr(_tmpl$3402), _$ssr(_tmpl$3403)], true);
}
export function LucideSandwich(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3404), _$ssr(_tmpl$3405), _$ssr(_tmpl$3406), _$ssr(_tmpl$3407), _$ssr(_tmpl$3408)], true);
}
export function LucideSatelliteDish(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3409), _$ssr(_tmpl$3410), _$ssr(_tmpl$3411), _$ssr(_tmpl$3412)], true);
}
export function LucideSatellite(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3413), _$ssr(_tmpl$3414), _$ssr(_tmpl$3415), _$ssr(_tmpl$3416), _$ssr(_tmpl$3417)], true);
}
export function LucideSaudiRiyal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3418), _$ssr(_tmpl$3419), _$ssr(_tmpl$3420), _$ssr(_tmpl$3421)], true);
}
export function LucideSaveAll(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3422), _$ssr(_tmpl$3423), _$ssr(_tmpl$2357), _$ssr(_tmpl$3424)], true);
}
export function LucideSaveOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3425), _$ssr(_tmpl$3426), _$ssr(_tmpl$3427), _$ssr(_tmpl$31), _$ssr(_tmpl$3428), _$ssr(_tmpl$3429), _$ssr(_tmpl$3430)], true);
}
export function LucideSave(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3431), _$ssr(_tmpl$3432), _$ssr(_tmpl$3433)], true);
}
export function LucideScale3d(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3434), _$ssr(_tmpl$3435), _$ssr(_tmpl$1466), _$ssr(_tmpl$1467)], true);
}
export function LucideScale(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3436), _$ssr(_tmpl$3437), _$ssr(_tmpl$3399), _$ssr(_tmpl$1303), _$ssr(_tmpl$3438)], true);
}
export function LucideScaling(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3439), _$ssr(_tmpl$3440), _$ssr(_tmpl$2349), _$ssr(_tmpl$3441)], true);
}
export function LucideScanBarcode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1896), _$ssr(_tmpl$1897), _$ssr(_tmpl$1898), _$ssr(_tmpl$1899), _$ssr(_tmpl$3442), _$ssr(_tmpl$323), _$ssr(_tmpl$3443)], true);
}
export function LucideScanEye(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1896), _$ssr(_tmpl$1897), _$ssr(_tmpl$1898), _$ssr(_tmpl$1899), _$ssr(_tmpl$293), _$ssr(_tmpl$3444)], true);
}
export function LucideScanFace(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1896), _$ssr(_tmpl$1897), _$ssr(_tmpl$1898), _$ssr(_tmpl$1899), _$ssr(_tmpl$3445), _$ssr(_tmpl$341), _$ssr(_tmpl$1477)], true);
}
export function LucideScanHeart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3446), _$ssr(_tmpl$1897), _$ssr(_tmpl$1898), _$ssr(_tmpl$1896), _$ssr(_tmpl$1899)], true);
}
export function LucideScanLine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1896), _$ssr(_tmpl$1897), _$ssr(_tmpl$1898), _$ssr(_tmpl$1899), _$ssr(_tmpl$2544)], true);
}
export function LucideScanQrCode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3447), _$ssr(_tmpl$1897), _$ssr(_tmpl$3448), _$ssr(_tmpl$1898), _$ssr(_tmpl$1896), _$ssr(_tmpl$2378), _$ssr(_tmpl$1899), _$ssr(_tmpl$3449)], true);
}
export function LucideScanSearch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1896), _$ssr(_tmpl$1897), _$ssr(_tmpl$1898), _$ssr(_tmpl$1899), _$ssr(_tmpl$682), _$ssr(_tmpl$3450)], true);
}
export function LucideScanText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1896), _$ssr(_tmpl$1897), _$ssr(_tmpl$1898), _$ssr(_tmpl$1899), _$ssr(_tmpl$3451), _$ssr(_tmpl$2544), _$ssr(_tmpl$3452)], true);
}
export function LucideScan(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1896), _$ssr(_tmpl$1897), _$ssr(_tmpl$1898), _$ssr(_tmpl$1899)], true);
}
export function LucideSchool(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3453), _$ssr(_tmpl$3454), _$ssr(_tmpl$3455), _$ssr(_tmpl$3456), _$ssr(_tmpl$3457), _$ssr(_tmpl$3224)], true);
}
export function LucideScissorsLineDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3458), _$ssr(_tmpl$3459), _$ssr(_tmpl$3460), _$ssr(_tmpl$1736), _$ssr(_tmpl$3461), _$ssr(_tmpl$1879), _$ssr(_tmpl$1880)], true);
}
export function LucideScissors(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2065), _$ssr(_tmpl$3462), _$ssr(_tmpl$3463), _$ssr(_tmpl$2053), _$ssr(_tmpl$3464)], true);
}
export function LucideScreenShareOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3465), _$ssr(_tmpl$2808), _$ssr(_tmpl$2807), _$ssr(_tmpl$3466), _$ssr(_tmpl$3467)], true);
}
export function LucideScreenShare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3465), _$ssr(_tmpl$2808), _$ssr(_tmpl$2807), _$ssr(_tmpl$3468), _$ssr(_tmpl$3469)], true);
}
export function LucideScrollText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3470), _$ssr(_tmpl$3471), _$ssr(_tmpl$3472), _$ssr(_tmpl$3473)], true);
}
export function LucideScroll(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3472), _$ssr(_tmpl$3473)], true);
}
export function LucideSearchCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3474), _$ssr(_tmpl$2618), _$ssr(_tmpl$2619)], true);
}
export function LucideSearchCode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3475), _$ssr(_tmpl$2619), _$ssr(_tmpl$3476), _$ssr(_tmpl$2618)], true);
}
export function LucideSearchSlash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3477), _$ssr(_tmpl$2618), _$ssr(_tmpl$2619)], true);
}
export function LucideSearchX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3477), _$ssr(_tmpl$3478), _$ssr(_tmpl$2618), _$ssr(_tmpl$2619)], true);
}
export function LucideSearch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3479), _$ssr(_tmpl$2618)], true);
}
export function LucideSection(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3480), _$ssr(_tmpl$3481)], true);
}
export function LucideSendHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3482), _$ssr(_tmpl$3483)], true);
}
export function LucideSendToBack(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1322), _$ssr(_tmpl$1323), _$ssr(_tmpl$3484), _$ssr(_tmpl$3485)], true);
}
export function LucideSend(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3486), _$ssr(_tmpl$3487)], true);
}
export function LucideSeparatorHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3488), _$ssr(_tmpl$84), _$ssr(_tmpl$3489)], true);
}
export function LucideSeparatorVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1303), _$ssr(_tmpl$3490), _$ssr(_tmpl$3491)], true);
}
export function LucideServerCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$668), _$ssr(_tmpl$3492), _$ssr(_tmpl$3493), _$ssr(_tmpl$3494), _$ssr(_tmpl$672), _$ssr(_tmpl$673), _$ssr(_tmpl$3495), _$ssr(_tmpl$3496), _$ssr(_tmpl$1484), _$ssr(_tmpl$3497), _$ssr(_tmpl$680), _$ssr(_tmpl$681)], true);
}
export function LucideServerCrash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3498), _$ssr(_tmpl$3499), _$ssr(_tmpl$3497), _$ssr(_tmpl$1484), _$ssr(_tmpl$3500)], true);
}
export function LucideServerOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3501), _$ssr(_tmpl$3502), _$ssr(_tmpl$3503), _$ssr(_tmpl$3504), _$ssr(_tmpl$1484), _$ssr(_tmpl$31)], true);
}
export function LucideServer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3505), _$ssr(_tmpl$3506), _$ssr(_tmpl$3507), _$ssr(_tmpl$3508)], true);
}
export function LucideSettings2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3509), _$ssr(_tmpl$3510), _$ssr(_tmpl$1955), _$ssr(_tmpl$3511)], true);
}
export function LucideSettings(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3512), _$ssr(_tmpl$682)], true);
}
export function LucideShapes(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3513), _$ssr(_tmpl$3514), _$ssr(_tmpl$3515)], true);
}
export function LucideShare2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3368), _$ssr(_tmpl$3516), _$ssr(_tmpl$3517), _$ssr(_tmpl$3518), _$ssr(_tmpl$3519)], true);
}
export function LucideShare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3520), _$ssr(_tmpl$2198), _$ssr(_tmpl$3521)], true);
}
export function LucideSheet(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$3522), _$ssr(_tmpl$3523), _$ssr(_tmpl$3524), _$ssr(_tmpl$3525)], true);
}
export function LucideShell(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3526), true);
}
export function LucideShieldAlert(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3527), _$ssr(_tmpl$2733), _$ssr(_tmpl$1642)], true);
}
export function LucideShieldBan(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3527), _$ssr(_tmpl$3528)], true);
}
export function LucideShieldCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3527), _$ssr(_tmpl$325)], true);
}
export function LucideShieldEllipsis(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3527), _$ssr(_tmpl$1037), _$ssr(_tmpl$701), _$ssr(_tmpl$1034)], true);
}
export function LucideShieldHalf(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3527), _$ssr(_tmpl$3529)], true);
}
export function LucideShieldMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3527), _$ssr(_tmpl$337)], true);
}
export function LucideShieldOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$31), _$ssr(_tmpl$3530), _$ssr(_tmpl$3531)], true);
}
export function LucideShieldPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3527), _$ssr(_tmpl$337), _$ssr(_tmpl$696)], true);
}
export function LucideShieldQuestionMark(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3527), _$ssr(_tmpl$1760), _$ssr(_tmpl$1131)], true);
}
export function LucideShieldUser(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3527), _$ssr(_tmpl$3532), _$ssr(_tmpl$3533)], true);
}
export function LucideShieldX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3527), _$ssr(_tmpl$1474), _$ssr(_tmpl$3534)], true);
}
export function LucideShield(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3527), true);
}
export function LucideShipWheel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1428), _$ssr(_tmpl$3535), _$ssr(_tmpl$3536), _$ssr(_tmpl$3537), _$ssr(_tmpl$3538), _$ssr(_tmpl$3539), _$ssr(_tmpl$3540), _$ssr(_tmpl$3541), _$ssr(_tmpl$3542), _$ssr(_tmpl$3543)], true);
}
export function LucideShip(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3544), _$ssr(_tmpl$2594), _$ssr(_tmpl$3545), _$ssr(_tmpl$3546), _$ssr(_tmpl$3547)], true);
}
export function LucideShirt(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3548), true);
}
export function LucideShoppingBag(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3549), _$ssr(_tmpl$3550), _$ssr(_tmpl$3551)], true);
}
export function LucideShoppingBasket(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3552), _$ssr(_tmpl$3553), _$ssr(_tmpl$3554), _$ssr(_tmpl$3555), _$ssr(_tmpl$3556), _$ssr(_tmpl$3557), _$ssr(_tmpl$3558)], true);
}
export function LucideShoppingCart(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3559), _$ssr(_tmpl$3560), _$ssr(_tmpl$3561)], true);
}
export function LucideShovel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3562), _$ssr(_tmpl$3563), _$ssr(_tmpl$3564)], true);
}
export function LucideShowerHead(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3565), _$ssr(_tmpl$3566), _$ssr(_tmpl$3567), _$ssr(_tmpl$3568), _$ssr(_tmpl$3569), _$ssr(_tmpl$3570), _$ssr(_tmpl$3571), _$ssr(_tmpl$3572), _$ssr(_tmpl$3573), _$ssr(_tmpl$3574)], true);
}
export function LucideShredder(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3575), _$ssr(_tmpl$3576), _$ssr(_tmpl$1673), _$ssr(_tmpl$3577), _$ssr(_tmpl$3578), _$ssr(_tmpl$3579), _$ssr(_tmpl$3580)], true);
}
export function LucideShrimp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3581), _$ssr(_tmpl$3582), _$ssr(_tmpl$3583), _$ssr(_tmpl$3584), _$ssr(_tmpl$3585)], true);
}
export function LucideShrink(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3586), _$ssr(_tmpl$3587), _$ssr(_tmpl$3588), _$ssr(_tmpl$3589)], true);
}
export function LucideShrub(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3590), _$ssr(_tmpl$3591), _$ssr(_tmpl$3592)], true);
}
export function LucideShuffle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3593), _$ssr(_tmpl$3070), _$ssr(_tmpl$3594), _$ssr(_tmpl$3595), _$ssr(_tmpl$3596)], true);
}
export function LucideSigma(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3597), true);
}
export function LucideSignalHigh(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3598), _$ssr(_tmpl$3599), _$ssr(_tmpl$736), _$ssr(_tmpl$3600)], true);
}
export function LucideSignalLow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3598), _$ssr(_tmpl$3599)], true);
}
export function LucideSignalMedium(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3598), _$ssr(_tmpl$3599), _$ssr(_tmpl$736)], true);
}
export function LucideSignalZero(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3598), true);
}
export function LucideSignal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3598), _$ssr(_tmpl$3599), _$ssr(_tmpl$736), _$ssr(_tmpl$3600), _$ssr(_tmpl$3601)], true);
}
export function LucideSignature(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3602), _$ssr(_tmpl$3603)], true);
}
export function LucideSignpostBig(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3604), _$ssr(_tmpl$3605), _$ssr(_tmpl$3606), _$ssr(_tmpl$1663)], true);
}
export function LucideSignpost(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1258), _$ssr(_tmpl$2792), _$ssr(_tmpl$3607)], true);
}
export function LucideSiren(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3608), _$ssr(_tmpl$3609), _$ssr(_tmpl$3610), _$ssr(_tmpl$3611), _$ssr(_tmpl$3612), _$ssr(_tmpl$3613), _$ssr(_tmpl$3614), _$ssr(_tmpl$1792)], true);
}
export function LucideSkipBack(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3615), _$ssr(_tmpl$3616)], true);
}
export function LucideSkipForward(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3617), _$ssr(_tmpl$3618)], true);
}
export function LucideSkull(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3619), _$ssr(_tmpl$3620), _$ssr(_tmpl$563), _$ssr(_tmpl$564)], true);
}
export function LucideSlack(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3621), _$ssr(_tmpl$3622), _$ssr(_tmpl$3623), _$ssr(_tmpl$3624), _$ssr(_tmpl$3625), _$ssr(_tmpl$3626), _$ssr(_tmpl$3627), _$ssr(_tmpl$3628)], true);
}
export function LucideSlash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1132), true);
}
export function LucideSlice(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3629), true);
}
export function LucideSlidersHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3630), _$ssr(_tmpl$3631), _$ssr(_tmpl$3632), _$ssr(_tmpl$3633), _$ssr(_tmpl$3634), _$ssr(_tmpl$3635), _$ssr(_tmpl$3636), _$ssr(_tmpl$2024), _$ssr(_tmpl$3637)], true);
}
export function LucideSlidersVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3638), _$ssr(_tmpl$3639), _$ssr(_tmpl$3640), _$ssr(_tmpl$3641), _$ssr(_tmpl$3642), _$ssr(_tmpl$3643), _$ssr(_tmpl$3644), _$ssr(_tmpl$3645), _$ssr(_tmpl$3646)], true);
}
export function LucideSmartphoneCharging(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3647), _$ssr(_tmpl$3648)], true);
}
export function LucideSmartphoneNfc(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3649), _$ssr(_tmpl$3650), _$ssr(_tmpl$3651), _$ssr(_tmpl$3652)], true);
}
export function LucideSmartphone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3647), _$ssr(_tmpl$804)], true);
}
export function LucideSmilePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3653), _$ssr(_tmpl$3445), _$ssr(_tmpl$1987), _$ssr(_tmpl$1988), _$ssr(_tmpl$2344), _$ssr(_tmpl$2345)], true);
}
export function LucideSmile(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$3445), _$ssr(_tmpl$1987), _$ssr(_tmpl$1988)], true);
}
export function LucideSnail(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3654), _$ssr(_tmpl$3655), _$ssr(_tmpl$3656), _$ssr(_tmpl$3657), _$ssr(_tmpl$3658)], true);
}
export function LucideSnowflake(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3659), _$ssr(_tmpl$3660), _$ssr(_tmpl$3661), _$ssr(_tmpl$3662), _$ssr(_tmpl$3663), _$ssr(_tmpl$3664), _$ssr(_tmpl$3665), _$ssr(_tmpl$3666), _$ssr(_tmpl$3667), _$ssr(_tmpl$3668), _$ssr(_tmpl$3669), _$ssr(_tmpl$3670)], true);
}
export function LucideSoapDispenserDroplet(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3671), _$ssr(_tmpl$3672), _$ssr(_tmpl$3673), _$ssr(_tmpl$3674)], true);
}
export function LucideSofa(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3675), _$ssr(_tmpl$3676), _$ssr(_tmpl$3677), _$ssr(_tmpl$3678), _$ssr(_tmpl$3679)], true);
}
export function LucideSoup(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3400), _$ssr(_tmpl$3399), _$ssr(_tmpl$3680), _$ssr(_tmpl$3681), _$ssr(_tmpl$3682), _$ssr(_tmpl$3683)], true);
}
export function LucideSpace(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3684), true);
}
export function LucideSpade(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3685), _$ssr(_tmpl$2584)], true);
}
export function LucideSparkle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3686), true);
}
export function LucideSparkles(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3686), _$ssr(_tmpl$2841), _$ssr(_tmpl$2842), _$ssr(_tmpl$3687), _$ssr(_tmpl$3688)], true);
}
export function LucideSpeaker(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$801), _$ssr(_tmpl$758), _$ssr(_tmpl$3689), _$ssr(_tmpl$760)], true);
}
export function LucideSpeech(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3690), _$ssr(_tmpl$3691), _$ssr(_tmpl$3692)], true);
}
export function LucideSpellCheck2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$392), _$ssr(_tmpl$331), _$ssr(_tmpl$3693)], true);
}
export function LucideSpellCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$392), _$ssr(_tmpl$331), _$ssr(_tmpl$818)], true);
}
export function LucideSplinePointer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3694), _$ssr(_tmpl$3695), _$ssr(_tmpl$2950), _$ssr(_tmpl$1978)], true);
}
export function LucideSpline(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2950), _$ssr(_tmpl$1978), _$ssr(_tmpl$3695)], true);
}
export function LucideSplit(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2349), _$ssr(_tmpl$3696), _$ssr(_tmpl$3697), _$ssr(_tmpl$1622)], true);
}
export function LucideSpool(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3698), _$ssr(_tmpl$3699)], true);
}
export function LucideSprayCan(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3700), _$ssr(_tmpl$3701), _$ssr(_tmpl$3702), _$ssr(_tmpl$3703), _$ssr(_tmpl$943), _$ssr(_tmpl$1455), _$ssr(_tmpl$3704), _$ssr(_tmpl$3705), _$ssr(_tmpl$3706), _$ssr(_tmpl$3707)], true);
}
export function LucideSprout(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3708), _$ssr(_tmpl$3709), _$ssr(_tmpl$3710), _$ssr(_tmpl$3711)], true);
}
export function LucideSquareActivity(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3712)], true);
}
export function LucideSquareArrowDownLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3713), _$ssr(_tmpl$3714)], true);
}
export function LucideSquareArrowDownRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3715), _$ssr(_tmpl$3716)], true);
}
export function LucideSquareArrowDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1065), _$ssr(_tmpl$1066)], true);
}
export function LucideSquareArrowLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1067), _$ssr(_tmpl$1068)], true);
}
export function LucideSquareArrowOutDownLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3717), _$ssr(_tmpl$3718), _$ssr(_tmpl$2683)], true);
}
export function LucideSquareArrowOutDownRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3719), _$ssr(_tmpl$3720), _$ssr(_tmpl$3721)], true);
}
export function LucideSquareArrowOutUpLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3722), _$ssr(_tmpl$3723), _$ssr(_tmpl$3724)], true);
}
export function LucideSquareArrowOutUpRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3725), _$ssr(_tmpl$3726), _$ssr(_tmpl$1629)], true);
}
export function LucideSquareArrowRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$331), _$ssr(_tmpl$1081)], true);
}
export function LucideSquareArrowUpLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3727), _$ssr(_tmpl$3728)], true);
}
export function LucideSquareArrowUpRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3729), _$ssr(_tmpl$3730)], true);
}
export function LucideSquareArrowUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1082), _$ssr(_tmpl$1083)], true);
}
export function LucideSquareAsterisk(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1065), _$ssr(_tmpl$3731), _$ssr(_tmpl$3732)], true);
}
export function LucideSquareBottomDashedScissors(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3733), _$ssr(_tmpl$3734), _$ssr(_tmpl$3735), _$ssr(_tmpl$3736), _$ssr(_tmpl$3737), _$ssr(_tmpl$3738), _$ssr(_tmpl$3739), _$ssr(_tmpl$3740)], true);
}
export function LucideSquareChartGantt(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3741), _$ssr(_tmpl$3742), _$ssr(_tmpl$3743)], true);
}
export function LucideSquareCheckBig(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3744), _$ssr(_tmpl$1085)], true);
}
export function LucideSquareCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$325)], true);
}
export function LucideSquareChevronDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1086)], true);
}
export function LucideSquareChevronLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1087)], true);
}
export function LucideSquareChevronRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1088)], true);
}
export function LucideSquareChevronUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1089)], true);
}
export function LucideSquareCode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3745), _$ssr(_tmpl$3746), _$ssr(_tmpl$2129)], true);
}
export function LucideSquareDashedBottomCode(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2716), _$ssr(_tmpl$2010), _$ssr(_tmpl$2717), _$ssr(_tmpl$3747), _$ssr(_tmpl$2009)], true);
}
export function LucideSquareDashedBottom(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3747), _$ssr(_tmpl$2009), _$ssr(_tmpl$2010)], true);
}
export function LucideSquareDashedKanban(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3748), _$ssr(_tmpl$1129), _$ssr(_tmpl$3749), _$ssr(_tmpl$2744), _$ssr(_tmpl$2745), _$ssr(_tmpl$2739), _$ssr(_tmpl$2740), _$ssr(_tmpl$2742), _$ssr(_tmpl$3750), _$ssr(_tmpl$3751), _$ssr(_tmpl$2010), _$ssr(_tmpl$2009), _$ssr(_tmpl$3752), _$ssr(_tmpl$3753), _$ssr(_tmpl$2743)], true);
}
export function LucideSquareDashedMousePointer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3694), _$ssr(_tmpl$2744), _$ssr(_tmpl$2740), _$ssr(_tmpl$3752), _$ssr(_tmpl$2745), _$ssr(_tmpl$3754), _$ssr(_tmpl$2739), _$ssr(_tmpl$2743), _$ssr(_tmpl$3755), _$ssr(_tmpl$3753)], true);
}
export function LucideSquareDashedTopSolid(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2010), _$ssr(_tmpl$3750), _$ssr(_tmpl$3751), _$ssr(_tmpl$2742), _$ssr(_tmpl$3753), _$ssr(_tmpl$3756), _$ssr(_tmpl$2743), _$ssr(_tmpl$3752), _$ssr(_tmpl$2009)], true);
}
export function LucideSquareDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2744), _$ssr(_tmpl$2740), _$ssr(_tmpl$3751), _$ssr(_tmpl$3752), _$ssr(_tmpl$2745), _$ssr(_tmpl$2009), _$ssr(_tmpl$2739), _$ssr(_tmpl$2010), _$ssr(_tmpl$2743), _$ssr(_tmpl$2742), _$ssr(_tmpl$3753), _$ssr(_tmpl$3750)], true);
}
export function LucideSquareDivide(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$339), _$ssr(_tmpl$1098), _$ssr(_tmpl$1099)], true);
}
export function LucideSquareDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$293)], true);
}
export function LucideSquareEqual(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1110), _$ssr(_tmpl$1111)], true);
}
export function LucideSquareFunction(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$3757), _$ssr(_tmpl$3758)], true);
}
export function LucideSquareKanban(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3748), _$ssr(_tmpl$1129), _$ssr(_tmpl$3749)], true);
}
export function LucideSquareLibrary(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3759), _$ssr(_tmpl$3760), _$ssr(_tmpl$3761)], true);
}
export function LucideSquareM(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3762)], true);
}
export function LucideSquareMenu(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3763), _$ssr(_tmpl$2544), _$ssr(_tmpl$2418)], true);
}
export function LucideSquareMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$331)], true);
}
export function LucideSquareMousePointer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3694), _$ssr(_tmpl$3719)], true);
}
export function LucideSquareParkingOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3764), _$ssr(_tmpl$3765), _$ssr(_tmpl$31), _$ssr(_tmpl$1122), _$ssr(_tmpl$3766)], true);
}
export function LucideSquareParking(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1124)], true);
}
export function LucideSquarePen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3439), _$ssr(_tmpl$3767)], true);
}
export function LucideSquarePercent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$340), _$ssr(_tmpl$341), _$ssr(_tmpl$342)], true);
}
export function LucideSquarePi(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3768), _$ssr(_tmpl$3769), _$ssr(_tmpl$3770)], true);
}
export function LucideSquarePilcrow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3771), _$ssr(_tmpl$323), _$ssr(_tmpl$3772)], true);
}
export function LucideSquarePlay(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3773)], true);
}
export function LucideSquarePlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$331), _$ssr(_tmpl$1065)], true);
}
export function LucideSquarePower(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1129), _$ssr(_tmpl$1130), _$ssr(_tmpl$2129)], true);
}
export function LucideSquareRadical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3774), _$ssr(_tmpl$2129)], true);
}
export function LucideSquareRoundCorner(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3775), _$ssr(_tmpl$3776)], true);
}
export function LucideSquareScissors(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3777), _$ssr(_tmpl$3736), _$ssr(_tmpl$3737), _$ssr(_tmpl$3738), _$ssr(_tmpl$3739), _$ssr(_tmpl$3740)], true);
}
export function LucideSquareSigma(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$3778)], true);
}
export function LucideSquareSlash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1133)], true);
}
export function LucideSquareSplitHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3779), _$ssr(_tmpl$3780), _$ssr(_tmpl$3781)], true);
}
export function LucideSquareSplitVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3782), _$ssr(_tmpl$3783), _$ssr(_tmpl$3784)], true);
}
export function LucideSquareSquare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2129), _$ssr(_tmpl$1403)], true);
}
export function LucideSquareStack(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3785), _$ssr(_tmpl$3786), _$ssr(_tmpl$3787)], true);
}
export function LucideSquareTerminal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3788), _$ssr(_tmpl$3789), _$ssr(_tmpl$40)], true);
}
export function LucideSquareUserRound(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3790), _$ssr(_tmpl$3533), _$ssr(_tmpl$695)], true);
}
export function LucideSquareUser(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1138), _$ssr(_tmpl$3791)], true);
}
export function LucideSquareX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$340), _$ssr(_tmpl$1140)], true);
}
export function LucideSquare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$695), true);
}
export function LucideSquaresExclude(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3792), _$ssr(_tmpl$3793)], true);
}
export function LucideSquaresIntersect(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3794), _$ssr(_tmpl$3795), _$ssr(_tmpl$3735), _$ssr(_tmpl$3796), _$ssr(_tmpl$3797), _$ssr(_tmpl$3798), _$ssr(_tmpl$3799), _$ssr(_tmpl$3800), _$ssr(_tmpl$3801), _$ssr(_tmpl$3802), _$ssr(_tmpl$3803)], true);
}
export function LucideSquaresSubtract(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3794), _$ssr(_tmpl$3735), _$ssr(_tmpl$3804), _$ssr(_tmpl$3798), _$ssr(_tmpl$3799), _$ssr(_tmpl$3800)], true);
}
export function LucideSquaresUnite(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3805), true);
}
export function LucideSquircleDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3806), _$ssr(_tmpl$3807), _$ssr(_tmpl$3808), _$ssr(_tmpl$3809), _$ssr(_tmpl$3810), _$ssr(_tmpl$3811), _$ssr(_tmpl$3812), _$ssr(_tmpl$3813)], true);
}
export function LucideSquircle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3814), true);
}
export function LucideSquirrel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3815), _$ssr(_tmpl$3816), _$ssr(_tmpl$3817), _$ssr(_tmpl$3818)], true);
}
export function LucideStamp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3819), _$ssr(_tmpl$3820), _$ssr(_tmpl$2299)], true);
}
export function LucideStarHalf(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3821), true);
}
export function LucideStarOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3822), _$ssr(_tmpl$3823), _$ssr(_tmpl$422)], true);
}
export function LucideStar(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3824), true);
}
export function LucideStepBack(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$988), _$ssr(_tmpl$3825)], true);
}
export function LucideStepForward(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3826), _$ssr(_tmpl$3827)], true);
}
export function LucideStethoscope(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3828), _$ssr(_tmpl$3829), _$ssr(_tmpl$3830), _$ssr(_tmpl$3831), _$ssr(_tmpl$3832)], true);
}
export function LucideSticker(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3833), _$ssr(_tmpl$3834), _$ssr(_tmpl$3835), _$ssr(_tmpl$3836), _$ssr(_tmpl$3837)], true);
}
export function LucideStickyNote(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3838), _$ssr(_tmpl$3839)], true);
}
export function LucideStore(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3840), _$ssr(_tmpl$3521), _$ssr(_tmpl$3841), _$ssr(_tmpl$3842), _$ssr(_tmpl$3843)], true);
}
export function LucideStretchHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3844), _$ssr(_tmpl$3845)], true);
}
export function LucideStretchVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3846), _$ssr(_tmpl$3847)], true);
}
export function LucideStrikethrough(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3848), _$ssr(_tmpl$3849), _$ssr(_tmpl$3784)], true);
}
export function LucideSubscript(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3850), _$ssr(_tmpl$3851), _$ssr(_tmpl$3852)], true);
}
export function LucideSunDim(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$291), _$ssr(_tmpl$799), _$ssr(_tmpl$3853), _$ssr(_tmpl$1206), _$ssr(_tmpl$3854), _$ssr(_tmpl$3855), _$ssr(_tmpl$3856), _$ssr(_tmpl$3857), _$ssr(_tmpl$3858)], true);
}
export function LucideSunMedium(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$291), _$ssr(_tmpl$3859), _$ssr(_tmpl$3860), _$ssr(_tmpl$2613), _$ssr(_tmpl$3861), _$ssr(_tmpl$3862), _$ssr(_tmpl$3863), _$ssr(_tmpl$3864), _$ssr(_tmpl$3865)], true);
}
export function LucideSunMoon(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1253), _$ssr(_tmpl$3866), _$ssr(_tmpl$3867), _$ssr(_tmpl$618), _$ssr(_tmpl$3868)], true);
}
export function LucideSunSnow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3869), _$ssr(_tmpl$3870), _$ssr(_tmpl$3871), _$ssr(_tmpl$3661), _$ssr(_tmpl$3662), _$ssr(_tmpl$3872), _$ssr(_tmpl$3664), _$ssr(_tmpl$3612), _$ssr(_tmpl$3666), _$ssr(_tmpl$3873), _$ssr(_tmpl$3874)], true);
}
export function LucideSun(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$291), _$ssr(_tmpl$1253), _$ssr(_tmpl$1393), _$ssr(_tmpl$1254), _$ssr(_tmpl$3875), _$ssr(_tmpl$615), _$ssr(_tmpl$618), _$ssr(_tmpl$3876), _$ssr(_tmpl$1255)], true);
}
export function LucideSunrise(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2195), _$ssr(_tmpl$3877), _$ssr(_tmpl$3878), _$ssr(_tmpl$3879), _$ssr(_tmpl$3880), _$ssr(_tmpl$57), _$ssr(_tmpl$2713), _$ssr(_tmpl$3881)], true);
}
export function LucideSunset(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3882), _$ssr(_tmpl$3877), _$ssr(_tmpl$3878), _$ssr(_tmpl$3879), _$ssr(_tmpl$3880), _$ssr(_tmpl$57), _$ssr(_tmpl$2196), _$ssr(_tmpl$3881)], true);
}
export function LucideSuperscript(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3883), _$ssr(_tmpl$3884), _$ssr(_tmpl$3885)], true);
}
export function LucideSwatchBook(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3886), _$ssr(_tmpl$3887), _$ssr(_tmpl$3888), _$ssr(_tmpl$3889)], true);
}
export function LucideSwissFranc(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3890), _$ssr(_tmpl$3891), _$ssr(_tmpl$3892)], true);
}
export function LucideSwitchCamera(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3893), _$ssr(_tmpl$3894), _$ssr(_tmpl$682), _$ssr(_tmpl$3895), _$ssr(_tmpl$3896)], true);
}
export function LucideSword(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3897), _$ssr(_tmpl$3898), _$ssr(_tmpl$3899), _$ssr(_tmpl$3900)], true);
}
export function LucideSwords(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3897), _$ssr(_tmpl$3898), _$ssr(_tmpl$3899), _$ssr(_tmpl$3900), _$ssr(_tmpl$3901), _$ssr(_tmpl$3902), _$ssr(_tmpl$3903), _$ssr(_tmpl$3904)], true);
}
export function LucideSyringe(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3905), _$ssr(_tmpl$3906), _$ssr(_tmpl$3907), _$ssr(_tmpl$3908), _$ssr(_tmpl$3909), _$ssr(_tmpl$3910)], true);
}
export function LucideTable2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$3911), true);
}
export function LucideTableCellsMerge(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3912), _$ssr(_tmpl$3913), _$ssr(_tmpl$699), _$ssr(_tmpl$700), _$ssr(_tmpl$695)], true);
}
export function LucideTableCellsSplit(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2395), _$ssr(_tmpl$699), _$ssr(_tmpl$700), _$ssr(_tmpl$695)], true);
}
export function LucideTableColumnsSplit(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3914), _$ssr(_tmpl$706), _$ssr(_tmpl$1284), _$ssr(_tmpl$3915), _$ssr(_tmpl$3916), _$ssr(_tmpl$3917), _$ssr(_tmpl$3918), _$ssr(_tmpl$3919), _$ssr(_tmpl$3920), _$ssr(_tmpl$3921), _$ssr(_tmpl$3922)], true);
}
export function LucideTableOfContents(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2526), _$ssr(_tmpl$2546), _$ssr(_tmpl$2527), _$ssr(_tmpl$3923), _$ssr(_tmpl$3924), _$ssr(_tmpl$3925)], true);
}
export function LucideTableProperties(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1315), _$ssr(_tmpl$695), _$ssr(_tmpl$3375), _$ssr(_tmpl$3376)], true);
}
export function LucideTableRowsSplit(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3926), _$ssr(_tmpl$3927), _$ssr(_tmpl$3928), _$ssr(_tmpl$3929), _$ssr(_tmpl$3930), _$ssr(_tmpl$3931), _$ssr(_tmpl$3932), _$ssr(_tmpl$3933), _$ssr(_tmpl$3934), _$ssr(_tmpl$3935), _$ssr(_tmpl$3936)], true);
}
export function LucideTable(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1303), _$ssr(_tmpl$695), _$ssr(_tmpl$700), _$ssr(_tmpl$699)], true);
}
export function LucideTabletSmartphone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3937), _$ssr(_tmpl$3938), _$ssr(_tmpl$805)], true);
}
export function LucideTablet(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$754), _$ssr(_tmpl$3939)], true);
}
export function LucideTablets(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3940), _$ssr(_tmpl$3941), _$ssr(_tmpl$3942), _$ssr(_tmpl$3943)], true);
}
export function LucideTag(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3944), _$ssr(_tmpl$1004)], true);
}
export function LucideTags(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3945), _$ssr(_tmpl$3946), _$ssr(_tmpl$3947)], true);
}
export function LucideTally1(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$2500), true);
}
export function LucideTally2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2500), _$ssr(_tmpl$3948)], true);
}
export function LucideTally3(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2500), _$ssr(_tmpl$3948), _$ssr(_tmpl$3949)], true);
}
export function LucideTally4(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2500), _$ssr(_tmpl$3948), _$ssr(_tmpl$3949), _$ssr(_tmpl$3950)], true);
}
export function LucideTally5(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2500), _$ssr(_tmpl$3948), _$ssr(_tmpl$3949), _$ssr(_tmpl$3950), _$ssr(_tmpl$3951)], true);
}
export function LucideTangent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3952), _$ssr(_tmpl$3953), _$ssr(_tmpl$3954), _$ssr(_tmpl$3955)], true);
}
export function LucideTarget(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$141), _$ssr(_tmpl$1134), _$ssr(_tmpl$376)], true);
}
export function LucideTelescope(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3956), _$ssr(_tmpl$3957), _$ssr(_tmpl$3958), _$ssr(_tmpl$3959), _$ssr(_tmpl$3960), _$ssr(_tmpl$3961), _$ssr(_tmpl$1796)], true);
}
export function LucideTentTree(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2523), _$ssr(_tmpl$3962), _$ssr(_tmpl$3963), _$ssr(_tmpl$3964), _$ssr(_tmpl$3965), _$ssr(_tmpl$3966), _$ssr(_tmpl$3967)], true);
}
export function LucideTent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3968), _$ssr(_tmpl$3969), _$ssr(_tmpl$3970), _$ssr(_tmpl$119)], true);
}
export function LucideTerminal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3971), _$ssr(_tmpl$3972)], true);
}
export function LucideTestTubeDiagonal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3973), _$ssr(_tmpl$3073), _$ssr(_tmpl$3974)], true);
}
export function LucideTestTube(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3975), _$ssr(_tmpl$1864), _$ssr(_tmpl$3976)], true);
}
export function LucideTestTubes(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3977), _$ssr(_tmpl$3978), _$ssr(_tmpl$3979), _$ssr(_tmpl$3980), _$ssr(_tmpl$3981), _$ssr(_tmpl$3982)], true);
}
export function LucideTextCursorInput(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3983), _$ssr(_tmpl$3984), _$ssr(_tmpl$3985), _$ssr(_tmpl$3986), _$ssr(_tmpl$3987)], true);
}
export function LucideTextCursor(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3988), _$ssr(_tmpl$3989), _$ssr(_tmpl$3990)], true);
}
export function LucideTextQuote(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3991), _$ssr(_tmpl$3992), _$ssr(_tmpl$3993), _$ssr(_tmpl$3994)], true);
}
export function LucideTextSearch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$54), _$ssr(_tmpl$3995), _$ssr(_tmpl$2538), _$ssr(_tmpl$3996), _$ssr(_tmpl$3997)], true);
}
export function LucideTextSelect(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2010), _$ssr(_tmpl$2739), _$ssr(_tmpl$2740), _$ssr(_tmpl$3750), _$ssr(_tmpl$3751), _$ssr(_tmpl$2742), _$ssr(_tmpl$3753), _$ssr(_tmpl$2743), _$ssr(_tmpl$3752), _$ssr(_tmpl$2744), _$ssr(_tmpl$2544), _$ssr(_tmpl$3452), _$ssr(_tmpl$3451), _$ssr(_tmpl$2009), _$ssr(_tmpl$2745)], true);
}
export function LucideText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3998), _$ssr(_tmpl$3991), _$ssr(_tmpl$3378)], true);
}
export function LucideTheater(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3999), _$ssr(_tmpl$4000), _$ssr(_tmpl$4001), _$ssr(_tmpl$4002), _$ssr(_tmpl$4003), _$ssr(_tmpl$4004), _$ssr(_tmpl$147), _$ssr(_tmpl$4005), _$ssr(_tmpl$4006)], true);
}
export function LucideThermometerSnowflake(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3659), _$ssr(_tmpl$3660), _$ssr(_tmpl$4007), _$ssr(_tmpl$3665), _$ssr(_tmpl$4008), _$ssr(_tmpl$3668), _$ssr(_tmpl$3669), _$ssr(_tmpl$4009)], true);
}
export function LucideThermometerSun(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4010), _$ssr(_tmpl$4011), _$ssr(_tmpl$4012), _$ssr(_tmpl$4013), _$ssr(_tmpl$4014), _$ssr(_tmpl$4015)], true);
}
export function LucideThermometer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$4016), true);
}
export function LucideThumbsDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3964), _$ssr(_tmpl$4017)], true);
}
export function LucideThumbsUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4018), _$ssr(_tmpl$4019)], true);
}
export function LucideTicketCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4020), _$ssr(_tmpl$325)], true);
}
export function LucideTicketMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4020), _$ssr(_tmpl$337)], true);
}
export function LucideTicketPercent(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4021), _$ssr(_tmpl$341), _$ssr(_tmpl$340), _$ssr(_tmpl$342)], true);
}
export function LucideTicketPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4020), _$ssr(_tmpl$337), _$ssr(_tmpl$696)], true);
}
export function LucideTicketSlash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4020), _$ssr(_tmpl$4022)], true);
}
export function LucideTicketX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4020), _$ssr(_tmpl$4022), _$ssr(_tmpl$3534)], true);
}
export function LucideTicket(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4020), _$ssr(_tmpl$4023), _$ssr(_tmpl$4024), _$ssr(_tmpl$4025)], true);
}
export function LucideTicketsPlane(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4026), _$ssr(_tmpl$4027), _$ssr(_tmpl$4028), _$ssr(_tmpl$4029), _$ssr(_tmpl$4030), _$ssr(_tmpl$771), _$ssr(_tmpl$4031)], true);
}
export function LucideTickets(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4028), _$ssr(_tmpl$4029), _$ssr(_tmpl$4030), _$ssr(_tmpl$771), _$ssr(_tmpl$4031)], true);
}
export function LucideTimerOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$896), _$ssr(_tmpl$4032), _$ssr(_tmpl$4033), _$ssr(_tmpl$31), _$ssr(_tmpl$4034)], true);
}
export function LucideTimerReset(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$896), _$ssr(_tmpl$4035), _$ssr(_tmpl$4036), _$ssr(_tmpl$4037)], true);
}
export function LucideTimer(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4038), _$ssr(_tmpl$4039), _$ssr(_tmpl$4040)], true);
}
export function LucideToggleLeft(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4041), _$ssr(_tmpl$4042)], true);
}
export function LucideToggleRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4043), _$ssr(_tmpl$4042)], true);
}
export function LucideToilet(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4044), _$ssr(_tmpl$4045)], true);
}
export function LucideToolCase(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4046), _$ssr(_tmpl$4047), _$ssr(_tmpl$4048), _$ssr(_tmpl$4049)], true);
}
export function LucideTornado(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4050), _$ssr(_tmpl$4051), _$ssr(_tmpl$4052), _$ssr(_tmpl$4053), _$ssr(_tmpl$4054)], true);
}
export function LucideTorus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4055), _$ssr(_tmpl$4056)], true);
}
export function LucideTouchpadOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4057), _$ssr(_tmpl$4058), _$ssr(_tmpl$4059), _$ssr(_tmpl$31), _$ssr(_tmpl$2417), _$ssr(_tmpl$4060)], true);
}
export function LucideTouchpad(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$167), _$ssr(_tmpl$106), _$ssr(_tmpl$4057)], true);
}
export function LucideTowerControl(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4061), _$ssr(_tmpl$4062), _$ssr(_tmpl$4063), _$ssr(_tmpl$4064), _$ssr(_tmpl$4065), _$ssr(_tmpl$4066), _$ssr(_tmpl$4067)], true);
}
export function LucideToyBrick(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4068), _$ssr(_tmpl$4069), _$ssr(_tmpl$4070)], true);
}
export function LucideTractor(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4071), _$ssr(_tmpl$4072), _$ssr(_tmpl$4073), _$ssr(_tmpl$4074), _$ssr(_tmpl$4075), _$ssr(_tmpl$4076), _$ssr(_tmpl$4077), _$ssr(_tmpl$4078), _$ssr(_tmpl$4079)], true);
}
export function LucideTrafficCone(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4080), _$ssr(_tmpl$4081), _$ssr(_tmpl$4082), _$ssr(_tmpl$4083)], true);
}
export function LucideTrainFrontTunnel(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4084), _$ssr(_tmpl$4085), _$ssr(_tmpl$4086), _$ssr(_tmpl$4087), _$ssr(_tmpl$4088), _$ssr(_tmpl$4089), _$ssr(_tmpl$4090)], true);
}
export function LucideTrainFront(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4091), _$ssr(_tmpl$4092), _$ssr(_tmpl$4093), _$ssr(_tmpl$4094), _$ssr(_tmpl$4095), _$ssr(_tmpl$4096)], true);
}
export function LucideTrainTrack(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4097), _$ssr(_tmpl$4098), _$ssr(_tmpl$4099), _$ssr(_tmpl$3715), _$ssr(_tmpl$4100), _$ssr(_tmpl$4101), _$ssr(_tmpl$4102)], true);
}
export function LucideTramFront(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$767), _$ssr(_tmpl$768), _$ssr(_tmpl$4103), _$ssr(_tmpl$4095), _$ssr(_tmpl$4104), _$ssr(_tmpl$769), _$ssr(_tmpl$770)], true);
}
export function LucideTransgender(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$155), _$ssr(_tmpl$4105), _$ssr(_tmpl$4106), _$ssr(_tmpl$4107), _$ssr(_tmpl$4108), _$ssr(_tmpl$4109), _$ssr(_tmpl$4110), _$ssr(_tmpl$291)], true);
}
export function LucideTrash2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$86), _$ssr(_tmpl$4111), _$ssr(_tmpl$4112), _$ssr(_tmpl$4113), _$ssr(_tmpl$4114)], true);
}
export function LucideTrash(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$86), _$ssr(_tmpl$4111), _$ssr(_tmpl$4112)], true);
}
export function LucideTreeDeciduous(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4115), _$ssr(_tmpl$2593)], true);
}
export function LucideTreePalm(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4116), _$ssr(_tmpl$4117), _$ssr(_tmpl$4118), _$ssr(_tmpl$4119)], true);
}
export function LucideTreePine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4120), _$ssr(_tmpl$4121)], true);
}
export function LucideTrees(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4122), _$ssr(_tmpl$4123), _$ssr(_tmpl$4124), _$ssr(_tmpl$4125)], true);
}
export function LucideTrello(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$40), _$ssr(_tmpl$4126), _$ssr(_tmpl$4127)], true);
}
export function LucideTrendingDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4128), _$ssr(_tmpl$4129)], true);
}
export function LucideTrendingUpDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4130), _$ssr(_tmpl$1623), _$ssr(_tmpl$4131), _$ssr(_tmpl$1624)], true);
}
export function LucideTrendingUp(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4132), _$ssr(_tmpl$4133)], true);
}
export function LucideTriangleAlert(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4134), _$ssr(_tmpl$1805), _$ssr(_tmpl$1131)], true);
}
export function LucideTriangleDashed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4135), _$ssr(_tmpl$4136), _$ssr(_tmpl$4137), _$ssr(_tmpl$4138), _$ssr(_tmpl$4139), _$ssr(_tmpl$4140), _$ssr(_tmpl$4141), _$ssr(_tmpl$4142), _$ssr(_tmpl$4143)], true);
}
export function LucideTriangleRight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$4144), true);
}
export function LucideTriangle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$4145), true);
}
export function LucideTrophy(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4146), _$ssr(_tmpl$4147), _$ssr(_tmpl$4148), _$ssr(_tmpl$4149), _$ssr(_tmpl$4150), _$ssr(_tmpl$4151)], true);
}
export function LucideTruckElectric(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4152), _$ssr(_tmpl$4153), _$ssr(_tmpl$4154), _$ssr(_tmpl$4155), _$ssr(_tmpl$4156), _$ssr(_tmpl$4157), _$ssr(_tmpl$4158)], true);
}
export function LucideTruck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$122), _$ssr(_tmpl$4159), _$ssr(_tmpl$4160), _$ssr(_tmpl$126), _$ssr(_tmpl$127)], true);
}
export function LucideTurtle(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4161), _$ssr(_tmpl$4162), _$ssr(_tmpl$4163), _$ssr(_tmpl$4164)], true);
}
export function LucideTvMinimalPlay(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2824), _$ssr(_tmpl$3399), _$ssr(_tmpl$2806)], true);
}
export function LucideTvMinimal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3399), _$ssr(_tmpl$2806)], true);
}
export function LucideTv(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4165), _$ssr(_tmpl$4166)], true);
}
export function LucideTwitch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$4167), true);
}
export function LucideTwitter(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$4168), true);
}
export function LucideTypeOutline(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$4169), true);
}
export function LucideType(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4170), _$ssr(_tmpl$4171), _$ssr(_tmpl$4172)], true);
}
export function LucideUmbrellaOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3613), _$ssr(_tmpl$4173), _$ssr(_tmpl$4174), _$ssr(_tmpl$31)], true);
}
export function LucideUmbrella(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4175), _$ssr(_tmpl$4176), _$ssr(_tmpl$3613)], true);
}
export function LucideUnderline(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4177), _$ssr(_tmpl$4178)], true);
}
export function LucideUndo2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1390), _$ssr(_tmpl$4179)], true);
}
export function LucideUndoDot(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4180), _$ssr(_tmpl$4181), _$ssr(_tmpl$3274)], true);
}
export function LucideUndo(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4181), _$ssr(_tmpl$4182)], true);
}
export function LucideUnfoldHorizontal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4183), _$ssr(_tmpl$4184), _$ssr(_tmpl$1253), _$ssr(_tmpl$1872), _$ssr(_tmpl$1871), _$ssr(_tmpl$1393), _$ssr(_tmpl$4185), _$ssr(_tmpl$2885)], true);
}
export function LucideUnfoldVertical(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1904), _$ssr(_tmpl$1905), _$ssr(_tmpl$1877), _$ssr(_tmpl$1878), _$ssr(_tmpl$1879), _$ssr(_tmpl$1880), _$ssr(_tmpl$2883), _$ssr(_tmpl$4186)], true);
}
export function LucideUngroup(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4187), _$ssr(_tmpl$4188)], true);
}
export function LucideUniversity(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4189), _$ssr(_tmpl$373), _$ssr(_tmpl$4190), _$ssr(_tmpl$4191), _$ssr(_tmpl$375), _$ssr(_tmpl$4192), _$ssr(_tmpl$4193)], true);
}
export function LucideUnlink2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$4194), true);
}
export function LucideUnlink(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4195), _$ssr(_tmpl$4196), _$ssr(_tmpl$4197), _$ssr(_tmpl$4198), _$ssr(_tmpl$4199), _$ssr(_tmpl$4200)], true);
}
export function LucideUnplug(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4201), _$ssr(_tmpl$3135), _$ssr(_tmpl$3134), _$ssr(_tmpl$3136), _$ssr(_tmpl$3137), _$ssr(_tmpl$4202)], true);
}
export function LucideUpload(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2360), _$ssr(_tmpl$4203), _$ssr(_tmpl$1530)], true);
}
export function LucideUsb(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4204), _$ssr(_tmpl$4205), _$ssr(_tmpl$4206), _$ssr(_tmpl$4207), _$ssr(_tmpl$4208), _$ssr(_tmpl$4209), _$ssr(_tmpl$4210)], true);
}
export function LucideUserCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4211), _$ssr(_tmpl$4212), _$ssr(_tmpl$4213)], true);
}
export function LucideUserCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4214), _$ssr(_tmpl$4215), _$ssr(_tmpl$4216), _$ssr(_tmpl$4217), _$ssr(_tmpl$4218), _$ssr(_tmpl$4219), _$ssr(_tmpl$4220), _$ssr(_tmpl$4221), _$ssr(_tmpl$4222), _$ssr(_tmpl$4223), _$ssr(_tmpl$4213)], true);
}
export function LucideUserLock(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4224), _$ssr(_tmpl$4225), _$ssr(_tmpl$4226), _$ssr(_tmpl$4227)], true);
}
export function LucideUserMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4212), _$ssr(_tmpl$4213), _$ssr(_tmpl$4228)], true);
}
export function LucideUserPen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4229), _$ssr(_tmpl$2600), _$ssr(_tmpl$4224)], true);
}
export function LucideUserPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4212), _$ssr(_tmpl$4213), _$ssr(_tmpl$4230), _$ssr(_tmpl$4228)], true);
}
export function LucideUserRoundCheck(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4231), _$ssr(_tmpl$4232), _$ssr(_tmpl$2126)], true);
}
export function LucideUserRoundCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1918), _$ssr(_tmpl$825), _$ssr(_tmpl$1919), _$ssr(_tmpl$828), _$ssr(_tmpl$829), _$ssr(_tmpl$830), _$ssr(_tmpl$4233), _$ssr(_tmpl$831), _$ssr(_tmpl$832), _$ssr(_tmpl$4232), _$ssr(_tmpl$834)], true);
}
export function LucideUserRoundMinus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4231), _$ssr(_tmpl$4232), _$ssr(_tmpl$4234)], true);
}
export function LucideUserRoundPen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4235), _$ssr(_tmpl$2600), _$ssr(_tmpl$4232)], true);
}
export function LucideUserRoundPlus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4231), _$ssr(_tmpl$4232), _$ssr(_tmpl$374), _$ssr(_tmpl$4234)], true);
}
export function LucideUserRoundSearch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4232), _$ssr(_tmpl$4233), _$ssr(_tmpl$834), _$ssr(_tmpl$4236)], true);
}
export function LucideUserRoundX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4237), _$ssr(_tmpl$4232), _$ssr(_tmpl$380), _$ssr(_tmpl$381)], true);
}
export function LucideUserRound(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4238), _$ssr(_tmpl$4239)], true);
}
export function LucideUserSearch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4224), _$ssr(_tmpl$4225), _$ssr(_tmpl$1955), _$ssr(_tmpl$1954)], true);
}
export function LucideUserX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4212), _$ssr(_tmpl$4213), _$ssr(_tmpl$4240), _$ssr(_tmpl$4241)], true);
}
export function LucideUser(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4242), _$ssr(_tmpl$4243)], true);
}
export function LucideUsersRound(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4244), _$ssr(_tmpl$4232), _$ssr(_tmpl$4245)], true);
}
export function LucideUsers(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4212), _$ssr(_tmpl$4246), _$ssr(_tmpl$4247), _$ssr(_tmpl$4213)], true);
}
export function LucideUtensilsCrossed(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4248), _$ssr(_tmpl$4249), _$ssr(_tmpl$4250), _$ssr(_tmpl$4251)], true);
}
export function LucideUtensils(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4252), _$ssr(_tmpl$4253), _$ssr(_tmpl$4254)], true);
}
export function LucideUtilityPole(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$47), _$ssr(_tmpl$4255), _$ssr(_tmpl$4256), _$ssr(_tmpl$4257), _$ssr(_tmpl$960), _$ssr(_tmpl$4258), _$ssr(_tmpl$4259)], true);
}
export function LucideVariable(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$3021), _$ssr(_tmpl$3022), _$ssr(_tmpl$354), _$ssr(_tmpl$355)], true);
}
export function LucideVault(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$1004), _$ssr(_tmpl$4260), _$ssr(_tmpl$2401), _$ssr(_tmpl$4261), _$ssr(_tmpl$1007), _$ssr(_tmpl$4262), _$ssr(_tmpl$4263), _$ssr(_tmpl$4264), _$ssr(_tmpl$376)], true);
}
export function LucideVectorSquare(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4265), _$ssr(_tmpl$4266), _$ssr(_tmpl$4267), _$ssr(_tmpl$4268), _$ssr(_tmpl$4269), _$ssr(_tmpl$4270), _$ssr(_tmpl$4271), _$ssr(_tmpl$4272)], true);
}
export function LucideVegan(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4273), _$ssr(_tmpl$4274), _$ssr(_tmpl$4275)], true);
}
export function LucideVenetianMask(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4276), _$ssr(_tmpl$4277), _$ssr(_tmpl$4278)], true);
}
export function LucideVenusAndMars(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2623), _$ssr(_tmpl$155), _$ssr(_tmpl$4279), _$ssr(_tmpl$4280), _$ssr(_tmpl$4281)], true);
}
export function LucideVenus(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4282), _$ssr(_tmpl$199), _$ssr(_tmpl$4283)], true);
}
export function LucideVibrateOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4284), _$ssr(_tmpl$4285), _$ssr(_tmpl$4286), _$ssr(_tmpl$4287), _$ssr(_tmpl$422)], true);
}
export function LucideVibrate(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4284), _$ssr(_tmpl$4285), _$ssr(_tmpl$4288)], true);
}
export function LucideVideoOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4289), _$ssr(_tmpl$4290), _$ssr(_tmpl$31)], true);
}
export function LucideVideo(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4291), _$ssr(_tmpl$4292)], true);
}
export function LucideVideotape(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$167), _$ssr(_tmpl$173), _$ssr(_tmpl$4293), _$ssr(_tmpl$331), _$ssr(_tmpl$4294)], true);
}
export function LucideView(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4295), _$ssr(_tmpl$4296), _$ssr(_tmpl$293), _$ssr(_tmpl$3444)], true);
}
export function LucideVoicemail(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4297), _$ssr(_tmpl$4298), _$ssr(_tmpl$4299)], true);
}
export function LucideVolleyball(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4300), _$ssr(_tmpl$4301), _$ssr(_tmpl$4302), _$ssr(_tmpl$4303), _$ssr(_tmpl$4304), _$ssr(_tmpl$141)], true);
}
export function LucideVolume1(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4305), _$ssr(_tmpl$4306)], true);
}
export function LucideVolume2(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4305), _$ssr(_tmpl$4306), _$ssr(_tmpl$4307)], true);
}
export function LucideVolumeOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4308), _$ssr(_tmpl$4309), _$ssr(_tmpl$31), _$ssr(_tmpl$4310), _$ssr(_tmpl$4311)], true);
}
export function LucideVolumeX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4305), _$ssr(_tmpl$4312), _$ssr(_tmpl$4313)], true);
}
export function LucideVolume(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$4305), true);
}
export function LucideVote(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$325), _$ssr(_tmpl$4314), _$ssr(_tmpl$4315)], true);
}
export function LucideWalletCards(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$695), _$ssr(_tmpl$4316), _$ssr(_tmpl$4317)], true);
}
export function LucideWalletMinimal(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$894), _$ssr(_tmpl$4318)], true);
}
export function LucideWallet(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4319), _$ssr(_tmpl$4320)], true);
}
export function LucideWallpaper(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4321), _$ssr(_tmpl$4322), _$ssr(_tmpl$2808), _$ssr(_tmpl$2807)], true);
}
export function LucideWandSparkles(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4323), _$ssr(_tmpl$2403), _$ssr(_tmpl$4324), _$ssr(_tmpl$4325), _$ssr(_tmpl$1283), _$ssr(_tmpl$4326), _$ssr(_tmpl$4327), _$ssr(_tmpl$4328)], true);
}
export function LucideWand(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4329), _$ssr(_tmpl$4330), _$ssr(_tmpl$148), _$ssr(_tmpl$4331), _$ssr(_tmpl$4332), _$ssr(_tmpl$1477), _$ssr(_tmpl$4333), _$ssr(_tmpl$3718), _$ssr(_tmpl$4334)], true);
}
export function LucideWarehouse(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4335), _$ssr(_tmpl$4336), _$ssr(_tmpl$4337), _$ssr(_tmpl$1017)], true);
}
export function LucideWashingMachine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4338), _$ssr(_tmpl$4339), _$ssr(_tmpl$4340), _$ssr(_tmpl$4341), _$ssr(_tmpl$4342)], true);
}
export function LucideWatch(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4343), _$ssr(_tmpl$4344), _$ssr(_tmpl$4345), _$ssr(_tmpl$1134)], true);
}
export function LucideWavesLadder(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4346), _$ssr(_tmpl$4347), _$ssr(_tmpl$4348), _$ssr(_tmpl$4349), _$ssr(_tmpl$4350)], true);
}
export function LucideWaves(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4351), _$ssr(_tmpl$4352), _$ssr(_tmpl$4347)], true);
}
export function LucideWaypoints(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4353), _$ssr(_tmpl$4354), _$ssr(_tmpl$4355), _$ssr(_tmpl$2544), _$ssr(_tmpl$4356), _$ssr(_tmpl$4357), _$ssr(_tmpl$4358)], true);
}
export function LucideWebcam(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4359), _$ssr(_tmpl$1138), _$ssr(_tmpl$4360), _$ssr(_tmpl$884)], true);
}
export function LucideWebhookOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4361), _$ssr(_tmpl$4362), _$ssr(_tmpl$4363), _$ssr(_tmpl$4364), _$ssr(_tmpl$4365), _$ssr(_tmpl$4366), _$ssr(_tmpl$31)], true);
}
export function LucideWebhook(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4367), _$ssr(_tmpl$4368), _$ssr(_tmpl$4369)], true);
}
export function LucideWeight(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$140), _$ssr(_tmpl$4370)], true);
}
export function LucideWheatOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1070), _$ssr(_tmpl$4371), _$ssr(_tmpl$4372), _$ssr(_tmpl$4373), _$ssr(_tmpl$4374), _$ssr(_tmpl$4375), _$ssr(_tmpl$4376), _$ssr(_tmpl$4377), _$ssr(_tmpl$4378), _$ssr(_tmpl$422)], true);
}
export function LucideWheat(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4379), _$ssr(_tmpl$4372), _$ssr(_tmpl$4380), _$ssr(_tmpl$4381), _$ssr(_tmpl$4375), _$ssr(_tmpl$4376), _$ssr(_tmpl$4382), _$ssr(_tmpl$4383)], true);
}
export function LucideWholeWord(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$911), _$ssr(_tmpl$407), _$ssr(_tmpl$912), _$ssr(_tmpl$913), _$ssr(_tmpl$3684)], true);
}
export function LucideWifiCog(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1918), _$ssr(_tmpl$825), _$ssr(_tmpl$1919), _$ssr(_tmpl$828), _$ssr(_tmpl$829), _$ssr(_tmpl$830), _$ssr(_tmpl$4384), _$ssr(_tmpl$831), _$ssr(_tmpl$832), _$ssr(_tmpl$4385), _$ssr(_tmpl$4386), _$ssr(_tmpl$834)], true);
}
export function LucideWifiHigh(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1206), _$ssr(_tmpl$4387), _$ssr(_tmpl$4388)], true);
}
export function LucideWifiLow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1206), _$ssr(_tmpl$4388)], true);
}
export function LucideWifiOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1206), _$ssr(_tmpl$4388), _$ssr(_tmpl$4389), _$ssr(_tmpl$4390), _$ssr(_tmpl$4391), _$ssr(_tmpl$4392), _$ssr(_tmpl$31)], true);
}
export function LucideWifiPen(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4393), _$ssr(_tmpl$2600), _$ssr(_tmpl$4394), _$ssr(_tmpl$4395)], true);
}
export function LucideWifiZero(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$1206), true);
}
export function LucideWifi(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1206), _$ssr(_tmpl$4393), _$ssr(_tmpl$4387), _$ssr(_tmpl$4388)], true);
}
export function LucideWindArrowDown(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4396), _$ssr(_tmpl$4397), _$ssr(_tmpl$4398), _$ssr(_tmpl$4399)], true);
}
export function LucideWind(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4400), _$ssr(_tmpl$4401), _$ssr(_tmpl$4402)], true);
}
export function LucideWineOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1663), _$ssr(_tmpl$4403), _$ssr(_tmpl$4282), _$ssr(_tmpl$4404), _$ssr(_tmpl$422)], true);
}
export function LucideWine(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$1663), _$ssr(_tmpl$1110), _$ssr(_tmpl$4282), _$ssr(_tmpl$4405)], true);
}
export function LucideWorkflow(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4406), _$ssr(_tmpl$4407), _$ssr(_tmpl$4408)], true);
}
export function LucideWorm(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4409), _$ssr(_tmpl$4410), _$ssr(_tmpl$4411)], true);
}
export function LucideWrapText(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2540), _$ssr(_tmpl$4412), _$ssr(_tmpl$4413), _$ssr(_tmpl$86)], true);
}
export function LucideWrench(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$4414), true);
}
export function LucideX(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4415), _$ssr(_tmpl$4416)], true);
}
export function LucideYoutube(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4417), _$ssr(_tmpl$4418)], true);
}
export function LucideZapOff(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$4419), _$ssr(_tmpl$4420), _$ssr(_tmpl$4421), _$ssr(_tmpl$31)], true);
}
export function LucideZap(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => _$ssr(_tmpl$4422), true);
}
export function LucideZoomIn(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2618), _$ssr(_tmpl$4423), _$ssr(_tmpl$4424), _$ssr(_tmpl$4425)], true);
}
export function LucideZoomOut(props) {
  const merged = mergeProps({
    ...lucideDefaultProps,
    viewBox: '0 0 24 24'
  }, props);
  return _$ssrElement("svg", _$mergeProps(merged, {
    get width() {
      return merged.width ?? merged.size;
    },
    get height() {
      return merged.height ?? merged.size;
    },
    get stroke() {
      return merged.stroke ?? merged.color;
    },
    get fill() {
      return merged.fill;
    }
  }), () => [_$ssr(_tmpl$2618), _$ssr(_tmpl$4423), _$ssr(_tmpl$4425)], true);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,